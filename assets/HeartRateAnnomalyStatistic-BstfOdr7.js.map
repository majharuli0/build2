{"version":3,"file":"HeartRateAnnomalyStatistic-BstfOdr7.js","sources":["../../src/Pages/Elderlies/Components/TabContents/Health/Components/HeartRateAnnomalyStatistic.jsx"],"sourcesContent":["import { useState, useEffect, useContext, useCallback } from \"react\";\nimport Template from \"@/Components/GraphAndChartTemp/Template\";\nimport { getTemplateData } from \"@/Pages/Elderlies/Components/Utiles/utiles\";\nimport BarChart from \"@/Components/GraphAndChart/barChart\";\nimport { CustomContext } from \"@/Context/UseCustomContext\";\nimport dayjs from \"dayjs\";\nimport { getSleepEvents } from \"@/api/deviceReports\";\nimport SkeletonBarChart from \"@/components/Skeleton/SkeletonBarChart\";\n\nexport default function HeartRateAnomalyStatistic({ isSummaryBtn = true }) {\n  const { title, color, icon, dataAnalysis, summaryProps } = getTemplateData(\n    \"Heart Rate Anomaly Statistic\"\n  );\n  const context = useContext(CustomContext);\n  const {\n    chartToDate = \"\",\n    chartFromDate = \"\",\n    elderlyDetails,\n  } = context || {};\n  const [toDate, setToDate] = useState(\n    dayjs().subtract(1, \"day\").format(\"YYYY-MM-DD\")\n  );\n  const [fromDate, setFromDate] = useState(\n    dayjs().subtract(31, \"day\").format(\"YYYY-MM-DD\")\n  );\n  const [heartRate, setHeartRate] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const getHeartRateAnomaly = useCallback(() => {\n    if (!elderlyDetails?.deviceId || !elderlyDetails._id) {\n      setLoading(false);\n      return;\n    }\n    setLoading(true);\n    getSleepEvents({\n      uids: elderlyDetails?.deviceId,\n      elderly_id: elderlyDetails._id,\n      to_date: fromDate,\n      from_date: toDate,\n    })\n      .then((res) => {\n        const filtered = filteredData(res?.data);\n        setHeartRate(filtered);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n      });\n  }, [toDate, fromDate, elderlyDetails]);\n\n  useEffect(() => {\n    getHeartRateAnomaly();\n  }, [getHeartRateAnomaly]);\n\n  useEffect(() => {\n    if (chartToDate && chartFromDate) {\n      setToDate(chartToDate);\n      setFromDate(chartFromDate);\n    }\n  }, [chartToDate, chartFromDate]);\n\n  function filteredData(data) {\n    const result = [];\n    data?.forEach((item) => {\n      const eventDate = item.date;\n      item?.events?.forEach((ev) => {\n        if (ev.event_type === 14 || ev.event_type === 15) {\n          const existingEntry = result.find(\n            (entry) => entry.date === eventDate\n          );\n          if (existingEntry) {\n            existingEntry.anomalyHeartRate += 1;\n          } else {\n            result.push({ date: eventDate, anomalyHeartRate: 1 });\n          }\n        }\n      });\n    });\n    return result;\n  }\n\n  return (\n    <Template\n      title={title}\n      color={color}\n      icon={icon}\n      dataAnalysis={dataAnalysis}\n      isSummaryBtn={isSummaryBtn}\n      summaryProps={summaryProps}\n    >\n      {loading ? (\n        <SkeletonBarChart\n          height={350}\n          chartHeight={280}\n          barGroups={25}\n          barsPerGroup={2}\n          gridLines={5}\n          barWidth={40}\n        />\n      ) : (\n        <BarChart\n          data={heartRate}\n          color={color}\n          dataType=\"number\"\n          fromDate={fromDate}\n          toDate={toDate}\n          chartFor=\"heartRateAnomaly\"\n        />\n      )}\n    </Template>\n  );\n}\n"],"names":["HeartRateAnomalyStatistic","isSummaryBtn","title","color","icon","dataAnalysis","summaryProps","getTemplateData","context","useContext","CustomContext","chartToDate","chartFromDate","elderlyDetails","toDate","setToDate","useState","dayjs","fromDate","setFromDate","heartRate","setHeartRate","loading","setLoading","getHeartRateAnomaly","useCallback","getSleepEvents","res","filtered","filteredData","err","useEffect","data","result","item","eventDate","_a","ev","existingEntry","entry","jsx","Template","SkeletonBarChart","BarChart"],"mappings":"8pBASA,SAAwBA,EAA0B,CAAE,aAAAC,EAAe,IAAQ,CACzE,KAAM,CAAE,MAAAC,EAAO,MAAAC,EAAO,KAAAC,EAAM,aAAAC,EAAc,aAAAC,GAAiBC,EACzD,8BAAA,EAEIC,EAAUC,aAAWC,CAAa,EAClC,CACJ,YAAAC,EAAc,GACd,cAAAC,EAAgB,GAChB,eAAAC,CAAA,EACEL,GAAW,CAAA,EACT,CAACM,EAAQC,CAAS,EAAIC,EAAA,SAC1BC,IAAQ,SAAS,EAAG,KAAK,EAAE,OAAO,YAAY,CAAA,EAE1C,CAACC,EAAUC,CAAW,EAAIH,EAAA,SAC9BC,IAAQ,SAAS,GAAI,KAAK,EAAE,OAAO,YAAY,CAAA,EAE3C,CAACG,EAAWC,CAAY,EAAIL,EAAA,SAAS,CAAE,CAAA,EACvC,CAACM,EAASC,CAAU,EAAIP,WAAS,EAAI,EAErCQ,EAAsBC,EAAAA,YAAY,IAAM,CAC5C,GAAI,EAACZ,GAAA,MAAAA,EAAgB,WAAY,CAACA,EAAe,IAAK,CACpDU,EAAW,EAAK,EAChB,MACF,CACAA,EAAW,EAAI,EACAG,EAAA,CACb,KAAMb,GAAA,YAAAA,EAAgB,SACtB,WAAYA,EAAe,IAC3B,QAASK,EACT,UAAWJ,CAAA,CACZ,EACE,KAAMa,GAAQ,CACP,MAAAC,EAAWC,EAAaF,GAAA,YAAAA,EAAK,IAAI,EACvCN,EAAaO,CAAQ,EACrBL,EAAW,EAAK,CAAA,CACjB,EACA,MAAOO,GAAQ,CACd,QAAQ,IAAIA,CAAG,EACfP,EAAW,EAAK,CAAA,CACjB,CACF,EAAA,CAACT,EAAQI,EAAUL,CAAc,CAAC,EAErCkB,EAAAA,UAAU,IAAM,CACMP,GAAA,EACnB,CAACA,CAAmB,CAAC,EAExBO,EAAAA,UAAU,IAAM,CACVpB,GAAeC,IACjBG,EAAUJ,CAAW,EACrBQ,EAAYP,CAAa,EAC3B,EACC,CAACD,EAAaC,CAAa,CAAC,EAE/B,SAASiB,EAAaG,EAAM,CAC1B,MAAMC,EAAS,CAAA,EACT,OAAAD,GAAA,MAAAA,EAAA,QAASE,GAAS,OACtB,MAAMC,EAAYD,EAAK,MACjBE,EAAAF,GAAA,YAAAA,EAAA,SAAA,MAAAE,EAAQ,QAASC,GAAO,CAC5B,GAAIA,EAAG,aAAe,IAAMA,EAAG,aAAe,GAAI,CAChD,MAAMC,EAAgBL,EAAO,KAC1BM,GAAUA,EAAM,OAASJ,CAAA,EAExBG,EACFA,EAAc,kBAAoB,EAElCL,EAAO,KAAK,CAAE,KAAME,EAAW,iBAAkB,EAAG,CAExD,CAAA,EACD,GAEIF,CACT,CAGE,OAAAO,EAAA,IAACC,EAAA,CACC,MAAAvC,EACA,MAAAC,EACA,KAAAC,EACA,aAAAC,EACA,aAAAJ,EACA,aAAAK,EAEC,SACCgB,EAAAkB,EAAA,IAACE,EAAA,CACC,OAAQ,IACR,YAAa,IACb,UAAW,GACX,aAAc,EACd,UAAW,EACX,SAAU,EAAA,CAAA,EAGZF,EAAA,IAACG,EAAA,CACC,KAAMvB,EACN,MAAAjB,EACA,SAAS,SACT,SAAAe,EACA,OAAAJ,EACA,SAAS,kBAAA,CACX,CAAA,CAAA,CAIR"}