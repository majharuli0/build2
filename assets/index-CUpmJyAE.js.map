{"version":3,"file":"index-CUpmJyAE.js","sources":["../../src/Pages/SubscribedUsers/utiles.jsx","../../src/Pages/SubscribedUsers/index.jsx"],"sourcesContent":["import RefundsRequestModal from \"@/Components/RefundsModal/RefundsRequestModal\";\nimport { Tag, Tooltip } from \"antd\";\nimport { useState } from \"react\";\nimport AdminFiled from \"../../Shared/AdminFiled/AdminFiled\";\nimport { FireTwoTone, StopOutlined, SyncOutlined } from \"@ant-design/icons\";\nimport alipay from \"../../assets/icon/payment-method-icons/alipay.svg\";\nimport jcb from \"../../assets/icon/payment-method-icons/jcb.svg\";\nimport gpay from \"../../assets/icon/payment-method-icons/gpay.svg\";\nimport applepay from \"../../assets/icon/payment-method-icons/applepay.svg\";\nimport unionpay from \"../../assets/icon/payment-method-icons/unionpay.svg\";\nimport mastercard from \"../../assets/icon/payment-method-icons/mastercard.svg\";\nimport paypal from \"../../assets/icon/payment-method-icons/paypal.svg\";\nimport visa from \"../../assets/icon/payment-method-icons/visa.svg\";\nimport SubscriptionUserAction from \"../../Components/ActionManu/SubscriptionUserAction\";\nimport { convertUnixToReadableDate, formatCreatedAt } from \"../../utils/helper\";\nimport SubDetails from \"../../Components/ActionManu/SubDetails\";\n\nconst TransactionIdColumn = ({ transactionId }) => {\n  const [copied, setCopied] = useState(false);\n\n  const handleCopy = () => {\n    navigator.clipboard.writeText(transactionId);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000); // Reset after 2 seconds\n  };\n\n  return (\n    <Tooltip title={copied ? \"Copied!\" : \"Click to copy\"}>\n      <span\n        className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap cursor-pointer\"\n        onClick={handleCopy}\n      >\n        {transactionId}\n      </span>\n    </Tooltip>\n  );\n};\nexport const refundRequestColumns = [\n  {\n    title: \"User\",\n    render: (row) => <AdminFiled data={row} />,\n  },\n  {\n    title: \"Subscription ID\",\n    render: (row) => (\n      <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\n        sub_45asd452rf45rasd\n      </span>\n    ),\n  },\n  {\n    title: \"Subscription Plan\",\n    render: (row) => (\n      <button>\n        <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\n          <FireTwoTone /> AI Monitoring\n        </span>\n      </button>\n    ),\n  },\n  {\n    title: \"Recurring Money\",\n    render: (row) => (\n      <button>\n        <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\n          $ 69 USD\n        </span>\n      </button>\n    ),\n  },\n\n  {\n    title: \"Subscription Expire Date\",\n    render: (row) => (\n      <button>\n        <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\n          1 July, 2026\n        </span>\n      </button>\n    ),\n  },\n  {\n    title: \"Subscription Status\",\n    render: (row) => {\n      const isActive = Math.random() < 0.5; // 50% chance\n      return (\n        <button>\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary\">\n            {isActive ? (\n              <Tag\n                icon={<SyncOutlined spin />}\n                color=\"success\"\n                className=\"font-semibold\"\n              >\n                Active\n              </Tag>\n            ) : (\n              <Tag icon={<StopOutlined />} className=\"font-semibold\">\n                Canceled\n              </Tag>\n            )}\n          </span>\n        </button>\n      );\n    },\n  },\n  {\n    title: \"Default Payment Method\",\n    render: (row) => {\n      const isActive = Math.random() < 0.5; // 50% chance\n      return (\n        <button>\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary flex items-center gap-1\">\n            <img src={visa} alt=\"\" /> **** 3456\n          </span>\n        </button>\n      );\n    },\n  },\n\n  {\n    title: \"Action\",\n    render: (row) => {\n      return (\n        <button>\n          <SubscriptionUserAction />\n        </button>\n      );\n    },\n  },\n];\nexport const subcriptionColumns = [\n  {\n    title: \"Subscription Created At\",\n    render: (row) => (\n      <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\n        {formatCreatedAt(row?.created_at) || \"N/A\"}\n      </span>\n    ),\n  },\n  {\n    title: \"User \",\n    render: (row) => (\n      <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\n        {row?.StripeEventData?.metadata?.user_email || \"N/A\"}\n      </span>\n    ),\n  },\n  {\n    title: \"Subscription ID\",\n    render: (row) => (\n      <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\n        {row?.StripeEventData?.id || \"N/A\"}\n      </span>\n    ),\n  },\n\n  {\n    title: \"Product ID\",\n    render: (row) => (\n      <button>\n        <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\n          {row?.StripeEventData?.plan?.product || \"N/A\"}\n        </span>\n      </button>\n    ),\n  },\n  {\n    title: \"Amount\",\n    render: (row) => (\n      <button>\n        <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap uppercase\">\n          ${row?.real_amount_decimal / 100 || 0} {row?.currency || \"USD\"}\n        </span>\n      </button>\n    ),\n  },\n\n  {\n    title: \"Subscription Expire Date\",\n    render: (row) => (\n      <button>\n        <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\n          {convertUnixToReadableDate(\n            row?.StripeEventData?.current_period_end\n          ) || \"N/A\"}\n        </span>\n      </button>\n    ),\n  },\n  {\n    title: \"Subscription Status\",\n    render: (row) => {\n      const isActive = Math.random() < 0.5; // 50% chance\n      return (\n        <button>\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary\">\n            {/* {isActive ? (\n              <Tag\n                icon={<SyncOutlined spin />}\n                color=\"success\"\n                className=\"font-semibold\"\n              >\n                Active\n              </Tag>\n            ) : (\n              <Tag icon={<StopOutlined />} className=\"font-semibold\">\n                Canceled\n              </Tag>\n            )} */}\n            {row?.StripeEventData?.status === \"canceled\" && (\n              <Tag icon={<StopOutlined />} className=\"font-semibold\">\n                Canceled\n              </Tag>\n            )}\n            {row?.StripeEventData?.status === \"active\" && (\n              <Tag\n                icon={<SyncOutlined spin />}\n                color=\"success\"\n                className=\"font-semibold\"\n              >\n                Active\n              </Tag>\n            )}\n            {row?.StripeEventData?.status === \"trialing\" && (\n              <Tag\n                icon={<SyncOutlined spin />}\n                color=\"warning\"\n                className=\"font-semibold\"\n              >\n                Trialing\n              </Tag>\n            )}\n          </span>\n        </button>\n      );\n    },\n  },\n  {\n    title: \"Details\",\n    render: (row) => {\n      const isActive = Math.random() < 0.5;\n      return (\n        <button>\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary flex items-center gap-1\">\n            <SubDetails data={row} />\n          </span>\n        </button>\n      );\n    },\n  },\n];\n","import { useCallback, useEffect, useState } from \"react\";\nimport { refundRequestColumns, subcriptionColumns } from \"./utiles\";\nimport CustomTable from \"@/Shared/Table/CustomTable\";\nimport { SidebarContext } from \"@/Context/CustomUsertable\";\nimport { getOrders } from \"@/api/ordersManage\";\nimport { fetchUsers } from \"../../redux/features/users/usersSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Input, Select } from \"antd\";\nimport { FiSearch } from \"react-icons/fi\";\nimport { getSubscriptions } from \"../../api/subscriptions\";\n\nexport default function SubscribedUsers() {\n  const [loading, setLoading] = useState(true);\n  const [page, SetPage] = useState({});\n  const [total, setTotal] = useState(0);\n  const [subscribedUsers, setSubscribedUsers] = useState([]);\n  const getSubscriptionsList = useCallback(() => {\n    setLoading(true);\n    getSubscriptions(page)\n      .then((res) => {\n        setSubscribedUsers(res?.data);\n        setTotal(res?.total);\n      })\n      .then((err) => {\n        console.error(\"Error fetching subscriptions:\", err);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [page]);\n  useEffect(() => {\n    getSubscriptionsList();\n  }, [getSubscriptionsList]);\n  return (\n    <>\n      <div\n        id=\"refunds_request\"\n        className=\"w-full flex flex-col gap-4 justify-center items-center bg-white rounded-2xl p-6 mt-6\"\n      >\n        <div\n          id=\"Recently_Closed_Alerts_Header\"\n          className=\"w-full flex justify-between\"\n        >\n          <h2 className=\" text-2xl font-bold text-text-primary\">\n            All Subscribed User\n          </h2>\n          {/* \n          <Input\n            size=\"large\"\n            placeholder=\"Customer name, email...\"\n            prefix={<FiSearch className=\"text-gray-400\" />}\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            className=\" pr-20 border border-gray-300 max-w-[300px]\"\n            style={{ boxShadow: \"none\" }}\n          />\n          <Select\n            defaultValue=\"All\"\n            style={{ width: 150 }}\n            size=\"large\"\n            onChange={handleChange}\n            options={[\n              { value: \"All\", label: \"All Status\" },\n              { value: \"Active\", label: \"Active\" },\n              { value: \"Canceled\", label: \"Canceled\" },\n            ]}\n          /> */}\n        </div>\n        <SidebarContext.Provider\n          value={{\n            total: total,\n            page,\n            SetPage,\n            getList: getSubscriptionsList,\n          }}\n        >\n          <CustomTable\n            loading={loading}\n            columns={subcriptionColumns}\n            tableData={subscribedUsers}\n            showPagination={false}\n          />\n        </SidebarContext.Provider>\n      </div>\n    </>\n  );\n}\n"],"names":["subcriptionColumns","row","jsx","formatCreatedAt","_b","_a","jsxs","convertUnixToReadableDate","Tag","StopOutlined","SyncOutlined","_c","SubDetails","SubscribedUsers","loading","setLoading","useState","page","SetPage","total","setTotal","subscribedUsers","setSubscribedUsers","getSubscriptionsList","useCallback","getSubscriptions","res","err","useEffect","Fragment","SidebarContext","CustomTable"],"mappings":"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"}