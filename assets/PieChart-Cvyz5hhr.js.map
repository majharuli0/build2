{"version":3,"file":"PieChart-Cvyz5hhr.js","sources":["../../src/Components/GraphAndChart/PieChart.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport ReactECharts from \"echarts-for-react\";\r\nimport { formatTimeToHoursAndMinutes } from \"@/utils/helper\";\r\n\r\n// Sleep Score Pie Chart Component\r\nexport default function SleepScorePieChart({\r\n  sleepData = [],\r\n  sleepScore = \"\",\r\n}) {\r\n  const chartRef = useRef(null);\r\n\r\n  // Filter to include only light and deep sleep\r\n  const filterSleepData = (data) =>\r\n    data.filter(\r\n      (item) =>\r\n        item.status === \"0\" || item.status === \"1\" || item.status === \"7\"\r\n    );\r\n\r\n  // Calculate total sleep in hours and minutes\r\n  const calculateTotalSleep = (data) => {\r\n    const filteredData = filterSleepData(data);\r\n    const totalMinutes = filteredData.reduce(\r\n      (sum, item) => sum + Number(item.value),\r\n      0\r\n    );\r\n    const hours = Math.floor(totalMinutes / 60);\r\n    const minutes = totalMinutes % 60;\r\n    return { hours, minutes };\r\n  };\r\n\r\n  const totalSleep = calculateTotalSleep(sleepData);\r\n\r\n  // Map and translate data for the pie chart\r\n  const statusMap = {\r\n    0: \"Deep Sleep\",\r\n    1: \"Light Sleep\",\r\n    7: \"REM\",\r\n  };\r\n\r\n  const filteredData = filterSleepData(sleepData);\r\n  const formattedData = filteredData.map((item) => ({\r\n    name: statusMap[item.status],\r\n    value: item.value,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      if (chartRef.current) {\r\n        chartRef.current.getEchartsInstance().resize();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  const option = {\r\n    tooltip: {\r\n      trigger: \"item\",\r\n      formatter: (params) => {\r\n        const sleepDuration = formatTimeToHoursAndMinutes(params.value); // Get the sleep duration for each section\r\n        return `${params.name}: ${sleepDuration} (${params.percent}%)`;\r\n      },\r\n    },\r\n    legend: {\r\n      show: true,\r\n      orient: \"horizontal\",\r\n      bottom: 0,\r\n      left: \"center\",\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Sleep Stages\",\r\n        type: \"pie\",\r\n        radius: [\"40%\", \"70%\"],\r\n        avoidLabelOverlap: false,\r\n        data: formattedData, // Use filtered data\r\n        emphasis: {\r\n          itemStyle: {\r\n            shadowBlur: 10,\r\n            shadowOffsetX: 0,\r\n            shadowColor: \"rgba(0, 0, 0, 0.5)\",\r\n          },\r\n        },\r\n        itemStyle: {\r\n          borderRadius: 10,\r\n          borderColor: \"#fff\",\r\n          borderWidth: 2,\r\n        },\r\n        label: {\r\n          show: true,\r\n          position: \"center\",\r\n          formatter: () =>\r\n            `{c|${totalSleep.hours}h ${totalSleep.minutes}m}\\n{a|Total Duration}`,\r\n          rich: {\r\n            a: {\r\n              fontSize: 12,\r\n              fontWeight: \"normal\",\r\n              color: \"#999\",\r\n              marginTop: 5,\r\n            },\r\n            c: {\r\n              fontSize: 30,\r\n              fontWeight: \"bold\",\r\n              color: \"#000\",\r\n              padding: [10, 0, 0, 0],\r\n            },\r\n          },\r\n        },\r\n        labelLine: {\r\n          show: false,\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <ReactECharts\r\n      ref={chartRef}\r\n      option={option}\r\n      style={{ height: 380, width: \"100%\" }}\r\n    />\r\n  );\r\n}\r\n"],"names":["SleepScorePieChart","sleepData","sleepScore","chartRef","useRef","filterSleepData","data","item","totalSleep","totalMinutes","sum","hours","minutes","statusMap","formattedData","useEffect","handleResize","option","params","sleepDuration","formatTimeToHoursAndMinutes","jsx","ReactECharts"],"mappings":"uYAKA,SAAwBA,EAAmB,CACzC,UAAAC,EAAY,CAAC,EACb,WAAAC,EAAa,EACf,EAAG,CACK,MAAAC,EAAWC,SAAO,IAAI,EAGtBC,EAAmBC,GACvBA,EAAK,OACFC,GACCA,EAAK,SAAW,KAAOA,EAAK,SAAW,KAAOA,EAAK,SAAW,GAAA,EAe9DC,GAXuBF,GAAS,CAEpC,MAAMG,EADeJ,EAAgBC,CAAI,EACP,OAChC,CAACI,EAAKH,IAASG,EAAM,OAAOH,EAAK,KAAK,EACtC,CAAA,EAEII,EAAQ,KAAK,MAAMF,EAAe,EAAE,EACpCG,EAAUH,EAAe,GACxB,MAAA,CAAE,MAAAE,EAAO,QAAAC,EAAQ,GAGaX,CAAS,EAG1CY,EAAY,CAChB,EAAG,aACH,EAAG,cACH,EAAG,KAAA,EAICC,EADeT,EAAgBJ,CAAS,EACX,IAAKM,IAAU,CAChD,KAAMM,EAAUN,EAAK,MAAM,EAC3B,MAAOA,EAAK,KACZ,EAAA,EAEFQ,EAAAA,UAAU,IAAM,CACd,MAAMC,EAAe,IAAM,CACrBb,EAAS,SACFA,EAAA,QAAQ,mBAAmB,EAAE,OAAO,CAC/C,EAGK,cAAA,iBAAiB,SAAUa,CAAY,EACvC,IAAM,CACJ,OAAA,oBAAoB,SAAUA,CAAY,CAAA,CAErD,EAAG,CAAE,CAAA,EAEL,MAAMC,EAAS,CACb,QAAS,CACP,QAAS,OACT,UAAYC,GAAW,CACf,MAAAC,EAAgBC,EAA4BF,EAAO,KAAK,EAC9D,MAAO,GAAGA,EAAO,IAAI,KAAKC,CAAa,KAAKD,EAAO,OAAO,IAC5D,CACF,EACA,OAAQ,CACN,KAAM,GACN,OAAQ,aACR,OAAQ,EACR,KAAM,QACR,EACA,OAAQ,CACN,CACE,KAAM,eACN,KAAM,MACN,OAAQ,CAAC,MAAO,KAAK,EACrB,kBAAmB,GACnB,KAAMJ,EACN,SAAU,CACR,UAAW,CACT,WAAY,GACZ,cAAe,EACf,YAAa,oBACf,CACF,EACA,UAAW,CACT,aAAc,GACd,YAAa,OACb,YAAa,CACf,EACA,MAAO,CACL,KAAM,GACN,SAAU,SACV,UAAW,IACT,MAAMN,EAAW,KAAK,KAAKA,EAAW,OAAO;AAAA,oBAC/C,KAAM,CACJ,EAAG,CACD,SAAU,GACV,WAAY,SACZ,MAAO,OACP,UAAW,CACb,EACA,EAAG,CACD,SAAU,GACV,WAAY,OACZ,MAAO,OACP,QAAS,CAAC,GAAI,EAAG,EAAG,CAAC,CACvB,CACF,CACF,EACA,UAAW,CACT,KAAM,EACR,CACF,CACF,CAAA,EAIA,OAAAa,EAAA,IAACC,EAAA,CACC,IAAKnB,EACL,OAAAc,EACA,MAAO,CAAE,OAAQ,IAAK,MAAO,MAAO,CAAA,CAAA,CAG1C"}