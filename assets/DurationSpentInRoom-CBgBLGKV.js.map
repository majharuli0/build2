{"version":3,"file":"DurationSpentInRoom-CBgBLGKV.js","sources":["../../src/Pages/Elderlies/Components/TabContents/Activity/Components/DurationSpentInRoom.jsx"],"sourcesContent":["import { useState, useEffect, useContext, useCallback } from \"react\";\nimport { getWalkStepsStatistics } from \"@/api/deviceReports\";\nimport Template from \"@/Components/GraphAndChartTemp/Template\";\nimport { getTemplateData } from \"@/Pages/Elderlies/Components/Utiles/utiles\";\nimport MultibarChart from \"@/Components/GraphAndChart/multibarChart\";\nimport { CustomContext } from \"@/Context/UseCustomContext\";\nimport dayjs from \"dayjs\";\nimport SkeletonBarChart from \"@/components/Skeleton/SkeletonBarChart\";\n\nexport default function DurationSpentInRoom() {\n  const { title, color, icon, dataAnalysis, summaryProps } = getTemplateData(\n    \"Duration Spent In Room\"\n  );\n\n  const context = useContext(CustomContext);\n  const {\n    chartToDate = \"\",\n    chartFromDate = \"\",\n    elderlyDetails,\n  } = context || {};\n  const [toDate, setToDate] = useState(\n    dayjs().subtract(1, \"day\").format(\"YYYY-MM-DD\")\n  );\n  const [fromDate, setFromDate] = useState(\n    dayjs().subtract(31, \"day\").format(\"YYYY-MM-DD\")\n  );\n  const [durationInRoom, setDurationInRoom] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const getWalkSpeedStatisticsData = useCallback(() => {\n    if (!elderlyDetails?.deviceId || !elderlyDetails._id) {\n      setLoading(false);\n      return;\n    }\n    setLoading(true);\n    getWalkStepsStatistics({\n      uids: elderlyDetails?.deviceId,\n      elderly_id: elderlyDetails._id,\n      to_date: fromDate,\n      from_date: toDate,\n    })\n      .then((res) => {\n        setDurationInRoom(filterData(res?.data));\n        console.log(filterData(res?.data));\n\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n      });\n  }, [toDate, fromDate, elderlyDetails]);\n\n  useEffect(() => {\n    getWalkSpeedStatisticsData();\n  }, [getWalkSpeedStatisticsData]);\n\n  useEffect(() => {\n    if (chartToDate && chartFromDate) {\n      setToDate(chartToDate);\n      setFromDate(chartFromDate);\n    }\n  }, [chartToDate, chartFromDate]);\n\n  function filterData(data) {\n    const result = [];\n    data?.forEach((item) => {\n      const date = dayjs(item.datestr).subtract(1, \"day\").format(\"YYYY-MM-DD\");\n      const entry = {\n        date: date,\n        data: [],\n      };\n      if (item.user_activity.static_duration !== undefined) {\n        entry.data.push({\n          name: \"still_time\",\n          value: convertDurationToMinutes(item.user_activity.static_duration),\n          status: \"30\",\n        });\n      }\n\n      if (item.user_activity.walk_duration !== undefined) {\n        entry.data.push({\n          name: \"walking_duration\",\n          value: convertDurationToMinutes(item.user_activity.walk_duration),\n          status: \"31\",\n        });\n      }\n\n      if (item.user_activity.other_duration !== undefined) {\n        entry.data.push({\n          name: \"other_duration\",\n          value: convertDurationToMinutes(item.user_activity.other_duration),\n          status: \"32\",\n        });\n      }\n\n      result.push(entry);\n    });\n\n    return result;\n  }\n\n  function convertDurationToMinutes(duration) {\n    const [hours, minutes, seconds] = duration.split(\":\").map(Number);\n    return hours * 60 + minutes + seconds / 60;\n  }\n\n  return (\n    <Template\n      title={title}\n      color={color}\n      icon={icon}\n      dataAnalysis={dataAnalysis}\n      summaryProps={summaryProps}\n    >\n      {loading ? (\n        <SkeletonBarChart\n          height={350}\n          chartHeight={280}\n          barGroups={10}\n          barsPerGroup={8}\n          gridLines={5}\n          barWidth={40}\n        />\n      ) : (\n        <MultibarChart\n          data={durationInRoom}\n          fromDate={fromDate}\n          toDate={toDate}\n        />\n      )}\n    </Template>\n  );\n}\n"],"names":["DurationSpentInRoom","title","color","icon","dataAnalysis","summaryProps","getTemplateData","context","useContext","CustomContext","chartToDate","chartFromDate","elderlyDetails","toDate","setToDate","useState","dayjs","fromDate","setFromDate","durationInRoom","setDurationInRoom","loading","setLoading","getWalkSpeedStatisticsData","useCallback","getWalkStepsStatistics","res","filterData","err","useEffect","data","result","item","entry","convertDurationToMinutes","duration","hours","minutes","seconds","jsx","Template","SkeletonBarChart","MultibarChart"],"mappings":"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"}