{"version":3,"file":"SleepEvents-DP6uMNVR.js","sources":["../../src/Pages/Elderlies/Components/TabContents/Sleep/Components/SleepEvents.jsx"],"sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport TimelineBar from \"@/Components/GraphAndChart/TimelineBar\";\nimport { getSleepEvents } from \"@/api/deviceReports\";\nimport { FaTimeline } from \"react-icons/fa6\";\nimport Template from \"@/Components/GraphAndChartTemp/Template\";\nimport { SidebarContext } from \"@/Context/CustomContext\";\nimport { transformTime } from \"@/utils/helper\";\nimport { CustomContext } from \"@/Context/UseCustomContext\";\nimport SkeletonSleepingTimeline from \"@/components/Skeleton/SkeletonSleepingTimeline\";\nimport { formatTimeWithSuffix } from \"../../../../../../utils/helper\";\n\nconst EventItem = ({ count, eventName, color }) => {\n  return (\n    <div\n      className={`flex p-[4px] pr-4 items-center gap-2 rounded-xl`}\n      style={{ backgroundColor: color }}\n    >\n      <span className=\"text-[17px] p-2 py-1 font-bold bg-white rounded-[9px] text-primary\">\n        {count}\n      </span>\n      <span className=\"text-[15px] font-medium text-white leading-[1.2]\">\n        {eventName}\n      </span>\n    </div>\n  );\n};\n\nexport default function SleepEvents() {\n  const { sleepEventsType, sleepEventsColor } = useContext(SidebarContext);\n  const { sleepData, elderlyDetails, sleepDataLoading } =\n    useContext(CustomContext);\n  const [eventCounts, setEventCounts] = useState([]);\n\n  const summaryProps = {\n    title: \"Sleep Events Summary\",\n    pickerTypes: [\"day\", \"range\"],\n    chartType: \"multibar_sleep_events\",\n    dataType: \"time\",\n    color: \"#FF725E\",\n    apisProps: {\n      endpoint: getSleepEvents,\n      query: {\n        uids: elderlyDetails?.bedRoomIds,\n      },\n    },\n  };\n\n  useEffect(() => {\n    if (sleepData?.alarm_events) {\n      const alarmEventCounts = sleepData?.alarm_events.reduce((acc, event) => {\n        const eventName = sleepEventsType[event.event_type];\n        const existingEvent = acc.find((e) => e.event_name === eventName);\n        if (existingEvent) {\n          existingEvent.count += 1;\n        } else {\n          acc.push({\n            event_name: eventName,\n            count: 1,\n            color: sleepEventsColor[eventName],\n          });\n        }\n        return acc;\n      }, []);\n      setEventCounts(alarmEventCounts);\n    }\n  }, [sleepData, sleepEventsType, sleepEventsColor]);\n\n  return (\n    <Template\n      title=\"Sleep Events\"\n      color=\"#FF725E\"\n      icon={<FaTimeline />}\n      isDataAnalysis={false}\n      headerClassName=\"!text-2xl\"\n      summaryProps={summaryProps}\n    >\n      {sleepDataLoading ? (\n        <SkeletonSleepingTimeline />\n      ) : (\n        <>\n          <TimelineBar\n            alarmEvents={sleepData?.alarm_events}\n            enterBedTime={formatTimeWithSuffix(sleepData?.get_bed_idx)}\n            getupAfterTime={formatTimeWithSuffix(sleepData?.leave_bed_idx)}\n            noDataText=\"No Data Detected for Today\"\n          />\n          <div className=\"flex flex-wrap gap-4 items-center justify-center\">\n            {eventCounts.map((event, index) => (\n              <EventItem\n                key={index}\n                count={event.count}\n                eventName={event.event_name}\n                color={event.color}\n              />\n            ))}\n          </div>\n        </>\n      )}\n    </Template>\n  );\n}\n"],"names":["EventItem","count","eventName","color","jsxs","jsx","SleepEvents","sleepEventsType","sleepEventsColor","useContext","SidebarContext","sleepData","elderlyDetails","sleepDataLoading","CustomContext","eventCounts","setEventCounts","useState","summaryProps","getSleepEvents","useEffect","alarmEventCounts","acc","event","existingEvent","e","Template","FaTimeline","SkeletonSleepingTimeline","Fragment","TimelineBar","formatTimeWithSuffix","index"],"mappings":"wlBAWA,MAAMA,EAAY,CAAC,CAAE,MAAAC,EAAO,UAAAC,EAAW,MAAAC,KAEnCC,EAAA,KAAC,MAAA,CACC,UAAW,kDACX,MAAO,CAAE,gBAAiBD,CAAM,EAEhC,SAAA,CAACE,EAAA,IAAA,OAAA,CAAK,UAAU,qEACb,SACHJ,EAAA,EACCI,EAAA,IAAA,OAAA,CAAK,UAAU,mDACb,SACHH,EAAA,CAAA,CAAA,CAAA,EAKN,SAAwBI,GAAc,CACpC,KAAM,CAAE,gBAAAC,EAAiB,iBAAAC,CAAiB,EAAIC,aAAWC,CAAc,EACjE,CAAE,UAAAC,EAAW,eAAAC,EAAgB,iBAAAC,CAAiB,EAClDJ,EAAAA,WAAWK,CAAa,EACpB,CAACC,EAAaC,CAAc,EAAIC,EAAA,SAAS,CAAE,CAAA,EAE3CC,EAAe,CACnB,MAAO,uBACP,YAAa,CAAC,MAAO,OAAO,EAC5B,UAAW,wBACX,SAAU,OACV,MAAO,UACP,UAAW,CACT,SAAUC,EACV,MAAO,CACL,KAAMP,GAAA,YAAAA,EAAgB,UACxB,CACF,CAAA,EAGFQ,OAAAA,EAAAA,UAAU,IAAM,CACd,GAAIT,GAAA,MAAAA,EAAW,aAAc,CAC3B,MAAMU,EAAmBV,GAAA,YAAAA,EAAW,aAAa,OAAO,CAACW,EAAKC,IAAU,CAChE,MAAArB,EAAYK,EAAgBgB,EAAM,UAAU,EAC5CC,EAAgBF,EAAI,KAAMG,GAAMA,EAAE,aAAevB,CAAS,EAChE,OAAIsB,EACFA,EAAc,OAAS,EAEvBF,EAAI,KAAK,CACP,WAAYpB,EACZ,MAAO,EACP,MAAOM,EAAiBN,CAAS,CAAA,CAClC,EAEIoB,CACT,EAAG,CAAE,GACLN,EAAeK,CAAgB,CACjC,CACC,EAAA,CAACV,EAAWJ,EAAiBC,CAAgB,CAAC,EAG/CH,EAAA,IAACqB,EAAA,CACC,MAAM,eACN,MAAM,UACN,WAAOC,EAAW,EAAA,EAClB,eAAgB,GAChB,gBAAgB,YAChB,aAAAT,EAEC,SACCL,EAAAR,EAAAA,IAACuB,EAAyB,CAAA,CAAA,EAGxBxB,EAAA,KAAAyB,WAAA,CAAA,SAAA,CAAAxB,EAAA,IAACyB,EAAA,CACC,YAAanB,GAAA,YAAAA,EAAW,aACxB,aAAcoB,EAAqBpB,GAAA,YAAAA,EAAW,WAAW,EACzD,eAAgBoB,EAAqBpB,GAAA,YAAAA,EAAW,aAAa,EAC7D,WAAW,4BAAA,CACb,EACAN,EAAAA,IAAC,OAAI,UAAU,mDACZ,WAAY,IAAI,CAACkB,EAAOS,IACvB3B,EAAA,IAACL,EAAA,CAEC,MAAOuB,EAAM,MACb,UAAWA,EAAM,WACjB,MAAOA,EAAM,KAAA,EAHRS,CAKR,CAAA,EACH,CAAA,EACF,CAAA,CAAA,CAIR"}