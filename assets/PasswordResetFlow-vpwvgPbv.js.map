{"version":3,"file":"PasswordResetFlow-vpwvgPbv.js","sources":["../../src/Pages/ForgotPassword/ForgotPassword.jsx","../../src/Pages/ForgotPassword/VerifyOTP.jsx","../../src/Pages/ForgotPassword/ResetPassword.jsx","../../src/Pages/ForgotPassword/PasswordResetFlow.jsx"],"sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport CustomButton from \"../../Shared/button/CustomButton\";\nimport { sendOTP } from \"../../api/login-v1\";\nimport toast from \"react-hot-toast\";\nimport CustomErrorToast from \"../../Shared/Tosat/CustomErrorToast\";\nimport CustomToast from \"../../Shared/Tosat/CustomToast\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst ForgotPassword = ({ setStep, setEmail }) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const navigate = useNavigate();\n\n  const onSubmit = async (data) => {\n    sendOTP({ email: data.email })\n      .then((res) => {\n        setEmail(data.email);\n        setStep(\"verify\");\n        toast.custom((t) => (\n          <CustomToast\n            t={t}\n            text={\"OTP sent to your email!\"}\n            title={\"Success!\"}\n          />\n        ));\n      })\n      .catch((err) => {\n        toast.custom((t) => (\n          <CustomErrorToast\n            t={t}\n            text={err?.response?.data?.message || err.response}\n            title={\"Error\"}\n          />\n        ));\n      });\n  };\n\n  return (\n    <div className=\"w-[470px]\">\n      <h1 className=\"font-bold text-[36px] \">Forgot Password</h1>\n      <p className=\"text-gray-600 text-[16px] font-[400] mt-2\">\n        Please Enter Your Email Address To Reset Your Password.\n      </p>\n\n      <form onSubmit={handleSubmit(onSubmit)} className=\"lg:w-[470px] pt-10\">\n        <div className=\"flex flex-col items-start\">\n          <label\n            htmlFor=\"email\"\n            className=\"mb-1 font-[500] text-[14px] text-[#1B2559]\"\n          >\n            Email <span className=\"\">*</span>\n          </label>\n          <input\n            className=\"py-[18px] px-[16px] h-[50px] text-[#3D4854] placeholder:text-[#A3AED0]  rounded-[16px] w-full text-[16px] outline-none  border-[1px] focus:border-primary\"\n            type=\"email\"\n            placeholder=\"mail@simmmple.com\"\n            id=\"email\"\n            {...register(\"email\", {\n              required: {\n                value: true,\n                message: \"Please enter a valid e-mail address\",\n              },\n            })}\n          />\n          {errors.email && (\n            <span className=\"text-sm mt-1 text-red-500\">\n              {errors.email.message}\n            </span>\n          )}\n        </div>\n\n        <CustomButton\n          className=\"w-full h-[50px] font-[700] text-[14px] rounded-[18px] mt-6\"\n          type=\"submit\"\n        >\n          Send OTP\n        </CustomButton>\n        {/* Back to login */}\n        <button\n          type=\"button\"\n          onClick={() => navigate(\"/\")}\n          className=\"text-primary text-base mt-4 hover:text-primary/80 transition w-full mx-auto\"\n        >\n          ← Back to Login\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport CustomButton from \"../../Shared/button/CustomButton\";\nimport toast from \"react-hot-toast\";\nimport CustomToast from \"../../Shared/Tosat/CustomToast\";\nimport CustomErrorToast from \"../../Shared/Tosat/CustomErrorToast\";\nimport { verifyOTP } from \"../../api/login-v1\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst VerifyOTP = ({ setStep, email, setIsOtpVerified }) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const navigate = useNavigate();\n\n  const onSubmit = async (data) => {\n    verifyOTP({ email, otp: data.otp })\n      .then((res) => {\n        setIsOtpVerified(true);\n        setStep(\"reset\");\n        toast.custom((t) => (\n          <CustomToast\n            t={t}\n            text={\"OTP verified successfully!\"}\n            title={\"Success!\"}\n          />\n        ));\n      })\n      .catch((err) => {\n        toast.custom((t) => (\n          <CustomErrorToast\n            t={t}\n            text={err?.response?.data?.message || err.response}\n            title={\"Error\"}\n          />\n        ));\n      });\n    // try {\n    //   const response = await fetch(\"/api/v1/auth/verify-otp\", {\n    //     method: \"POST\",\n    //     headers: { \"Content-Type\": \"application/json\" },\n    //     body: JSON.stringify({ email, otp: data.otp }),\n    //   });\n\n    //   if (response.ok) {\n    //     setIsOtpVerified(true);\n    //     setStep(\"reset\");\n    //     alert(\"OTP verified successfully!\");\n    //   } else {\n    //     throw new Error(\"Invalid OTP\");\n    //   }\n    // } catch (error) {\n    //   alert(error.message);\n    // }\n  };\n\n  return (\n    <div className=\"w-[470px]\">\n      <h1 className=\"font-bold text-[36px]\">Verify OTP</h1>\n      <p className=\"text-gray-600 text-[16px] font-[400] mt-2\">\n        Enter the OTP sent to <span className=\"font-semibold\"> {email}</span>\n      </p>\n\n      <form onSubmit={handleSubmit(onSubmit)} className=\"lg:w-[470px] pt-10\">\n        <div className=\"flex flex-col items-start\">\n          <label\n            htmlFor=\"otp\"\n            className=\"mb-1 font-[500] text-[14px] text-[#1B2559]\"\n          >\n            OTP <span className=\"text-blue-600\">*</span>\n          </label>\n          <input\n            className=\"py-[18px] px-[16px] h-[50px] text-[#3D4854] placeholder:text-[#A3AED0]  rounded-[16px] w-full text-[16px] outline-none  border-[1px] focus:border-primary\"\n            type=\"text\"\n            placeholder=\"Enter OTP\"\n            id=\"otp\"\n            {...register(\"otp\", {\n              required: {\n                value: true,\n                message: \"Please enter the OTP\",\n              },\n              pattern: {\n                value: /^\\d{6}$/,\n                message: \"OTP must be 6 digits\",\n              },\n            })}\n          />\n          {errors.otp && (\n            <span className=\"text-sm mt-1 text-red-500\">\n              {errors.otp.message}\n            </span>\n          )}\n        </div>\n\n        <CustomButton\n          className=\"w-full h-[50px] font-[700] text-[14px] rounded-[18px] mt-6\"\n          type=\"submit\"\n        >\n          Verify OTP\n        </CustomButton>\n        {/* Back to login */}\n        <button\n          type=\"button\"\n          onClick={() => navigate(\"/\")}\n          className=\"text-primary text-base mt-4 hover:text-primary/80 transition w-full mx-auto\"\n        >\n          ← Back to Login\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default VerifyOTP;\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport CustomButton from \"../../Shared/button/CustomButton\";\nimport toast from \"react-hot-toast\";\nimport CustomToast from \"../../Shared/Tosat/CustomToast\";\nimport CustomErrorToast from \"../../Shared/Tosat/CustomErrorToast\";\nimport { resetPassword } from \"../../api/login-v1\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst ResetPassword = ({ setStep, email, setIsOtpVerified }) => {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm();\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const password = watch(\"password\");\n  const navigate = useNavigate();\n\n  const onSubmit = async (data) => {\n    resetPassword({ email, password: data.password })\n      .then((res) => {\n        setIsOtpVerified(true);\n        setStep(\"reset\");\n        toast.custom((t) => (\n          <CustomToast\n            t={t}\n            text={\"Password reset successfully!\"}\n            title={\"Success!\"}\n          />\n        ));\n        navigate(\"/\");\n      })\n      .catch((err) => {\n        toast.custom((t) => (\n          <CustomErrorToast\n            t={t}\n            text={err?.response?.data?.message || err.response}\n            title={\"Error\"}\n          />\n        ));\n      });\n  };\n\n  return (\n    <div className=\"w-[470px]\">\n      <h1 className=\"font-bold text-[36px] \">Reset Password</h1>\n      <p className=\"text-gray-600 text-[16px] font-[400] mt-2\">\n        Enter your new password\n      </p>\n\n      <form onSubmit={handleSubmit(onSubmit)} className=\"lg:w-[470px] pt-10\">\n        <div className=\"flex flex-col items-start mb-5\">\n          <label\n            htmlFor=\"password\"\n            className=\"mb-1 font-[500] text-[14px] text-[#1B2559]\"\n          >\n            Password <span className=\"text-blue-600\">*</span>\n          </label>\n          <div className=\"w-full relative\">\n            <input\n              className=\"py-[18px] px-[16px] h-[50px] text-[#3D4854] placeholder:text-[#A3AED0]  rounded-[16px] w-full text-[16px] outline-none  border-[1px] focus:border-primary\"\n              type={showPassword ? \"text\" : \"password\"}\n              placeholder=\"Enter new password\"\n              id=\"password\"\n              {...register(\"password\", {\n                required: {\n                  value: true,\n                  message: \"Please enter a password\",\n                },\n                minLength: {\n                  value: 8,\n                  message: \"Password must be at least 8 characters\",\n                },\n              })}\n            />\n            <button\n              type=\"button\"\n              className=\"absolute top-[27%] right-[10px]\"\n              onClick={() => setShowPassword(!showPassword)}\n            >\n              {showPassword ? (\n                <svg\n                  className=\"text-[25px] text-black\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M12 6a9.77 9.77 0 0 1 8.82 5.5C19.17 14.87 15.79 17 12 17s-7.17-2.13-8.82-5.5A9.77 9.77 0 0 1 12 6m0-2C7 4 2.73 7.11 1 11.5C2.73 15.89 7 19 12 19s9.27-3.11 11-7.5C21.27 7.11 17 4 12 4m0 5a2.5 2.5 0 0 1 0 5a2.5 2.5 0 0 1 0-5m0-2c-2.48 0-4.5 2.02-4.5 4.5S9.52 16 12 16s4.5-2.02 4.5-4.5S14.48 7 12 7\"\n                  />\n                </svg>\n              ) : (\n                <svg\n                  className=\"text-[25px] text-black\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M2 5.27L3.28 4L20 20.72L18.73 22l-3.08-3.08c-1.15.38-2.37.58-3.65.58c-5 0-9.27-3.11-11-7.5c.69-1.76 1.79-3.31 3.19-4.54zM12 9a3 3 0 0 1 3 3a3 3 0 0 1-.17 1L11 9.17A3 3 0 0 1 12 9m0-4.5c5 0 9.27 3.11 11 7.5a11.79 11.79 0 0 1-4 5.19l-1.42-1.43A9.862 9.862 0 0 0 20.82 12A9.821 9.821 0 0 0 12 6.5c-1.09 0-2.16.18-3.16.5L7.3 5.47c1.44-.62 3.03-.97 4.7-.97M3.18 12A9.821 9.821 0 0 0 12 17.5c.69 0 1.37-.07 2-.21L11.72 15A3.064 3.064 0 0 1 9 12.28L5.6 8.87c-.99.85-1.82 1.91-2.42 3.13\"\n                  />\n                </svg>\n              )}\n            </button>\n          </div>\n          {errors.password && (\n            <span className=\"text-sm mt-1 text-red-500\">\n              {errors.password.message}\n            </span>\n          )}\n        </div>\n\n        <div className=\"flex flex-col items-start\">\n          <label\n            htmlFor=\"confirmPassword\"\n            className=\"mb-1 font-[500] text-[14px] text-[#1B2559]\"\n          >\n            Confirm Password <span className=\"text-blue-600\">*</span>\n          </label>\n          <div className=\"w-full relative\">\n            <input\n              className=\"py-[18px] px-[16px] h-[50px] text-[#3D4854] placeholder:text-[#A3AED0]  rounded-[16px] w-full text-[16px] outline-none  border-[1px] focus:border-primary\"\n              type={showConfirmPassword ? \"text\" : \"password\"}\n              placeholder=\"Confirm new password\"\n              id=\"confirmPassword\"\n              {...register(\"confirmPassword\", {\n                required: {\n                  value: true,\n                  message: \"Please confirm your password\",\n                },\n                validate: (value) =>\n                  value === password || \"Passwords do not match\",\n              })}\n            />\n            <button\n              type=\"button\"\n              className=\"absolute top-[27%] right-[10px]\"\n              onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n            >\n              {showConfirmPassword ? (\n                <svg\n                  className=\"text-[25px] text-black\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M12 6a9.77 9.77 0 0 1 8.82 5.5C19.17 14.87 15.79 17 12 17s-7.17-2.13-8.82-5.5A9.77 9.77 0 0 1 12 6m0-2C7 4 2.73 7.11 1 11.5C2.73 15.89 7 19 12 19s9.27-3.11 11-7.5C21.27 7.11 17 4 12 4m0 5a2.5 2.5 0 0 1 0 5a2.5 2.5 0 0 1 0-5m0-2c-2.48 0-4.5 2.02-4.5 4.5S9.52 16 12 16s4.5-2.02 4.5-4.5S14.48 7 12 7\"\n                  />\n                </svg>\n              ) : (\n                <svg\n                  className=\"text-[25px] text-black\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M2 5.27L3.28 4L20 20.72L18.73 22l-3.08-3.08c-1.15.38-2.37.58-3.65.58c-5 0-9.27-3.11-11-7.5c.69-1.76 1.79-3.31 3.19-4.54zM12 9a3 3 0 0 1 3 3a3 3 0 0 1-.17 1L11 9.17A3 3 0 0 1 12 9m0-4.5c5 0 9.27 3.11 11 7.5a11.79 11.79 0 0 1-4 5.19l-1.42-1.43A9.862 9.862 0 0 0 20.82 12A9.821 9.821 0 0 0 12 6.5c-1.09 0-2.16.18-3.16.5L7.3 5.47c1.44-.62 3.03-.97 4.7-.97M3.18 12A9.821 9.821 0 0 0 12 17.5c.69 0 1.37-.07 2-.21L11.72 15A3.064 3.064 0 0 1 9 12.28L5.6 8.87c-.99.85-1.82 1.91-2.42 3.13\"\n                  />\n                </svg>\n              )}\n            </button>\n          </div>\n          {errors.confirmPassword && (\n            <span className=\"text-sm mt-1 text-red-500\">\n              {errors.confirmPassword.message}\n            </span>\n          )}\n        </div>\n\n        <CustomButton\n          className=\"w-full h-[50px] font-[700] text-[14px] rounded-[18px] mt-6\"\n          type=\"submit\"\n        >\n          Reset Password\n        </CustomButton>\n        {/* Back to login */}\n        <button\n          type=\"button\"\n          onClick={() => navigate(\"/\")}\n          className=\"text-primary text-base mt-4 hover:text-primary/80 transition w-full mx-auto\"\n        >\n          ← Back to Login\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n","import React, { useState, useEffect } from \"react\";\nimport ForgotPassword from \"./ForgotPassword\";\nimport VerifyOTP from \"./VerifyOTP\";\nimport ResetPassword from \"./ResetPassword\";\nimport loginImage from \"@/assets/login_image.svg\";\nimport roleLogo from \"@/assets/roleLogo.svg\";\n\nconst PasswordResetFlow = () => {\n  const [step, setStep] = useState(\"forgot\"); // 'forgot', 'verify', 'reset'\n  const [email, setEmail] = useState(\"\");\n  const [isOtpVerified, setIsOtpVerified] = useState(false);\n\n  // Prevent direct access to reset password page\n  useEffect(() => {\n    if (step === \"reset\" && !isOtpVerified) {\n      setStep(\"forgot\");\n    }\n  }, [step, isOtpVerified]);\n\n  return (\n    <div className=\"md:flex w-full items-center justify-between gap-6 overflow-hidden\">\n      <div className=\"flex items-center h-[100vh] md:w-[50%] w-full justify-center\">\n        <div className=\"lg:w-[700px] h-full flex items-center justify-center px-5\">\n          {step === \"forgot\" && (\n            <ForgotPassword setStep={setStep} setEmail={setEmail} />\n          )}\n          {step === \"verify\" && (\n            <VerifyOTP\n              setStep={setStep}\n              email={email}\n              setIsOtpVerified={setIsOtpVerified}\n            />\n          )}\n          {step === \"reset\" && isOtpVerified && (\n            <ResetPassword\n              setStep={setStep}\n              email={email}\n              setIsOtpVerified={setIsOtpVerified}\n            />\n          )}\n        </div>\n      </div>\n      <div className=\"hidden relative md:h-[100vh] w-full h-full md:w-[50%] md:flex justify-end\">\n        <img\n          className=\"h-full w-full object-cover\"\n          src={loginImage}\n          alt=\"login background\"\n        />\n        <div className=\"absolute top-[50%] left-[50%] flex items-center flex-col justify-center translate-x-[-50%] translate-y-[-50%]\">\n          <img src={roleLogo} alt=\"role logo\" className=\"w-[363px]\" />\n          <p className=\"font-[500] text-[18px] text-white/80 text-center pt-[15px] w-[500px]\">\n            Caring Connections, Empowering Lives: Nurturing Well-being Through\n            Every Click.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PasswordResetFlow;\n"],"names":["ForgotPassword","setStep","setEmail","register","handleSubmit","errors","useForm","navigate","useNavigate","onSubmit","data","sendOTP","res","toast","t","jsx","CustomToast","err","CustomErrorToast","_b","_a","jsxs","CustomButton","VerifyOTP","email","setIsOtpVerified","verifyOTP","ResetPassword","watch","showPassword","setShowPassword","useState","showConfirmPassword","setShowConfirmPassword","password","resetPassword","value","PasswordResetFlow","step","isOtpVerified","useEffect","loginImage","roleLogo"],"mappings":"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"}