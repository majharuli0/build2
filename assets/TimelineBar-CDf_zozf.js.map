{"version":3,"file":"TimelineBar-CDf_zozf.js","sources":["../../src/Components/GraphAndChart/TimelineBar.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext, useMemo } from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport { Empty } from \"antd\";\r\nimport { SidebarContext } from \"@/Context/CustomContext\";\r\n\r\nconst TimelineChart = ({\r\n  alarmEvents = [],\r\n  enterBedTime,\r\n  getupAfterTime,\r\n  noDataText = \"No data available to show\",\r\n}) => {\r\n  const { sleepEventsType, sleepEventsColor } = useContext(SidebarContext);\r\n\r\n  const events = useMemo(\r\n    () =>\r\n      alarmEvents\r\n        .map((event) => ({\r\n          id: `${event.event_type}-${event.ts}`,\r\n          name: sleepEventsType[event.event_type],\r\n          startTime: new Date(event.ts),\r\n          endTime: new Date(event.ts),\r\n          color: sleepEventsColor[sleepEventsType[event.event_type]],\r\n        }))\r\n        .filter((event) => event.name),\r\n    [alarmEvents, sleepEventsType, sleepEventsColor]\r\n  );\r\n\r\n  const displayedEventKeys = [11, 12, 13, 14, 15];\r\n\r\n  const uniqueEventNames = useMemo(\r\n    () => displayedEventKeys.map((key) => sleepEventsType[key]).filter(Boolean),\r\n    [sleepEventsType]\r\n  );\r\n\r\n  const [visibleEvents, setVisibleEvents] = useState(() => {\r\n    return uniqueEventNames.reduce((acc, eventName) => {\r\n      acc[eventName] = true;\r\n      return acc;\r\n    }, {});\r\n  });\r\n\r\n  useEffect(() => {\r\n    const newEvents = uniqueEventNames.filter(\r\n      (name) => !(name in visibleEvents)\r\n    );\r\n    if (newEvents.length > 0) {\r\n      setVisibleEvents((prev) => ({\r\n        ...prev,\r\n        ...newEvents.reduce((acc, name) => ({ ...acc, [name]: true }), {}),\r\n      }));\r\n    }\r\n  }, [uniqueEventNames, visibleEvents]);\r\n\r\n  const toggleEventVisibility = (eventName) => {\r\n    setVisibleEvents((prev) => ({\r\n      ...prev,\r\n      [eventName]: !prev[eventName],\r\n    }));\r\n  };\r\n\r\n  const filteredEvents = useMemo(\r\n    () => events.filter((event) => visibleEvents[event.name]),\r\n    [events, visibleEvents]\r\n  );\r\n\r\n  const minTime = Math.min(...events.map((event) => event.startTime.getTime()));\r\n  const maxTime = Math.max(...events.map((event) => event.endTime.getTime()));\r\n\r\n  const seriesData = useMemo(\r\n    () =>\r\n      filteredEvents.map((event, index) => {\r\n        const isSingleEvent =\r\n          event.startTime.getTime() === event.endTime.getTime();\r\n        return {\r\n          id: index,\r\n          name: event.name,\r\n          value: [\r\n            event.startTime.getTime(),\r\n            event.endTime.getTime(),\r\n            isSingleEvent ? 15 : 10,\r\n          ],\r\n          itemStyle: {\r\n            color: event.color,\r\n          },\r\n        };\r\n      }),\r\n    [filteredEvents]\r\n  );\r\n\r\n  if (events.length === 0) {\r\n    return <Empty description={noDataText} />;\r\n  }\r\n\r\n  const options = {\r\n    tooltip: {\r\n      trigger: \"item\",\r\n      formatter: (params) => {\r\n        const event = filteredEvents[params.data.id];\r\n        const isSingleEvent =\r\n          event.startTime.getTime() === event.endTime.getTime();\r\n        const startTimeLocal = new Date(event.startTime).toLocaleString();\r\n\r\n        if (isSingleEvent) {\r\n          return `${event.name}<br/>Date & Time: ${startTimeLocal}`;\r\n        } else {\r\n          const endTimeLocal = new Date(event.endTime).toLocaleString();\r\n          const durationMs = event.endTime - event.startTime;\r\n          const durationMinutes = Math.floor(durationMs / (1000 * 60));\r\n          const hours = Math.floor(durationMinutes / 60);\r\n          const minutes = durationMinutes % 60;\r\n          const durationStr =\r\n            hours > 0\r\n              ? `${hours} hour(s) ${minutes} minute(s)`\r\n              : `${minutes} minute(s)`;\r\n          return `<b>${event.name}</b> <br/>Start: ${startTimeLocal}<br/>End: ${endTimeLocal}<br/>Duration: ${durationStr}`;\r\n        }\r\n      },\r\n    },\r\n    grid: {\r\n      left: \"5%\",\r\n      right: \"5%\",\r\n      bottom: \"15%\",\r\n      containLabel: false,\r\n    },\r\n    xAxis: {\r\n      type: \"time\",\r\n      boundaryGap: true,\r\n      min: minTime,\r\n      max: maxTime,\r\n      splitNumber: 5,\r\n      axisLabel: {\r\n        formatter: (value) => {\r\n          const date = new Date(value);\r\n          return date.toLocaleTimeString([], {\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n          });\r\n        },\r\n        interval: 0,\r\n        margin: 5,\r\n      },\r\n      axisTick: {\r\n        show: true,\r\n        alignWithLabel: true,\r\n      },\r\n    },\r\n    yAxis: {\r\n      show: false,\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Events\",\r\n        type: \"custom\",\r\n        renderItem: (params, api) => {\r\n          const start = api.coord([api.value(0), 0]);\r\n          const end = api.coord([api.value(1), 0]);\r\n          const barHeight = api.size([0, api.value(2)])[1];\r\n\r\n          const width = Math.max(end[0] - start[0], 5);\r\n\r\n          // Calculate a consistent base Y position\r\n          const baseY = params.coordSys.height - barHeight;\r\n\r\n          // Apply a reduced offset for staggered bars\r\n          const offset = params.dataIndex % 5;\r\n          const yOffset = offset * 2; // Adjust as necessary to minimize vertical shifts\r\n          const yPosition = params.coordSys.height - barHeight + 60;\r\n\r\n          return {\r\n            type: \"rect\",\r\n            shape: {\r\n              x: start[0],\r\n              y: yPosition,\r\n              width: width,\r\n              height: barHeight,\r\n            },\r\n            style: {\r\n              fill: api.style().fill,\r\n              stroke: \"#fff\",\r\n              lineWidth: 1,\r\n            },\r\n          };\r\n        },\r\n\r\n        encode: {\r\n          x: [0, 1],\r\n        },\r\n        data: seriesData,\r\n      },\r\n    ],\r\n    graphic:\r\n      enterBedTime && getupAfterTime\r\n        ? [\r\n            {\r\n              type: \"text\",\r\n              left: \"5%\",\r\n              bottom: \"1%\",\r\n              style: {\r\n                text: `Enter Bed ${enterBedTime}`,\r\n                fontSize: 12,\r\n              },\r\n            },\r\n            {\r\n              type: \"text\",\r\n              right: \"5%\",\r\n              bottom: \"1%\",\r\n              style: {\r\n                text: `Getup ${getupAfterTime}`,\r\n                fontSize: 12,\r\n              },\r\n            },\r\n          ]\r\n        : [],\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center gap-4 w-full\">\r\n      <div id=\"customLegend\" className=\"w-full\">\r\n        <div className=\"flex flex-wrap gap-4 items-center justify-center\">\r\n          {uniqueEventNames.map((eventName) => (\r\n            <div\r\n              key={eventName}\r\n              className=\"flex items-center gap-2 cursor-pointer\"\r\n              onClick={() => toggleEventVisibility(eventName)}\r\n            >\r\n              <div\r\n                id=\"legendColorShape\"\r\n                className=\"size-3 rounded-[4px] border-2\"\r\n                style={{\r\n                  backgroundColor: visibleEvents[eventName]\r\n                    ? sleepEventsColor[eventName]\r\n                    : \"grey\",\r\n                  borderColor: visibleEvents[eventName]\r\n                    ? \"transparent\"\r\n                    : \"#ccc\",\r\n                }}\r\n              ></div>\r\n              <div>{eventName}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <ReactEcharts option={options} style={{ height: 200, width: \"100%\" }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimelineChart;\r\n"],"names":["TimelineChart","alarmEvents","enterBedTime","getupAfterTime","noDataText","sleepEventsType","sleepEventsColor","useContext","SidebarContext","events","useMemo","event","displayedEventKeys","uniqueEventNames","key","visibleEvents","setVisibleEvents","useState","acc","eventName","useEffect","newEvents","name","prev","toggleEventVisibility","filteredEvents","minTime","maxTime","seriesData","index","isSingleEvent","jsx","Empty","options","params","startTimeLocal","endTimeLocal","durationMs","durationMinutes","hours","minutes","durationStr","value","api","start","end","barHeight","width","yPosition","jsxs","ReactEcharts"],"mappings":"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"}