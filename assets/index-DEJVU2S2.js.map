{"version":3,"file":"index-DEJVU2S2.js","sources":["../../src/Pages/SubscribedUsers/utiles.jsx","../../src/Pages/SubscribedUsers/index.jsx"],"sourcesContent":["import RefundsRequestModal from \"@/Components/RefundsModal/RefundsRequestModal\";\r\nimport { Tag, Tooltip } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport AdminFiled from \"../../Shared/AdminFiled/AdminFiled\";\r\nimport { FireTwoTone, StopOutlined, SyncOutlined } from \"@ant-design/icons\";\r\nimport alipay from \"../../assets/icon/payment-method-icons/alipay.svg\";\r\nimport jcb from \"../../assets/icon/payment-method-icons/jcb.svg\";\r\nimport gpay from \"../../assets/icon/payment-method-icons/gpay.svg\";\r\nimport applepay from \"../../assets/icon/payment-method-icons/applepay.svg\";\r\nimport unionpay from \"../../assets/icon/payment-method-icons/unionpay.svg\";\r\nimport mastercard from \"../../assets/icon/payment-method-icons/mastercard.svg\";\r\nimport paypal from \"../../assets/icon/payment-method-icons/paypal.svg\";\r\nimport visa from \"../../assets/icon/payment-method-icons/visa.svg\";\r\nimport SubscriptionUserAction from \"../../Components/ActionManu/SubscriptionUserAction\";\r\nimport { convertUnixToReadableDate, formatCreatedAt } from \"../../utils/helper\";\r\nimport SubDetails from \"../../Components/ActionManu/SubDetails\";\r\n\r\nconst TransactionIdColumn = ({ transactionId }) => {\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(transactionId);\r\n    setCopied(true);\r\n    setTimeout(() => setCopied(false), 2000); // Reset after 2 seconds\r\n  };\r\n\r\n  return (\r\n    <Tooltip title={copied ? \"Copied!\" : \"Click to copy\"}>\r\n      <span\r\n        className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap cursor-pointer\"\r\n        onClick={handleCopy}\r\n      >\r\n        {transactionId}\r\n      </span>\r\n    </Tooltip>\r\n  );\r\n};\r\nexport const refundRequestColumns = [\r\n  {\r\n    title: \"User\",\r\n    render: (row) => <AdminFiled data={row} />,\r\n  },\r\n  {\r\n    title: \"Subscription ID\",\r\n    render: (row) => (\r\n      <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\r\n        sub_45asd452rf45rasd\r\n      </span>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Subscription Plan\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\r\n          <FireTwoTone /> AI Monitoring\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Recurring Money\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\r\n          $ 69 USD\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n\r\n  {\r\n    title: \"Subscription Expire Date\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\r\n          1 July, 2026\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Subscription Status\",\r\n    render: (row) => {\r\n      const isActive = Math.random() < 0.5; // 50% chance\r\n      return (\r\n        <button>\r\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary\">\r\n            {isActive ? (\r\n              <Tag\r\n                icon={<SyncOutlined spin />}\r\n                color=\"success\"\r\n                className=\"font-semibold\"\r\n              >\r\n                Active\r\n              </Tag>\r\n            ) : (\r\n              <Tag icon={<StopOutlined />} className=\"font-semibold\">\r\n                Canceled\r\n              </Tag>\r\n            )}\r\n          </span>\r\n        </button>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    title: \"Default Payment Method\",\r\n    render: (row) => {\r\n      const isActive = Math.random() < 0.5; // 50% chance\r\n      return (\r\n        <button>\r\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary flex items-center gap-1\">\r\n            <img src={visa} alt=\"\" /> **** 3456\r\n          </span>\r\n        </button>\r\n      );\r\n    },\r\n  },\r\n\r\n  {\r\n    title: \"Action\",\r\n    render: (row) => {\r\n      return (\r\n        <button>\r\n          <SubscriptionUserAction />\r\n        </button>\r\n      );\r\n    },\r\n  },\r\n];\r\nexport const subcriptionColumns = [\r\n  {\r\n    title: \"Subscription Created At\",\r\n    render: (row) => (\r\n      <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\r\n        {formatCreatedAt(row?.created_at) || \"N/A\"}\r\n      </span>\r\n    ),\r\n  },\r\n  {\r\n    title: \"User \",\r\n    render: (row) => (\r\n      <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\r\n        {row?.StripeEventData?.metadata?.user_email || \"N/A\"}\r\n      </span>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Subscription ID\",\r\n    render: (row) => (\r\n      <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\r\n        {row?.StripeEventData?.id || \"N/A\"}\r\n      </span>\r\n    ),\r\n  },\r\n\r\n  {\r\n    title: \"Product ID\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\r\n          {row?.StripeEventData?.plan?.product || \"N/A\"}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Amount\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap uppercase\">\r\n          ${row?.real_amount_decimal / 100 || 0} {row?.currency || \"USD\"}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n\r\n  {\r\n    title: \"Subscription Expire Date\",\r\n    render: (row) => (\r\n      <button>\r\n        <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary text-nowrap\">\r\n          {convertUnixToReadableDate(\r\n            row?.StripeEventData?.current_period_end\r\n          ) || \"N/A\"}\r\n        </span>\r\n      </button>\r\n    ),\r\n  },\r\n  {\r\n    title: \"Subscription Status\",\r\n    render: (row) => {\r\n      const isActive = Math.random() < 0.5; // 50% chance\r\n      return (\r\n        <button>\r\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary\">\r\n            {/* {isActive ? (\r\n              <Tag\r\n                icon={<SyncOutlined spin />}\r\n                color=\"success\"\r\n                className=\"font-semibold\"\r\n              >\r\n                Active\r\n              </Tag>\r\n            ) : (\r\n              <Tag icon={<StopOutlined />} className=\"font-semibold\">\r\n                Canceled\r\n              </Tag>\r\n            )} */}\r\n            {row?.StripeEventData?.status === \"canceled\" && (\r\n              <Tag icon={<StopOutlined />} className=\"font-semibold\">\r\n                Canceled\r\n              </Tag>\r\n            )}\r\n            {row?.StripeEventData?.status === \"active\" && (\r\n              <Tag\r\n                icon={<SyncOutlined spin />}\r\n                color=\"success\"\r\n                className=\"font-semibold\"\r\n              >\r\n                Active\r\n              </Tag>\r\n            )}\r\n            {row?.StripeEventData?.status === \"trialing\" && (\r\n              <Tag\r\n                icon={<SyncOutlined spin />}\r\n                color=\"warning\"\r\n                className=\"font-semibold\"\r\n              >\r\n                Trialing\r\n              </Tag>\r\n            )}\r\n          </span>\r\n        </button>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    title: \"Details\",\r\n    render: (row) => {\r\n      const isActive = Math.random() < 0.5;\r\n      return (\r\n        <button>\r\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary flex items-center gap-1\">\r\n            <SubDetails data={row} />\r\n          </span>\r\n        </button>\r\n      );\r\n    },\r\n  },\r\n];\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport { refundRequestColumns, subcriptionColumns } from \"./utiles\";\r\nimport CustomTable from \"@/Shared/Table/CustomTable\";\r\nimport { SidebarContext } from \"@/Context/CustomUsertable\";\r\nimport { getOrders } from \"@/api/ordersManage\";\r\nimport { fetchUsers } from \"../../redux/features/users/usersSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Input, Select } from \"antd\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport { getSubscriptions } from \"../../api/subscriptions\";\r\n\r\nexport default function SubscribedUsers() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [page, SetPage] = useState({});\r\n  const [total, setTotal] = useState(0);\r\n  const [subscribedUsers, setSubscribedUsers] = useState([]);\r\n  const getSubscriptionsList = useCallback(() => {\r\n    setLoading(true);\r\n    getSubscriptions(page)\r\n      .then((res) => {\r\n        setSubscribedUsers(res?.data);\r\n        setTotal(res?.total);\r\n      })\r\n      .then((err) => {\r\n        console.error(\"Error fetching subscriptions:\", err);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [page]);\r\n  useEffect(() => {\r\n    getSubscriptionsList();\r\n  }, [getSubscriptionsList]);\r\n  return (\r\n    <>\r\n      <div\r\n        id=\"refunds_request\"\r\n        className=\"w-full flex flex-col gap-4 justify-center items-center bg-white rounded-2xl p-6 mt-6\"\r\n      >\r\n        <div\r\n          id=\"Recently_Closed_Alerts_Header\"\r\n          className=\"w-full flex justify-between\"\r\n        >\r\n          <h2 className=\" text-2xl font-bold text-text-primary\">\r\n            All Subscribed User\r\n          </h2>\r\n          {/* \r\n          <Input\r\n            size=\"large\"\r\n            placeholder=\"Customer name, email...\"\r\n            prefix={<FiSearch className=\"text-gray-400\" />}\r\n            value={query}\r\n            onChange={(e) => setQuery(e.target.value)}\r\n            className=\" pr-20 border border-gray-300 max-w-[300px]\"\r\n            style={{ boxShadow: \"none\" }}\r\n          />\r\n          <Select\r\n            defaultValue=\"All\"\r\n            style={{ width: 150 }}\r\n            size=\"large\"\r\n            onChange={handleChange}\r\n            options={[\r\n              { value: \"All\", label: \"All Status\" },\r\n              { value: \"Active\", label: \"Active\" },\r\n              { value: \"Canceled\", label: \"Canceled\" },\r\n            ]}\r\n          /> */}\r\n        </div>\r\n        <SidebarContext.Provider\r\n          value={{\r\n            total: total,\r\n            page,\r\n            SetPage,\r\n            getList: getSubscriptionsList,\r\n          }}\r\n        >\r\n          <CustomTable\r\n            loading={loading}\r\n            columns={subcriptionColumns}\r\n            tableData={subscribedUsers}\r\n            showPagination={false}\r\n          />\r\n        </SidebarContext.Provider>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":["subcriptionColumns","row","jsx","formatCreatedAt","_b","_a","jsxs","convertUnixToReadableDate","Tag","StopOutlined","SyncOutlined","_c","SubDetails","SubscribedUsers","loading","setLoading","useState","page","SetPage","total","setTotal","subscribedUsers","setSubscribedUsers","getSubscriptionsList","useCallback","getSubscriptions","res","err","useEffect","Fragment","SidebarContext","CustomTable"],"mappings":"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"}