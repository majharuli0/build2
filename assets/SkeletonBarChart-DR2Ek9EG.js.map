{"version":3,"file":"SkeletonBarChart-DR2Ek9EG.js","sources":["../../src/Components/Skeleton/SkeletonBarChart.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SkeletonBarChart = ({\n  height = 350,\n  chartHeight = 280,\n  barGroups = 13,\n  barsPerGroup = 8,\n  gridLines = 5,\n  barWidth = 40,\n}) => {\n  const dynamicBarWidth = Math.max(20, barWidth / Math.sqrt(barsPerGroup / 3));\n\n  return (\n    <div className=\"w-full flex flex-col p-4\" style={{ height }}>\n      {/* Chart container */}\n      <div\n        className=\"relative w-full border border-gray-200 rounded-md\"\n        style={{ height: chartHeight }}\n      >\n        {/* Grid lines */}\n        <div className=\"w-full h-full flex flex-col justify-between\">\n          {[...Array(gridLines)].map((_, i) => (\n            <div key={i} className=\"w-full h-px bg-gray-100\" />\n          ))}\n        </div>\n        {/* Bar groups */}\n        <div className=\"absolute bottom-0 left-0 right-0 top-0 flex justify-between p-4\">\n          {[...Array(barGroups)].map((_, groupIndex) => (\n            <div\n              key={groupIndex}\n              className=\"flex gap-1 justify-center items-end \"\n              style={{\n                width: `${100 / barGroups}%`,\n              }} // Debug background\n            >\n              {[...Array(barsPerGroup)].map((_, barIndex) => (\n                <div\n                  key={`${groupIndex}-${barIndex}`}\n                  style={{\n                    width: dynamicBarWidth,\n                    height: `${Math.random() * 60 + 20}%`, // Random height 20â€“80%\n                    borderRadius: \"4px 4px 0 0\",\n                    opacity: 0.7 + Math.random() * 0.3,\n                  }}\n                  className=\"bg-gray-100\"\n                />\n              ))}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSkeletonBarChart.propTypes = {\n  height: PropTypes.number,\n  chartHeight: PropTypes.number,\n  barGroups: PropTypes.number,\n  barsPerGroup: PropTypes.number,\n  gridLines: PropTypes.number,\n  barWidth: PropTypes.number,\n};\n\nexport default SkeletonBarChart;\n"],"names":["SkeletonBarChart","height","chartHeight","barGroups","barsPerGroup","gridLines","barWidth","dynamicBarWidth","jsxs","jsx","_","i","groupIndex","barIndex","PropTypes"],"mappings":"yZAGA,MAAMA,EAAmB,CAAC,CACxB,OAAAC,EAAS,IACT,YAAAC,EAAc,IACd,UAAAC,EAAY,GACZ,aAAAC,EAAe,EACf,UAAAC,EAAY,EACZ,SAAAC,EAAW,EACb,IAAM,CACE,MAAAC,EAAkB,KAAK,IAAI,GAAID,EAAW,KAAK,KAAKF,EAAe,CAAC,CAAC,EAE3E,aACG,MAAI,CAAA,UAAU,2BAA2B,MAAO,CAAE,OAAAH,GAEjD,SAAAO,EAAA,KAAC,MAAA,CACC,UAAU,oDACV,MAAO,CAAE,OAAQN,CAAY,EAG7B,SAAA,CAAAO,MAAC,OAAI,UAAU,8CACZ,UAAC,GAAG,MAAMJ,CAAS,CAAC,EAAE,IAAI,CAACK,EAAGC,IAC5BF,EAAA,IAAA,MAAA,CAAY,UAAU,yBAAb,EAAAE,CAAuC,CAClD,EACH,EAECF,EAAAA,IAAA,MAAA,CAAI,UAAU,kEACZ,SAAC,CAAA,GAAG,MAAMN,CAAS,CAAC,EAAE,IAAI,CAACO,EAAGE,IAC7BH,EAAA,IAAC,MAAA,CAEC,UAAU,uCACV,MAAO,CACL,MAAO,GAAG,IAAMN,CAAS,GAC3B,EAEC,SAAA,CAAC,GAAG,MAAMC,CAAY,CAAC,EAAE,IAAI,CAACM,EAAGG,IAChCJ,EAAA,IAAC,MAAA,CAEC,MAAO,CACL,MAAOF,EACP,OAAQ,GAAG,KAAK,OAAO,EAAI,GAAK,EAAE,IAClC,aAAc,cACd,QAAS,GAAM,KAAK,OAAW,EAAA,EACjC,EACA,UAAU,aAAA,EAPL,GAAGK,CAAU,IAAIC,CAAQ,EAAA,CASjC,CAAA,EAjBID,CAmBR,CAAA,EACH,CAAA,CAAA,CAEJ,CAAA,CAAA,CAEJ,EAEAZ,EAAiB,UAAY,CAC3B,OAAQc,EAAU,OAClB,YAAaA,EAAU,OACvB,UAAWA,EAAU,OACrB,aAAcA,EAAU,OACxB,UAAWA,EAAU,OACrB,SAAUA,EAAU,MACtB"}