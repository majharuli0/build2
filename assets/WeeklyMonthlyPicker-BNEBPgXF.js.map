{"version":3,"file":"WeeklyMonthlyPicker-BNEBPgXF.js","sources":["../../src/Components/WeeklyMonthlyPicker/WeeklyMonthlyPicker.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { DatePicker, Space } from \"antd\";\nimport dayjs from \"dayjs\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\nimport weekOfYear from \"dayjs/plugin/weekOfYear\";\n\ndayjs.extend(customParseFormat);\ndayjs.extend(weekOfYear); // Extend dayjs to use week of year\n\nconst WeeklyMonthlyPicker = ({ placeholder, style, handleChnage, value }) => {\n  const [format, setFormat] = useState(\"\");\n  const [activePicker, setActivePicker] = useState(\"weekly\");\n  // Function to format the selected month\n  const formatMonth = (value) => {\n    const start = dayjs(value).startOf(\"month\").format(\"YYYY-MM-DD\"); // Get start date of month\n    const end = dayjs(value).endOf(\"month\").format(\"YYYY-MM-DD\"); // Get end date of month\n    return {\n      month: dayjs(value).format(\"MMMM-YY\"),\n      start,\n      end,\n    }; // e.g., { month: \"October\", start: \"2024-10-01\", end: \"2024-10-31\" }\n  };\n\n  // Function to format the selected week\n  const formatWeek = (value) => {\n    const start = dayjs(value).startOf(\"week\").format(\"YYYY-MM-DD\"); // Get start date of week\n    const end = dayjs(value).endOf(\"week\").format(\"YYYY-MM-DD\"); // Get end date of week\n    return {\n      week: dayjs(value).week(),\n      start,\n      end,\n    }; // e.g., { week: 42, start: \"2024-10-15\", end: \"2024-10-21\" }\n  };\n\n  // Function to display the formatted string in the DatePicker\n  const displayFormat = (value) => {\n    if (format === \"month\") {\n      return formatMonth(value).month; // Return month name for display\n    } else {\n      return `Week ${formatWeek(value).week}`; // Return week number for display\n    }\n  };\n\n  return (\n    <DatePicker\n      style={style}\n      placeholder={placeholder}\n      size=\"large\"\n      format={displayFormat} // Use the display format function\n      picker={format === \"month\" ? \"month\" : \"week\"}\n      onChange={(value) => {\n        if (value) {\n          // Check if the value is valid before formatting\n          const formatted =\n            format === \"month\" ? formatMonth(value) : formatWeek(value);\n          handleChnage(formatted);\n        } else {\n          // If the value is null (cleared), pass an empty string\n          handleChnage(\"\");\n        }\n      }}\n      renderExtraFooter={() => {\n        return (\n          <div className=\"flex items-center gap-2 w-full justify-center\">\n            <div className=\"p-1 \">\n              <div\n                onClick={() => {\n                  setFormat(\"week\");\n                  setActivePicker(\"weekly\");\n                }}\n                className={`cursor-pointer font-medium text-text-primary ${\n                  activePicker === \"weekly\"\n                    ? \"bg-text-primary text-white\"\n                    : \"bg-white\"\n                } h-8 px-3 flex items-center justify-center rounded`}\n              >\n                Weekly\n              </div>\n            </div>\n            <div className=\"p-3 \">\n              <div\n                onClick={() => {\n                  setFormat(\"month\");\n                  setActivePicker(\"monthly\");\n                }}\n                className={`cursor-pointer font-medium text-text-primary ${\n                  activePicker === \"monthly\"\n                    ? \"bg-text-primary text-white\"\n                    : \"bg-white\"\n                } h-8 px-3 flex items-center justify-center rounded`}\n              >\n                Monthly\n              </div>\n            </div>\n          </div>\n        );\n      }}\n    />\n  );\n};\n\nexport default WeeklyMonthlyPicker;\n"],"names":["dayjs","customParseFormat","weekOfYear","WeeklyMonthlyPicker","placeholder","style","handleChnage","value","format","setFormat","useState","activePicker","setActivePicker","formatMonth","start","end","formatWeek","displayFormat","jsx","DatePicker","formatted","jsxs"],"mappings":"sZAMAA,EAAM,OAAOC,CAAiB,EAC9BD,EAAM,OAAOE,CAAU,EAEvB,MAAMC,EAAsB,CAAC,CAAE,YAAAC,EAAa,MAAAC,EAAO,aAAAC,EAAc,MAAAC,KAAY,CAC3E,KAAM,CAACC,EAAQC,CAAS,EAAIC,WAAS,EAAE,EACjC,CAACC,EAAcC,CAAe,EAAIF,WAAS,QAAQ,EAEnDG,EAAeN,GAAU,CACvB,MAAAO,EAAQd,EAAMO,CAAK,EAAE,QAAQ,OAAO,EAAE,OAAO,YAAY,EACzDQ,EAAMf,EAAMO,CAAK,EAAE,MAAM,OAAO,EAAE,OAAO,YAAY,EACpD,MAAA,CACL,MAAOP,EAAMO,CAAK,EAAE,OAAO,SAAS,EACpC,MAAAO,EACA,IAAAC,CAAA,CACF,EAIIC,EAAcT,GAAU,CACtB,MAAAO,EAAQd,EAAMO,CAAK,EAAE,QAAQ,MAAM,EAAE,OAAO,YAAY,EACxDQ,EAAMf,EAAMO,CAAK,EAAE,MAAM,MAAM,EAAE,OAAO,YAAY,EACnD,MAAA,CACL,KAAMP,EAAMO,CAAK,EAAE,KAAK,EACxB,MAAAO,EACA,IAAAC,CAAA,CACF,EAIIE,EAAiBV,GACjBC,IAAW,QACNK,EAAYN,CAAK,EAAE,MAEnB,QAAQS,EAAWT,CAAK,EAAE,IAAI,GAKvC,OAAAW,EAAA,IAACC,EAAA,CACC,MAAAd,EACA,YAAAD,EACA,KAAK,QACL,OAAQa,EACR,OAAQT,IAAW,QAAU,QAAU,OACvC,SAAWD,GAAU,CACnB,GAAIA,EAAO,CAET,MAAMa,EACJZ,IAAW,QAAUK,EAAYN,CAAK,EAAIS,EAAWT,CAAK,EAC5DD,EAAac,CAAS,CAAA,MAGtBd,EAAa,EAAE,CAEnB,EACA,kBAAmB,IAEfe,EAAA,KAAC,MAAI,CAAA,UAAU,gDACb,SAAA,CAACH,EAAAA,IAAA,MAAA,CAAI,UAAU,OACb,SAAAA,EAAA,IAAC,MAAA,CACC,QAAS,IAAM,CACbT,EAAU,MAAM,EAChBG,EAAgB,QAAQ,CAC1B,EACA,UAAW,gDACTD,IAAiB,SACb,6BACA,UACN,qDACD,SAAA,QAAA,CAAA,EAGH,EACAO,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC,MAAA,CACC,QAAS,IAAM,CACbT,EAAU,OAAO,EACjBG,EAAgB,SAAS,CAC3B,EACA,UAAW,gDACTD,IAAiB,UACb,6BACA,UACN,qDACD,SAAA,SAAA,CAAA,EAGH,CACF,CAAA,CAAA,CAEJ,CAAA,CAGN"}