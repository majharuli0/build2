{"version":3,"file":"AlertsHistoryTab-hX_Mi7gl.js","sources":["../../src/Pages/Elderlies/Components/TabContents/Alerts/mock.js","../../src/Pages/Elderlies/Components/TabContents/Alerts/utiles.jsx","../../src/Pages/Elderlies/Components/TabContents/Alerts/AlertsHistoryTab.jsx"],"sourcesContent":["export const generateRandomAlerts = (count) => {\r\n  const alertTypes = [\"Critical\", \"Info\", \"Warning\"];\r\n  const rooms = [\r\n    \"Living Room\",\r\n    \"Kitchen\",\r\n    \"Bedroom\",\r\n    \"Bathroom\",\r\n    \"Study\",\r\n    \"Dining Room\",\r\n    \"Hallway\",\r\n    \"Garage\",\r\n    \"Basement\",\r\n    \"Attic\",\r\n  ];\r\n  const names = [\r\n    \"John Doe\",\r\n    \"Jane Doe\",\r\n    \"Alice Smith\",\r\n    \"Bob Johnson\",\r\n    \"Emma Brown\",\r\n    \"Michael Wilson\",\r\n    \"Sarah Davis\",\r\n    \"David Miller\",\r\n    \"Lisa Garcia\",\r\n    \"James Rodriguez\",\r\n  ];\r\n  const alertNames = [\r\n    \"Fall Detected\",\r\n    \"Fire Detected\",\r\n    \"Inactivity Alert\",\r\n    \"Medication Reminder\",\r\n    \"Unusual Behavior\",\r\n    \"High Temperature\",\r\n    \"Low Temperature\",\r\n    \"Water Leak\",\r\n    \"Door Left Open\",\r\n    \"Window Broken\",\r\n  ];\r\n  const eventNames = [\r\n    \"Medication Taken\",\r\n    \"Medication Not Taken\",\r\n    \"Medication Reminder\",\r\n  ];\r\n  const disabilityTypes = [\"Wheelchair\", \"Crutches\", \"Cane\", \"None\"];\r\n  const allergies = [\"Yes\", \"No\"];\r\n  const diseases = [\"Yes\", \"No\"];\r\n  const medications = [\"Yes\", \"No\"];\r\n  const activeAlert = [\"1\", \"4\", \"2\", \"No\"];\r\n  const isAlert = [\"True\", \"False\"];\r\n  return Array.from({ length: count }, (_, index) => ({\r\n    _id: index + 1,\r\n    alertType: alertTypes[Math.floor(Math.random() * alertTypes.length)],\r\n    elderlyName: names[Math.floor(Math.random() * names.length)],\r\n    alertName: alertNames[Math.floor(Math.random() * alertNames.length)],\r\n    roomId: String(index + 1),\r\n    roomName: rooms[Math.floor(Math.random() * rooms.length)],\r\n    alertLifetime: `${Math.floor(Math.random() * 10)}m ${Math.floor(\r\n      Math.random() * 60\r\n    )}s`,\r\n    time: new Date().toLocaleString(),\r\n    alertDescription: `${\r\n      alertNames[Math.floor(Math.random() * alertNames.length)]\r\n    } in the ${rooms[Math.floor(Math.random() * rooms.length)]}`,\r\n    status: \"Active\",\r\n    isAlert: isAlert[Math.floor(Math.random() * isAlert.length)],\r\n    address: \"123 Main St, Anytown, USA\",\r\n    coordinates: {\r\n      latitude: 37.7749 + (Math.random() - 0.5) * 0.01,\r\n      longitude: -122.4194 + (Math.random() - 0.5) * 0.01,\r\n    },\r\n    //for close alert\r\n    closedAt: new Date().toLocaleString(),\r\n    closedBy: names[Math.floor(Math.random() * names.length)],\r\n    //for event\r\n    eventName: eventNames[Math.floor(Math.random() * eventNames.length)],\r\n    disabilityType:\r\n      disabilityTypes[Math.floor(Math.random() * disabilityTypes.length)],\r\n    additionalInfo: \"This is additional info for event\",\r\n    hospital: {\r\n      name: \"Hospital For Special Surgery\",\r\n      phone: \"1234567890\",\r\n      latitude: -33.8743612,\r\n      longitude: 151.2261153,\r\n    },\r\n    allergies: allergies[Math.floor(Math.random() * allergies.length)],\r\n    diseases: diseases[Math.floor(Math.random() * diseases.length)],\r\n    medications: medications[Math.floor(Math.random() * medications.length)],\r\n    activeAlert: activeAlert[Math.floor(Math.random() * activeAlert.length)],\r\n    alertComments: \"This is alert comments\",\r\n    alertLifespan: [\r\n      {\r\n        dateTime: \"24-01-2024 10:00 AM\",\r\n        description: \"At 10:00 AM, the alert was created\",\r\n      },\r\n      {\r\n        dateTime: \"24-01-2024 10:30 AM\",\r\n        description:\r\n          \"Agent (petar) clicked on the incident in 10:30 (30mins later)\",\r\n      },\r\n      {\r\n        dateTime: \"24-01-2024 10:32 AM\",\r\n        description:\r\n          \"Agent (petar) clicked on “Call Elderly” in 10:32 (2mins later)\",\r\n      },\r\n      {\r\n        dateTime: \"24-01-2024 10:34 AM\",\r\n        description:\r\n          \"Agent (petar) clicked on “Call 911” in 10:34 (2mins later)\",\r\n      },\r\n      {\r\n        dateTime: \"24-01-2024 10:36 AM\",\r\n        description:\r\n          \"Agent (petar) clicked on “Close Alert” in 10:36 (2mins later)\",\r\n      },\r\n    ],\r\n  }));\r\n};\r\nexport const alerts = generateRandomAlerts(14);\r\nexport const activeAlertsTableData = generateRandomAlerts(20);\r\nexport const recentlyClosedAlertsTableData = generateRandomAlerts(20);\r\nexport const eventsTableData = generateRandomAlerts(20);\r\nexport const elderlyListTableData = generateRandomAlerts(20);\r\n","import { useEffect, useState, useContext } from \"react\";\r\nimport AlertName from \"@/Components/NameCol/AlertName\";\r\nimport { LuEye } from \"react-icons/lu\";\r\nimport { Table } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ActionManu from \"@/Components/ActionManu/ActionManu\";\r\nimport LargeTextViewerModal from \"@/Components/LargeTextViewerModal/LargeTextViewerModal\";\r\nimport {\r\n  transformDateAndTime,\r\n  transformDateAndTimeToDuration,\r\n  getAlertType,\r\n  calculateDurationBetweenTimes,\r\n} from \"@/utils/helper\";\r\nimport { SidebarContext } from \"@/Context/CustomContext\";\r\nimport AutoUpdatingDuration from \"@/Components/AutoUpdatingDuration/AutoUpdatingDuration\";\r\nimport InlineActionManu from \"../../../../../Components/ActionManu/InlineActionManu\";\r\n\r\nexport default function useAlertTableColumns(type) {\r\n  const { rolesFormatter } = useContext(SidebarContext);\r\n  const navigate = useNavigate(); // Initialize the navigate function\r\n  const handleViewClick = (row) => {\r\n    window.scrollTo(0, 0);\r\n    navigate(\r\n      `/supporter/elderlies/elderly-profile/${row.elderly_id}?tab=overview`\r\n    );\r\n  };\r\n  const alertColsMapping = {\r\n    activeAlertsTableData: [\r\n      \"alertName\",\r\n      \"alertType\",\r\n      \"elderlyName\",\r\n      \"roomName\",\r\n      \"incidentTime\",\r\n      \"alertLife\",\r\n      \"address\",\r\n      \"viewElderly\",\r\n    ],\r\n    recentlyClosedAlertsTableData: [\r\n      \"alertName\",\r\n      \"incidentTime\",\r\n      \"alertLifetime\",\r\n      \"alertStatus\",\r\n      \"closedAt\",\r\n      \"closedBy\",\r\n      \"largeText\",\r\n      \"action2\",\r\n    ],\r\n    eventsTableData: [\r\n      \"eventName\",\r\n      \"elderlyName\",\r\n      \"eventTime\",\r\n      \"eventTimeline\",\r\n      \"hospital\",\r\n      \"expandColumn\",\r\n      \"largeText\",\r\n      \"disabilityType\",\r\n      \"action\",\r\n    ],\r\n  };\r\n  const AlertsTableColumns = {\r\n    alertName: {\r\n      title: \"Notifications Name\",\r\n      render: (row) => <AlertName data={row} />,\r\n    },\r\n    alertType: {\r\n      title: \"Notifications Type\",\r\n      render: (row) => <span>{getAlertType(row)}</span>,\r\n    },\r\n    elderlyName: {\r\n      title: \"User Name\",\r\n      dataIndex: \"elderly_name\",\r\n      render: (text) => <span>{text}</span>,\r\n    },\r\n    roomName: {\r\n      title: \"Room Name\",\r\n      dataIndex: \"room_name\",\r\n      render: (text) => <span>{text}</span>,\r\n    },\r\n\r\n    incidentTime: {\r\n      title: \"Observation Time\",\r\n      dataIndex: \"created_at\",\r\n      render: (text) => (\r\n        <span className=\"text-nowrap\">{transformDateAndTime(text)}</span>\r\n      ),\r\n    },\r\n    alertLifetime: {\r\n      title: \"Notification Duration\",\r\n      render: (row) =>\r\n        row?.closed_at ? (\r\n          <span className=\"text-nowrap\">\r\n            {calculateDurationBetweenTimes(row?.created_at, row?.closed_at)}\r\n          </span>\r\n        ) : (\r\n          <AutoUpdatingDuration date={row?.created_at} />\r\n        ),\r\n    },\r\n    alertLife: {\r\n      title: \"Notification Duration\",\r\n      dataIndex: \"created_at\",\r\n      render: (text) => (\r\n        <span className=\"text-nowrap\">\r\n          {/* {transformDateAndTimeToDuration(text)} */}\r\n          <AutoUpdatingDuration date={text} />\r\n        </span>\r\n      ),\r\n    },\r\n    alertStatus: {\r\n      title: \"Notification Status\",\r\n      // dataIndex: \"status\",\r\n      render: (row) =>\r\n        row?.closed_at ? (\r\n          <span className=\"text-nowrap\">\r\n            {row?.status == 0 ? \"True Notification\" : \"False Notification\"}\r\n          </span>\r\n        ) : (\r\n          <>--</>\r\n        ),\r\n    },\r\n    address: {\r\n      title: \"Address\",\r\n      width: \"230px\",\r\n      render: (row) => (\r\n        <span className=\"!w-[230px] text-nowrap\">{row.address}</span>\r\n      ),\r\n    },\r\n    //for recently closed alerts table\r\n    closedAt: {\r\n      title: \"Closed At\",\r\n      render: (row) =>\r\n        row?.closed_at ? (\r\n          <span className=\"text-nowrap\">\r\n            {transformDateAndTime(row?.closed_at)}\r\n          </span>\r\n        ) : (\r\n          <>--</>\r\n        ),\r\n    },\r\n    closedBy: {\r\n      title: \"Closed By\",\r\n      render: (row) =>\r\n        row?.closed_at ? (\r\n          <span className=\"text-nowrap\">\r\n            {row.closed_by} ({rolesFormatter[row.closed_by_role]} )\r\n          </span>\r\n        ) : (\r\n          <>--</>\r\n        ),\r\n    },\r\n    //for events table\r\n    eventName: {\r\n      title: \"Event Name\",\r\n      dataIndex: \"eventName\",\r\n      render: (text) => <span>{text}</span>,\r\n    },\r\n    eventTime: {\r\n      title: \"Event Time\",\r\n      dataIndex: \"time\",\r\n      render: (text) => <span className=\"text-nowrap\">{text}</span>,\r\n    },\r\n    eventTimeline: {\r\n      title: \"Event Timeline\",\r\n      dataIndex: \"alertLifetime\",\r\n      render: (text) => <span className=\"text-nowrap\">{text}</span>,\r\n    },\r\n    disabilityType: {\r\n      title: \"Disability Type\",\r\n      dataIndex: \"disabilityType\",\r\n      render: (text) => <span className=\"text-nowrap\">{text}</span>,\r\n    },\r\n    hospital: {\r\n      title: \"Hospital\",\r\n      dataIndex: \"hospital\",\r\n      render: (row) => (\r\n        <span className=\"text-nowrap\">\r\n          {row.name.length > 20 ? `${row.name.substring(0, 20)}...` : row.name}\r\n        </span>\r\n      ),\r\n    },\r\n    largeText: {\r\n      title: () => {\r\n        switch (type) {\r\n          case \"events\":\r\n            return \"Additional Info\";\r\n          case \"recentlyClosedAlert\":\r\n            return \"Comments\";\r\n          default:\r\n            return \"\";\r\n        }\r\n      },\r\n      render: (row) =>\r\n        row?.closed_at ? (\r\n          <LargeTextViewerModal\r\n            data={\r\n              type === \"recentlyClosedAlert\"\r\n                ? row?.comment\r\n                : type === \"events\"\r\n                ? row?.additionalInfo\r\n                : \"\"\r\n            }\r\n            title={\r\n              type === \"recentlyClosedAlert\"\r\n                ? \"Comment\"\r\n                : type === \"events\"\r\n                ? \"Additional Info\"\r\n                : \"\"\r\n            }\r\n          />\r\n        ) : (\r\n          \"--\"\r\n        ),\r\n    },\r\n    expandColumn: Table.EXPAND_COLUMN,\r\n    viewElderly: {\r\n      // title: \"View Elderly\",\r\n      render: (row) => (\r\n        <span\r\n          onClick={() => handleViewClick(row)}\r\n          className=\"flex items-center transition-all duration-300 justify-center gap-2 text-sm font-medium text-text-primary hover:text-primary cursor-pointer p-2 rounded-md  text-center hover:bg-slate-100\"\r\n        >\r\n          View <LuEye />\r\n        </span>\r\n      ),\r\n    },\r\n    action: {\r\n      title: \"Action\",\r\n      render: (row) => <ActionManu row={row} />,\r\n    },\r\n    action2: {\r\n      align: \"right\",\r\n      render: (row) => <InlineActionManu row={row} onlyFall={true} />,\r\n    },\r\n  };\r\n  const [alertTableColumns, setAlertTableColumns] = useState(undefined);\r\n  useEffect(() => {\r\n    if (type == \"activeAlert\") {\r\n      const cols = alertColsMapping.activeAlertsTableData.map((col) => {\r\n        return AlertsTableColumns[col];\r\n      });\r\n      setAlertTableColumns(cols);\r\n    } else if (type == \"recentlyClosedAlert\") {\r\n      const cols = alertColsMapping.recentlyClosedAlertsTableData.map((col) => {\r\n        return AlertsTableColumns[col];\r\n      });\r\n      setAlertTableColumns(cols);\r\n    } else if (type == \"events\") {\r\n      const cols = alertColsMapping.eventsTableData.map((col) => {\r\n        return AlertsTableColumns[col];\r\n      });\r\n      setAlertTableColumns(cols);\r\n    } else {\r\n      setAlertTableColumns([]);\r\n    }\r\n  }, []);\r\n  return alertTableColumns;\r\n}\r\n\r\nexport { useAlertTableColumns };\r\n","import React, { useEffect, useState, useCallback, useContext } from \"react\";\r\nimport { getAlertList } from \"@/api/elderlySupport\";\r\nimport dayjs, { Dayjs } from \"dayjs\";\r\nimport CustomTable from \"@/Shared/Table/CustomTable\";\r\nimport { elderlyListTableData } from \"./mock\";\r\nimport { SidebarContext } from \"@/Context/CustomUsertable\";\r\nimport { Segmented, ConfigProvider, Select } from \"antd\";\r\n// import { alertHistoryColumns } from \"./utiles\";\r\nimport { useAlertTableColumns } from \"./utiles\";\r\nimport { getAlertsGroup } from \"@/utils/helper\";\r\nimport { CustomContext } from \"@/Context/UseCustomContext\";\r\n\r\nexport default function AlertsHistoryTab() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const recentlyClosedAlertTableColumns = useAlertTableColumns(\r\n    \"recentlyClosedAlert\"\r\n  );\r\n  const { elderlyDetails } = useContext(CustomContext);\r\n\r\n  const [alertHistory, setAlertHistory] = useState([]);\r\n  const [page, SetPage] = useState(1);\r\n  const [total, setTotal] = useState(0);\r\n  const [alertHistiryQuery, setAlertHistiryQuery] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [isResolved, setIsResolved] = useState(null);\r\n  const getAlartsHistory = useCallback(() => {\r\n    setLoading(true);\r\n    getAlertList({\r\n      to_date: \"2024-11-30\",\r\n      from_date: dayjs().format(\"YYYY-MM-DD\"),\r\n      is_resolved: isResolved,\r\n      elderly_id: elderlyDetails?._id,\r\n      ...page,\r\n      ...alertHistiryQuery,\r\n    })\r\n      .then((res) => {\r\n        setTotal(res.total);\r\n        setLoading(false);\r\n        setAlertHistory(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoading(false);\r\n      });\r\n  }, [page, alertHistiryQuery, isResolved, elderlyDetails?._id]);\r\n  useEffect(() => {\r\n    getAlartsHistory();\r\n  }, [getAlartsHistory]);\r\n\r\n  function onAlertHistorySegmantChnage(value) {\r\n    SetPage(1);\r\n    setAlertHistiryQuery(getAlertsGroup(value));\r\n  }\r\n  return (\r\n    <div\r\n      id=\"Elderlies\"\r\n      className=\"w-full flex flex-col gap-4 justify-center items-center bg-white rounded-2xl p-6 mt-6\"\r\n    >\r\n      <div id=\"Elderlies_Header\" className=\"w-full flex justify-between\">\r\n        <h1 className=\"text-[24px] font-bold\">Notifications History</h1>\r\n        <div className=\"flex gap-4 h-fit\">\r\n          <ConfigProvider\r\n            theme={\r\n              {\r\n                // components: {\r\n                //   Segmented: {\r\n                //     itemSelectedBg: \"#252F67\",\r\n                //     itemSelectedColor: \"#fff\",\r\n                //     fontFamily: \"Baloo2\",\r\n                //   },\r\n                // },\r\n              }\r\n            }\r\n          >\r\n            <Segmented\r\n              size=\"large\"\r\n              options={alertHistorySegmentOptions}\r\n              onChange={(value) => onAlertHistorySegmantChnage(value)}\r\n            />\r\n          </ConfigProvider>\r\n\r\n          <ConfigProvider\r\n            theme={{\r\n              token: {\r\n                colorPrimary: \"#8086AC\",\r\n              },\r\n            }}\r\n          >\r\n            <Select\r\n              size=\"large\"\r\n              style={{\r\n                width: \"120px\",\r\n                height: \"40px\",\r\n                borderRadius: \"10px !important\",\r\n              }}\r\n              onChange={(selectedValue, option) => {\r\n                setIsResolved(selectedValue);\r\n              }}\r\n              placeholder=\"Filter by Alert Status\"\r\n              value={isResolved}\r\n              options={[\r\n                {\r\n                  label: \"All Alerts\",\r\n                  value: null,\r\n                },\r\n                {\r\n                  label: \"Resolved\",\r\n                  value: true,\r\n                },\r\n                {\r\n                  label: \"Non-Resolved\",\r\n                  value: false,\r\n                },\r\n              ]}\r\n            />\r\n          </ConfigProvider>\r\n        </div>\r\n      </div>\r\n\r\n      <SidebarContext.Provider\r\n        value={{\r\n          total: total,\r\n          page: 1,\r\n          SetPage,\r\n          limit: 6,\r\n        }}\r\n      >\r\n        <CustomTable\r\n          loading={loading}\r\n          tableData={alertHistory}\r\n          columns={recentlyClosedAlertTableColumns}\r\n        />\r\n      </SidebarContext.Provider>\r\n    </div>\r\n  );\r\n}\r\nexport const alertHistorySegmentOptions = [\r\n  {\r\n    label: \"All Activity\",\r\n    value: \"All Activity\",\r\n  },\r\n  {\r\n    label: \"Critical\",\r\n    value: \"Critical\",\r\n  },\r\n  {\r\n    label: \"Warning\",\r\n    value: \"Warning\",\r\n  },\r\n  {\r\n    label: \"Informational\",\r\n    value: \"Info\",\r\n  },\r\n];\r\n"],"names":["generateRandomAlerts","count","alertTypes","rooms","names","alertNames","eventNames","disabilityTypes","allergies","diseases","medications","activeAlert","isAlert","_","index","useAlertTableColumns","type","rolesFormatter","useContext","SidebarContext","navigate","useNavigate","handleViewClick","row","alertColsMapping","AlertsTableColumns","jsx","AlertName","getAlertType","text","transformDateAndTime","calculateDurationBetweenTimes","AutoUpdatingDuration","jsxs","LargeTextViewerModal","Table","LuEye","ActionManu","InlineActionManu","alertTableColumns","setAlertTableColumns","useState","useEffect","cols","col","AlertsHistoryTab","recentlyClosedAlertTableColumns","elderlyDetails","CustomContext","alertHistory","setAlertHistory","page","SetPage","total","setTotal","alertHistiryQuery","setAlertHistiryQuery","loading","setLoading","isResolved","setIsResolved","getAlartsHistory","useCallback","getAlertList","dayjs","res","err","onAlertHistorySegmantChnage","value","getAlertsGroup","ConfigProvider","Segmented","alertHistorySegmentOptions","Select","selectedValue","option","CustomTable"],"mappings":"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"}