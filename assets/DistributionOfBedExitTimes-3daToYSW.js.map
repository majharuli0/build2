{"version":3,"file":"DistributionOfBedExitTimes-3daToYSW.js","sources":["../../src/Pages/Elderlies/Components/TabContents/Sleep/Components/DistributionOfBedExitTimes.jsx"],"sourcesContent":["import { useState, useEffect, useContext, useCallback } from \"react\";\r\nimport { getSleepSummary } from \"@/api/deviceReports\";\r\n\r\nimport { percentageData } from \"./mockData\";\r\nimport Template from \"@/Components/GraphAndChartTemp/Template\";\r\nimport { getTemplateData } from \"@/Pages/Elderlies/Components/Utiles/utiles\";\r\nimport ScatterChart from \"@/Components/GraphAndChart/scatterChart\";\r\nimport { CustomContext } from \"@/Context/UseCustomContext\";\r\nimport dayjs from \"dayjs\";\r\nimport { transformDataForBedExit } from \"@/utils/helper\";\r\n\r\nexport default function DistributionOfBedExitTimes({ isSummaryBtn = true }) {\r\n  const { title, color, icon, summaryProps, dataAnalysis } = getTemplateData(\r\n    \"Distribution of Bed Exit Times\"\r\n  );\r\n\r\n  const context = useContext(CustomContext);\r\n  const {\r\n    chartToDate = \"\",\r\n    chartFromDate = \"\",\r\n    elderlyDetails,\r\n  } = context || {};\r\n  const [toDate, setToDate] = useState(\r\n    dayjs().subtract(1, \"day\").format(\"YYYY-MM-DD\")\r\n  );\r\n  const [fromDate, setFromDate] = useState(\r\n    dayjs().subtract(31, \"day\").format(\"YYYY-MM-DD\")\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (chartToDate && chartFromDate) {\r\n      setToDate(chartToDate);\r\n      setFromDate(chartFromDate);\r\n    }\r\n  }, [chartToDate]);\r\n\r\n  const [bedExitDistribution, setBedExitDistribution] = useState([]);\r\n  const getDailyRoutineData = useCallback(() => {\r\n    getSleepSummary({\r\n      uids: elderlyDetails?.bedRoomIds,\r\n      elderly_id: elderlyDetails._id,\r\n      to_date: fromDate,\r\n      from_date: toDate,\r\n    })\r\n      .then((res) => {\r\n        setBedExitDistribution(transformDataForBedExit(res.data || []));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [toDate, elderlyDetails]);\r\n  useEffect(() => {\r\n    getDailyRoutineData();\r\n  }, [getDailyRoutineData]);\r\n  return (\r\n    <Template\r\n      title={title}\r\n      color={color}\r\n      icon={icon}\r\n      dataAnalysis={dataAnalysis}\r\n      isSummaryBtn={isSummaryBtn}\r\n      summaryProps={summaryProps}\r\n    >\r\n      <ScatterChart\r\n        data={bedExitDistribution}\r\n        colors={{\r\n          bedexit: color,\r\n        }}\r\n      />\r\n    </Template>\r\n  );\r\n}\r\n"],"names":["DistributionOfBedExitTimes","isSummaryBtn","title","color","icon","summaryProps","dataAnalysis","getTemplateData","context","useContext","CustomContext","chartToDate","chartFromDate","elderlyDetails","toDate","setToDate","useState","dayjs","fromDate","setFromDate","useEffect","bedExitDistribution","setBedExitDistribution","getDailyRoutineData","useCallback","getSleepSummary","res","transformDataForBedExit","err","jsx","Template","ScatterChart"],"mappings":"0nBAWA,SAAwBA,EAA2B,CAAE,aAAAC,EAAe,IAAQ,CAC1E,KAAM,CAAE,MAAAC,EAAO,MAAAC,EAAO,KAAAC,EAAM,aAAAC,EAAc,aAAAC,GAAiBC,EACzD,gCAAA,EAGIC,EAAUC,aAAWC,CAAa,EAClC,CACJ,YAAAC,EAAc,GACd,cAAAC,EAAgB,GAChB,eAAAC,CAAA,EACEL,GAAW,CAAA,EACT,CAACM,EAAQC,CAAS,EAAIC,EAAA,SAC1BC,IAAQ,SAAS,EAAG,KAAK,EAAE,OAAO,YAAY,CAAA,EAE1C,CAACC,EAAUC,CAAW,EAAIH,EAAA,SAC9BC,IAAQ,SAAS,GAAI,KAAK,EAAE,OAAO,YAAY,CAAA,EAGjDG,EAAAA,UAAU,IAAM,CACVT,GAAeC,IACjBG,EAAUJ,CAAW,EACrBQ,EAAYP,CAAa,EAC3B,EACC,CAACD,CAAW,CAAC,EAEhB,KAAM,CAACU,EAAqBC,CAAsB,EAAIN,EAAA,SAAS,CAAE,CAAA,EAC3DO,EAAsBC,EAAAA,YAAY,IAAM,CAC5BC,EAAA,CACd,KAAMZ,GAAA,YAAAA,EAAgB,WACtB,WAAYA,EAAe,IAC3B,QAASK,EACT,UAAWJ,CAAA,CACZ,EACE,KAAMY,GAAQ,CACbJ,EAAuBK,EAAwBD,EAAI,MAAQ,CAAA,CAAE,CAAC,CAAA,CAC/D,EACA,MAAOE,GAAQ,CACd,QAAQ,IAAIA,CAAG,CAAA,CAChB,CAAA,EACF,CAACd,EAAQD,CAAc,CAAC,EAC3BO,OAAAA,EAAAA,UAAU,IAAM,CACMG,GAAA,EACnB,CAACA,CAAmB,CAAC,EAEtBM,EAAA,IAACC,EAAA,CACC,MAAA5B,EACA,MAAAC,EACA,KAAAC,EACA,aAAAE,EACA,aAAAL,EACA,aAAAI,EAEA,SAAAwB,EAAA,IAACE,EAAA,CACC,KAAMV,EACN,OAAQ,CACN,QAASlB,CACX,CAAA,CACF,CAAA,CAAA,CAGN"}