{"version":3,"file":"scatterChart-DAb5hRD4.js","sources":["../../src/Components/GraphAndChart/scatterChart.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport ReactECharts from \"echarts-for-react\";\r\nimport { Empty } from \"antd\";\r\nconst ScatterChart = ({ data = [] }) => {\r\n  const allTypes = {\r\n    \"Went to bed\": \"#1E8A8A\",\r\n    \"Fall asleep\": \"#7A5EBE\",\r\n    \"Wake up\": \"#3A81BF\",\r\n    \"Get up\": \"#CC8A50\",\r\n    \"Bed-Exit at Night\": \"#508C9B\",\r\n  };\r\n\r\n  const typesInData = Array.from(\r\n    new Set(data.flat().map((event) => event.type))\r\n  );\r\n  const dynamicTypes = Object.keys(allTypes).reduce((acc, type) => {\r\n    if (typesInData.includes(type)) {\r\n      acc[type] = allTypes[type];\r\n    }\r\n    return acc;\r\n  }, {});\r\n\r\n  let minHour = Infinity;\r\n  let maxHour = -Infinity;\r\n\r\n  const seriesData = Object.keys(dynamicTypes).map((type) => ({\r\n    name: type,\r\n    type: \"scatter\",\r\n    data: [],\r\n    itemStyle: { color: dynamicTypes[type] },\r\n    symbolSize: 15,\r\n  }));\r\n\r\n  data.forEach((day) => {\r\n    if (Array.isArray(day)) {\r\n      day.forEach((event) => {\r\n        const { date, time: timeStr, type, suffix = \"\" } = event; // Include suffix\r\n        const time = new Date(timeStr);\r\n        const hour = time.getHours() + time.getMinutes() / 60;\r\n        const dayOffset = time.getHours() >= 18 ? 0 : 1;\r\n\r\n        minHour = Math.min(minHour, hour + 24 * dayOffset);\r\n        maxHour = Math.max(maxHour, hour + 24 * dayOffset);\r\n\r\n        const series = seriesData.find((s) => s.name === type);\r\n        if (series) {\r\n          series.data.push([hour + 24 * dayOffset, date, timeStr, suffix]); // Add suffix\r\n        }\r\n      });\r\n    } else {\r\n      console.warn(\"Expected an array for 'day', but got:\", day);\r\n    }\r\n  });\r\n\r\n  if (data?.length === 0) {\r\n    return (\r\n      <div className=\"h-full flex flex-col items-center justify-center\">\r\n        <Empty description=\"No data available to show\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const option = {\r\n    title: {},\r\n    legend: {\r\n      show: true,\r\n      data: Object.keys(dynamicTypes),\r\n    },\r\n    tooltip: {\r\n      trigger: \"item\",\r\n      axisPointer: {\r\n        type: \"cross\",\r\n      },\r\n      formatter: (params) => {\r\n        const eventTime = new Date(params.data[2]);\r\n        const suffix = params.data[3]; // Extract the suffix\r\n        return `${params.seriesName}<br/>Date: ${\r\n          params.data[1]\r\n        }<br/>Time: ${suffix} ${eventTime.getHours()}:${eventTime\r\n          .getMinutes()\r\n          .toString()\r\n          .padStart(2, \"0\")}`;\r\n      },\r\n    },\r\n    xAxis: {\r\n      type: \"value\",\r\n      min: Math.floor(minHour),\r\n      max: Math.ceil(maxHour),\r\n      axisLabel: {\r\n        formatter: (value) => {\r\n          return (value >= 24 ? value - 24 : value) + \":00\";\r\n        },\r\n      },\r\n      splitLine: { show: false },\r\n    },\r\n    yAxis: {\r\n      type: \"category\",\r\n      name: \"Date\",\r\n      data: [...new Set(data?.flat()?.map((event) => event.date))],\r\n    },\r\n    series: seriesData,\r\n    dataZoom: [\r\n      {\r\n        type: \"slider\",\r\n        yAxisIndex: 0,\r\n        start: data.length > 15 ? 90 : 0,\r\n        end: 100,\r\n      },\r\n      {\r\n        type: \"inside\",\r\n        yAxisIndex: 0,\r\n        start: data.length > 15 ? 90 : 0,\r\n        end: 100,\r\n      },\r\n    ],\r\n    grid: {\r\n      top: \"15%\",\r\n      bottom: \"10%\",\r\n      left: \"7%\",\r\n      right: \"10%\",\r\n    },\r\n  };\r\n\r\n  return <ReactECharts option={option} />;\r\n};\r\n\r\nexport default ScatterChart;\r\n"],"names":["ScatterChart","data","allTypes","typesInData","event","dynamicTypes","acc","type","minHour","maxHour","seriesData","day","date","timeStr","suffix","time","hour","dayOffset","series","s","jsx","Empty","option","params","eventTime","value","_a","ReactECharts"],"mappings":"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"}