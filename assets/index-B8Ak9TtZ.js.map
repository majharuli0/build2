{"version":3,"file":"index-B8Ak9TtZ.js","sources":["../../src/Pages/Supportnursing/Dashboards/Components/RoomvView/roomAndDetails.jsx","../../src/Pages/Supportnursing/Dashboards/Components/RoomvView/index.jsx"],"sourcesContent":["import React, { useEffect, useCallback, useState, useRef } from \"react\";\r\nimport \"./style.css\";\r\nimport Room1 from \"@/Components/RoomMap/RoomMap3\";\r\nimport Room2 from \"@/Components/RoomMap/RoomMap4\";\r\n\r\nimport {\r\n  transformDateAndTime,\r\n  transformDateAndTimeToDuration,\r\n  getAlertInfoViaEvent,\r\n  decodePosition,\r\n} from \"@/utils/helper\";\r\nimport AutoUpdatingDuration from \"@/Components/AutoUpdatingDuration/AutoUpdatingDuration\";\r\nimport { WebSocketProvider } from \"@/Context/WebSoketHook\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { subscribeToMqtt, unsubscribeFromMqtt } from \"@/api/deviceReports\";\r\nimport useWebSocket from \"@/hook/useWebSoket\";\r\nexport default function RoomAndDetails({ data: roomData = {} }) {\r\n  const navigate = useNavigate();\r\n  const [position, setPosition] = useState(null);\r\n  const previousDeviceRef = useRef(null);\r\n  const heartBreathRateRef = useRef(false);\r\n  const [heartBreathRateActive, setHeartBreathRateActive] = useState(false);\r\n  const timeoutRef = useRef;\r\n  const getBackgroundColor = (type) => {\r\n    switch (type) {\r\n      case \"Info\":\r\n        return \"bg-blue-500\";\r\n      case \"Critical\":\r\n        return \"bg-red-500\";\r\n      case \"Warning\":\r\n        return \"bg-yellow-500\";\r\n      default:\r\n        return \"bg-blue-500\";\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const deviceCode = roomData?.rooms?.device_no;\r\n    if (deviceCode) {\r\n      if (\r\n        previousDeviceRef.current &&\r\n        previousDeviceRef.current !== deviceCode\r\n      ) {\r\n        unsubscribeFromMqtt({\r\n          uid: previousDeviceRef.current,\r\n          messageType: [\"1\", \"2\", \"3\", \"4\"],\r\n        })\r\n          .then(() => {})\r\n          .catch((err) => console.error(`Error unsubscribing: ${err}`));\r\n      }\r\n\r\n      // Subscribe to the new device\r\n      subscribeToMqtt({\r\n        uid: deviceCode,\r\n        messageType: [\"1\", \"2\", \"3\", \"4\"],\r\n        topics: {\r\n          pub: [deviceCode],\r\n        },\r\n      })\r\n        .then(() => {})\r\n        .catch((err) => console.error(`Error subscribing: ${err}`));\r\n\r\n      // Update the reference to the current device\r\n      previousDeviceRef.current = deviceCode;\r\n    }\r\n\r\n    // Cleanup function for unmount or page exit\r\n    return () => {\r\n      if (previousDeviceRef.current) {\r\n        unsubscribeFromMqtt({\r\n          uid: previousDeviceRef.current,\r\n          messageType: [\"1\", \"2\", \"3\", \"4\"],\r\n        })\r\n          .then(() => {})\r\n          .catch((err) =>\r\n            console.error(`Error during cleanup unsubscribe: ${err}`)\r\n          );\r\n      }\r\n    };\r\n  }, [roomData]);\r\n\r\n  // function handleDecode(code) {\r\n  //   const data = decodePosition(code);\r\n  //   const modifiedPeopleData = [...data];\r\n\r\n  //   if (\r\n  //     modifiedPeopleData[0]?.postureIndex === 4 &&\r\n  //     heartBreathRateRef.current\r\n  //   ) {\r\n  //     // Modify the first person (index 0) posture\r\n  //     modifiedPeopleData[0].postureIndex = 6;\r\n  //     modifiedPeopleData[0].posture = \"Resident on Bed\";\r\n  //     modifiedPeopleData[0].color = \"#252F67\";\r\n  //   }\r\n\r\n  //   setPosition(modifiedPeopleData);\r\n  // }\r\n  // function handleHeartBreathUpdate() {\r\n  //   setHeartBreathRateActive(true);\r\n  //   heartBreathRateRef.current = true;\r\n\r\n  //   clearTimeout(timeoutRef.current); // Clear any existing timeout\r\n  //   timeoutRef.current = setTimeout(() => {\r\n  //     setHeartBreathRateActive(false);\r\n  //     heartBreathRateRef.current = false;\r\n  //   }, 5000);\r\n  // }\r\n  // useWebSocket({\r\n  //   onMessage: (data) => {\r\n  //     const payload = JSON.parse(data?.message)?.payload;\r\n  //     if (\r\n  //       payload?.deviceCode === roomData?.rooms?.device_no &&\r\n  //       (payload?.position || payload?.heartbreath)\r\n  //     ) {\r\n  //       if (payload?.position) {\r\n  //         handleDecode(payload.position);\r\n  //       }\r\n  //       if (payload?.heartbreath) {\r\n  //         handleHeartBreathUpdate();\r\n  //       }\r\n  //     }\r\n  //   },\r\n  //   dependencies: [roomData],\r\n  // });\r\n  return (\r\n    <div className=\"w-full flex flex-col gap-4 p-4 pr-0 h-full pt-0\">\r\n      <div\r\n        id=\"roomAlertHeader\"\r\n        className={`alert-header !h-[75px] flex justify-between items-center relative px-4 overflow-hidden rounded-lg ${getBackgroundColor(\r\n          getAlertInfoViaEvent(roomData)?.label\r\n        )}`}\r\n      >\r\n        <div className=\"loader\"></div>\r\n        <div className=\"text-container flex flex-col gap-0 h-full justify-center text-white\">\r\n          <p className=\"text-sm text-gray-100 m-0 font-medium\">\r\n            {roomData.room_name}\r\n          </p>\r\n          <h2 className=\"text-lg font-bold m-0 leading-none \">\r\n            {getAlertInfoViaEvent(roomData)?.title}\r\n          </h2>\r\n        </div>\r\n        <span\r\n          onClick={() => {\r\n            navigate(\r\n              `/supporter/elderlies/elderly-profile/${roomData?.elderly_id}`\r\n            );\r\n          }}\r\n          className=\"text-sm text-gray-100 cursor-pointer p-3 py-2 bg-white/0 rounded-lg hover:bg-white/10 transition-all duration-300\"\r\n        >\r\n          View Elderly\r\n        </span>\r\n      </div>\r\n      <div>\r\n        <div className=\"flex flex-col gap-0 border-b border-gray-200 pb-2 \">\r\n          <h2 className=\"text-lg font-bold m-0 leading-none\">\r\n            {roomData.elderly_name}\r\n          </h2>\r\n          <p className=\"text-sm text-gray-500 m-0\">{roomData.address}</p>\r\n        </div>\r\n        <div></div>\r\n      </div>\r\n\r\n      <div id=\"roomMapAndDetails\" className=\"flex gap-4 h-full overflow-hidden\">\r\n        <WebSocketProvider deviceId={roomData?.rooms?.device_no}>\r\n          <div className=\"map-container w-2/3 border overflow-hidden h-full\">\r\n            {roomData?.rooms?.mount_type === 1 &&\r\n              roomData?.rooms?.is_device_bind && (\r\n                <Room1 roomInfo={roomData?.rooms} />\r\n              )}\r\n            {roomData?.rooms?.mount_type === 2 &&\r\n              roomData?.rooms?.is_device_bind && (\r\n                <Room2 roomInfo={roomData?.rooms} />\r\n              )}\r\n            {!roomData?.rooms?.is_device_bind && (\r\n              <span className=\"w-full h-full flex items-center justify-center\">\r\n                <p> No Device Data Available</p>\r\n              </span>\r\n            )}\r\n          </div>\r\n        </WebSocketProvider>\r\n        <div className=\"details-container w-1/3 \">\r\n          <div className=\"flex flex-col gap-0 p-3\">\r\n            <h2 className=\"text-xl font-bold m-0 leading-none\">\r\n              {transformDateAndTime(roomData.created_at)}\r\n            </h2>\r\n            <p className=\"text-sm text-gray-500 m-0 font-medium\">\r\n              Time of Incident\r\n            </p>\r\n          </div>\r\n          <div className=\"flex flex-col gap-0 p-3\">\r\n            <h2 className=\"text-xl font-bold m-0 leading-none\">\r\n              <AutoUpdatingDuration date={roomData.created_at} />\r\n            </h2>\r\n            <p className=\"text-sm text-gray-500 m-0 font-medium\">Alert Life</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useCallback,\r\n  useMemo,\r\n  useContext,\r\n} from \"react\";\r\nimport { Segmented, Badge, Space, Spin, Empty, Collapse } from \"antd\";\r\nimport RoomAndDetails from \"./roomAndDetails\";\r\nimport { getAlertList } from \"@/api/elderlySupport\";\r\nimport { getAlertInfoViaEvent, getAlertsGroup } from \"@/utils/helper\";\r\nimport dayjs from \"dayjs\";\r\nimport debounce from \"lodash/debounce\";\r\nimport { SidebarContext } from \"@/Context/CustomContext\";\r\nimport { useNotification } from \"@/Context/useNotification\";\r\n\r\nconst { Panel } = Collapse;\r\n\r\nexport default function RoomView() {\r\n  const { setModalDataList, modalDataList } = useContext(SidebarContext);\r\n  const { notificationEvent } = useNotification();\r\n\r\n  const [alertType, setAlertType] = useState(\"All\");\r\n  const [alertList, setAlertList] = useState([]);\r\n  const [activeItem, setActiveItem] = useState(null);\r\n  const [selectedAlert, setSelectedAlert] = useState(null);\r\n  const [alertTypeQuery, setAlertTypeQuery] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const listRef = useRef(null);\r\n\r\n  // Fetch alerts from the API\r\n  const getAlertListData = useCallback(() => {\r\n    if (!hasMore || loading) return;\r\n    setLoading(true);\r\n    getAlertList({\r\n      to_date: \"2024-11-30\",\r\n      from_date: dayjs().format(\"YYYY-MM-DD\"),\r\n      is_resolved: false,\r\n      limit: 20,\r\n      show_device_area: 1,\r\n      show_device_boundaries: 1,\r\n      page,\r\n      ...alertTypeQuery,\r\n    })\r\n      .then((res) => {\r\n        setAlertList((prev) => [...prev, ...res.data]);\r\n        if (page >= res.totalPages) {\r\n          setHasMore(false);\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setLoading(false);\r\n      });\r\n  }, [alertTypeQuery, page, hasMore, loading]);\r\n\r\n  useEffect(() => {\r\n    getAlertListData();\r\n  }, [page, alertTypeQuery]);\r\n\r\n  // Set the first alert as selected by default\r\n  useEffect(() => {\r\n    if (alertList.length > 0 && !activeItem) {\r\n      const firstAlert = alertList[0];\r\n      setActiveItem(firstAlert._id);\r\n      setSelectedAlert(firstAlert);\r\n    }\r\n  }, [alertList, activeItem]);\r\n\r\n  // Handle alert selection\r\n  const onChange = (key) => {\r\n    setActiveItem(key);\r\n    const selected = alertList.find((alert) => alert._id === key);\r\n    setSelectedAlert(selected);\r\n  };\r\n\r\n  // Handle scroll for pagination\r\n  const handleScroll = useCallback(\r\n    debounce(() => {\r\n      if (!listRef.current || loading || !hasMore) return;\r\n\r\n      const { scrollTop, scrollHeight, clientHeight } = listRef.current;\r\n      if (scrollTop + clientHeight >= scrollHeight - 50) {\r\n        setPage((prevPage) => prevPage + 1);\r\n      }\r\n    }, 200),\r\n    [loading, hasMore]\r\n  );\r\n\r\n  // Handle segment filter change\r\n  const onSegmentChange = (value) => {\r\n    setAlertTypeQuery(getAlertsGroup(value));\r\n    setPage(1);\r\n    setAlertList([]);\r\n    setHasMore(true);\r\n  };\r\n  useEffect(() => {\r\n    if (notificationEvent) {\r\n      getAlertListData();\r\n    }\r\n  }, [notificationEvent]);\r\n  useEffect(() => {\r\n    const listElement = listRef.current;\r\n    if (listElement) {\r\n      listElement.addEventListener(\"scroll\", handleScroll);\r\n    }\r\n    return () => {\r\n      if (listElement) {\r\n        listElement.removeEventListener(\"scroll\", handleScroll);\r\n      }\r\n    };\r\n  }, [handleScroll]);\r\n\r\n  // Group alerts by room_name using useMemo for performance\r\n  const groupedAlerts = useMemo(() => {\r\n    return alertList.reduce((acc, alert) => {\r\n      const roomName = alert.room_name;\r\n      if (!acc[roomName]) {\r\n        acc[roomName] = [];\r\n      }\r\n      acc[roomName].push(alert);\r\n      return acc;\r\n    }, {});\r\n  }, [alertList]);\r\n\r\n  // Function to map alert type labels to colors\r\n  const getColorForLabel = (label) => {\r\n    switch (label) {\r\n      case \"Critical\":\r\n        return \"red\";\r\n      case \"Warning\":\r\n        return \"orange\";\r\n      case \"Info\":\r\n        return \"blue\";\r\n      default:\r\n        return \"gray\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full flex justify-center items-center h-[495px] overflow-hidden\">\r\n      <div className=\"w-[30%] flex flex-col gap-4 h-full\">\r\n        <Segmented\r\n          style={{ width: \"100%\" }}\r\n          block\r\n          options={segmentsForAlertView}\r\n          onChange={(value) => onSegmentChange(value)}\r\n        />\r\n        <div\r\n          ref={listRef}\r\n          className=\"w-full overflow-auto\"\r\n          style={{ height: \"440px\" }}\r\n        >\r\n          {alertList.length === 0 && !loading && (\r\n            <Empty description=\"No active alerts available\" />\r\n          )}\r\n          {alertList.length > 0 && (\r\n            <Collapse>\r\n              {Object.entries(groupedAlerts).map(([roomName, alerts]) => {\r\n                // Get unique alert types for this room\r\n                const uniqueTypes = [\r\n                  ...new Set(\r\n                    alerts.map((alert) => getAlertInfoViaEvent(alert)?.label)\r\n                  ),\r\n                ];\r\n                return (\r\n                  <Panel\r\n                    key={roomName}\r\n                    header={\r\n                      <div className=\"flex justify-between items-center\">\r\n                        <span className=\"text-black font-semibold\">\r\n                          {roomName}\r\n                        </span>\r\n                        {/* <Space>\r\n                          {uniqueTypes.map((type) => (\r\n                            <Badge key={type} color={getColorForLabel(type)} />\r\n                          ))}\r\n                        </Space> */}\r\n                      </div>\r\n                    }\r\n                  >\r\n                    {alerts &&\r\n                      alerts.map((alert) => (\r\n                        <div\r\n                          key={alert._id}\r\n                          onClick={() => onChange(alert._id)}\r\n                          className={`flex justify-between items-center p-2 cursor-pointer rounded-md px-4 ${\r\n                            activeItem === alert._id ? \"bg-gray-100\" : \"\"\r\n                          }`}\r\n                        >\r\n                          <span className=\"text-[14px] font-semibold\">\r\n                            {dayjs(alert.created_at).format(\"hh:mm:ss a\")}\r\n                          </span>\r\n                          <Badge\r\n                            color={getColorForLabel(\r\n                              getAlertInfoViaEvent(alert)?.label\r\n                            )}\r\n                            size=\"large\"\r\n                          />\r\n                        </div>\r\n                      ))}\r\n                  </Panel>\r\n                );\r\n              })}\r\n            </Collapse>\r\n          )}\r\n          {loading && (\r\n            <div className=\"w-full flex justify-center py-4\">\r\n              <Spin />\r\n            </div>\r\n          )}\r\n          {!hasMore && alertList.length > 0 && (\r\n            <div className=\"w-full text-center py-4 text-gray-500\">\r\n              No more alerts to load\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"w-[70%] h-full\">\r\n        {selectedAlert ? (\r\n          <RoomAndDetails data={selectedAlert} />\r\n        ) : (\r\n          <Empty description=\"Select an alert to view details\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const segmentsForAlertView = [\r\n  { label: \"All\", value: \"All\" },\r\n  { label: \"Critical\", value: \"Critical\" },\r\n  { label: \"Warning\", value: \"Warning\" },\r\n  { label: \"Info\", value: \"Info\" },\r\n];\r\n"],"names":["RoomAndDetails","roomData","navigate","useNavigate","useState","previousDeviceRef","useRef","getBackgroundColor","type","useEffect","deviceCode","_a","unsubscribeFromMqtt","err","subscribeToMqtt","jsxs","getAlertInfoViaEvent","jsx","_b","WebSocketProvider","_c","_d","_e","Room1","_f","_g","Room2","_h","transformDateAndTime","AutoUpdatingDuration","Panel","Collapse","RoomView","useContext","SidebarContext","notificationEvent","useNotification","alertList","setAlertList","activeItem","setActiveItem","selectedAlert","setSelectedAlert","alertTypeQuery","setAlertTypeQuery","loading","setLoading","page","setPage","hasMore","setHasMore","listRef","getAlertListData","useCallback","getAlertList","dayjs","res","prev","firstAlert","onChange","key","selected","alert","handleScroll","debounce","scrollTop","scrollHeight","clientHeight","prevPage","onSegmentChange","value","getAlertsGroup","listElement","groupedAlerts","useMemo","acc","roomName","getColorForLabel","label","Segmented","segmentsForAlertView","Empty","alerts","Badge","Spin"],"mappings":"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"}