{"version":3,"file":"index-BrP9SzQU.js","sources":["../../src/Pages/Deals/components/AssignInstaller.jsx","../../src/Pages/Deals/utiles.jsx","../../src/Pages/Deals/index.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { RiToolsLine } from \"react-icons/ri\";\r\nimport CustomModal from \"../../../Shared/modal/CustomModal\";\r\nimport { ConfigProvider, Select, Table } from \"antd\";\r\nimport CustomButton from \"@/Shared/button/CustomButton\";\r\nimport CustomTable from \"@/Shared/Table/CustomTable\";\r\nimport { SidebarContext } from \"@/Context/CustomUsertable\";\r\nimport { getUser, getUserDetails } from \"@/api/Users\";\r\nimport { assignInstaller } from \"@/api/ordersManage\";\r\nexport default function AssignInstaller({ data }) {\r\n  const [open, setOpen] = useState(false);\r\n  const sharedMethod = useContext(SidebarContext);\r\n\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [query, setQuery] = useState(\"\");\r\n  function getlist() {\r\n    setLoading(true);\r\n    getUser({\r\n      role: \"installer\",\r\n    }).then((res) => {\r\n      if (res) {\r\n        setDataSource(res?.data);\r\n        setLoading(false);\r\n      }\r\n    });\r\n  }\r\n  function handleSelectChange(value) {\r\n    setSelectedItems(value);\r\n  }\r\n  function handleClick() {\r\n    console.log(\"cliekd\");\r\n    setLoading(true);\r\n    assignInstaller(data?._id, {\r\n      installer_id: selectedItems,\r\n    })\r\n      .then((res) => {\r\n        if (res) {\r\n          console.log(res);\r\n          setOpen(false);\r\n          setLoading(false);\r\n          sharedMethod.getlist();\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setOpen(false);\r\n      });\r\n  }\r\n  function handleAssignBtnClick() {\r\n    getlist();\r\n    // getInstallerData();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <span\r\n        onClick={() => {\r\n          setOpen(true);\r\n          handleAssignBtnClick();\r\n        }}\r\n        className=\"flex items-center gap-2 text-blue-500 font-baloo font-semibold\"\r\n      >\r\n        <RiToolsLine size={18} /> Assign Installer\r\n      </span>\r\n      <CustomModal\r\n        modalOPen={open}\r\n        setModalOpen={setOpen}\r\n        onCancel={() => setOpen(false)}\r\n        title=\"Assign Installer\"\r\n        isBottomButtomShow={false}\r\n      >\r\n        <ConfigProvider\r\n          theme={{\r\n            token: {\r\n              fontFamily: \"Baloo2\",\r\n              colorPrimary: \"#8086AC\",\r\n              colorLinkActive: \"#8086AC\",\r\n              colorLinkHover: \"#8086AC\",\r\n              colorLink: \"#8086AC\",\r\n            },\r\n          }}\r\n        >\r\n          <div\r\n            id=\"addSalesAgent\"\r\n            className=\"flex gap-4 mb-5  justify-between items-center\"\r\n          >\r\n            <Select\r\n              mode=\"single\"\r\n              maxTagCount=\"responsive\"\r\n              optionFontSize={18}\r\n              optionHeight={50}\r\n              placeholder=\"Search Installer\"\r\n              value={selectedItems}\r\n              onChange={handleSelectChange}\r\n              onSearch={(value) => setQuery(value)} // Handles the search input\r\n              style={{ width: \"100%\", borderRadius: \"13px\" }}\r\n              filterOption={false} // Disable default filtering to use custom filtering\r\n              className=\"agentSelection h-[40px]\"\r\n            >\r\n              {dataSource?.map((item) => (\r\n                <Option key={item._id} value={item._id}>\r\n                  {item.name} {item.last_name}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n\r\n            <CustomButton onClick={() => handleClick()}>\r\n              Assign Installer\r\n            </CustomButton>\r\n          </div>\r\n\r\n          {/* Table */}\r\n          {/* {installerData && (\r\n            <Table\r\n              loading={loading}\r\n              dataSource={[installerData] || []}\r\n              columns={[\r\n                {\r\n                  title: \"Installer Name\",\r\n                  dataIndex: \"name\",\r\n                },\r\n                {\r\n                  title: \"Installer Email\",\r\n                  dataIndex: \"email\",\r\n                },\r\n                {\r\n                  title: \"Installer Phone\",\r\n                  dataIndex: \"contact_number\",\r\n                },\r\n              ]}\r\n              pagination={false}\r\n            />\r\n          )} */}\r\n\r\n          {/* <SidebarContext1.SidebarContext.Provider value={{ getlist: getlist }}>\r\n            <CustomTable\r\n              loading={loading}\r\n              tableData={dataSource || []}\r\n              columns={[\r\n                {\r\n                  title: \"Installer Name\",\r\n                  dataIndex: \"name\",\r\n                },\r\n                {\r\n                  title: \"Installer Email\",\r\n                  dataIndex: \"email\",\r\n                },\r\n                {\r\n                  title: \"Installer Phone\",\r\n                  dataIndex: \"phone\",\r\n                },\r\n              ]}\r\n              scroll={{ x: 500, y: 500 }}\r\n            />\r\n          </SidebarContext1.SidebarContext.Provider> */}\r\n        </ConfigProvider>\r\n      </CustomModal>\r\n    </div>\r\n  );\r\n}\r\n","import { Tag } from \"antd\";\r\nimport ReportActionModal from \"../Supportnuser/components/ReportActionModal\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { ConfigProvider, Select } from \"antd\";\r\nimport { updateInstallationStatus } from \"@/api/ordersManage\";\r\nimport { SidebarContext } from \"@/Context/CustomUsertable\";\r\nimport ls from \"store2\";\r\nimport AssignInstaller from \"./components/AssignInstaller\";\r\n\r\nfunction StatusDropdown({ row }) {\r\n  const sharedMethod = useContext(SidebarContext);\r\n  const [status, setStatus] = useState(row?.installation_status);\r\n  const [handleLoading, sethandleLoading] = useState(false);\r\n\r\n  const handleChange = (value) => {\r\n    setStatus(value);\r\n    sethandleLoading(true);\r\n    updateInstallationStatus(row?._id, {\r\n      installation_status: value,\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        sharedMethod.getInstallationList.getCompletedandToBeInstalled();\r\n        sharedMethod.getInstallationList.getDeviceSalesCounts();\r\n        if (res) {\r\n          setStatus(value);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setStatus(row?.installation_status);\r\n      })\r\n      .finally(() => {\r\n        sethandleLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStatus(row?.installation_status);\r\n  }, [row?.installation_status]);\r\n\r\n  return (\r\n    <div className=\"flex items-center space-x-2 mr-0 \">\r\n      <span\r\n        className={`w-3 h-3 rounded-full relative -right-2 ${\r\n          status === \"completed\"\r\n            ? \"bg-[#1EB564]\"\r\n            : status === \"pending\"\r\n            ? \"bg-yellow-500\"\r\n            : \"bg-red-500\"\r\n        }`}\r\n      ></span>\r\n      <ConfigProvider\r\n        theme={{\r\n          token: {\r\n            colorText: \"#707EAE\",\r\n            colorPrimary: \"#8086AC\",\r\n            colorLinkActive: \"#8086AC\",\r\n            colorLinkHover: \"#8086AC\",\r\n            colorLink: \"#8086AC\",\r\n          },\r\n        }}\r\n      >\r\n        <Select\r\n          value={status}\r\n          variant=\"borderless\"\r\n          onChange={handleChange}\r\n          loading={handleLoading}\r\n          optionSelectedColor=\"#8086AC\"\r\n          className=\"w-fit !text-red-100\"\r\n          options={[\r\n            { value: \"completed\", label: <span>Complete</span> },\r\n            { value: \"pending\", label: <span>Pending</span> },\r\n            { value: \"not_started\", label: <span>Not Started</span> },\r\n          ]}\r\n        />\r\n      </ConfigProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function DealColumns(columnsName) {\r\n  const user = ls.get(\"user\");\r\n  const dealDetailCol = [\r\n    ...(user.role !== \"office\"\r\n      ? [\r\n          {\r\n            title: \"Office Identifier\",\r\n            render: (row) => (\r\n              <button>\r\n                <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n                  {row.office_name}\r\n                </span>\r\n              </button>\r\n            ),\r\n          },\r\n        ]\r\n      : [\r\n          {\r\n            title: \"Action\",\r\n            render: (row) => (\r\n              <button>\r\n                <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap \">\r\n                  {row.installation_date === null ? (\r\n                    <span className=\"\">N/A</span>\r\n                  ) : row.installer_id ? (\r\n                    <span className=\"italic\">Assigned</span>\r\n                  ) : (\r\n                    <AssignInstaller data={row} />\r\n                  )}\r\n                </span>\r\n              </button>\r\n            ),\r\n          },\r\n          {\r\n            title: \"Installer Status\",\r\n            render: (row) => (\r\n              <button>\r\n                <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n                  {row.installation_date === null\r\n                    ? \"N/A\"\r\n                    : row.installer_id\r\n                    ? \"Assigned\"\r\n                    : \"Not Assigned\"}\r\n                </span>\r\n              </button>\r\n            ),\r\n          },\r\n          {\r\n            title: \"Report\",\r\n            render: (row) => (\r\n              <div className=\"flex justify-center\">\r\n                <ReportActionModal report={row} />\r\n              </div>\r\n            ),\r\n          },\r\n          {\r\n            title: \"Installation Status\",\r\n            render: (row) => {\r\n              let bgColor;\r\n              switch (row.installation_status) {\r\n                case \"not_started\":\r\n                  bgColor = \"bg-red-500\";\r\n                  break;\r\n                case \"pending\":\r\n                  bgColor = \"bg-yellow-500\";\r\n                  break;\r\n                case \"completed\":\r\n                  bgColor = \"bg-[#1EB564]\";\r\n                  break;\r\n                default:\r\n                  bgColor = \"bg-black\"; // Add a default case to handle unexpected statuses\r\n              }\r\n              const statusMapping = {\r\n                not_started: \"Not Started\",\r\n                pending: \"Pending\",\r\n                completed: \"Completed\",\r\n              };\r\n              return (\r\n                <button>\r\n                  <span\r\n                    className={`text-[14px] xl:text-base capitalize font-normal text-white p-2 px-3 py-1 ${\r\n                      row.installer_id ? bgColor : \"bg-transparent !text-black\"\r\n                    } rounded-lg`}\r\n                  >\r\n                    {row.installer_id\r\n                      ? statusMapping[row.installation_status] || \"Unknown\"\r\n                      : \"N/A\"}\r\n                  </span>\r\n                </button>\r\n              );\r\n            },\r\n          },\r\n        ]),\r\n    {\r\n      title: \"Agent Name (ID Number)\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n            {row.agent_name} ({row.agent_unique_id})\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Date of Sales\",\r\n      render: (row) => {\r\n        const formattedDate = new Date(row.created_at).toLocaleDateString(\r\n          \"en-CA\"\r\n        );\r\n        return (\r\n          <button>\r\n            <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n              {formattedDate}\r\n            </span>\r\n          </button>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Preferred Installation Date\",\r\n      render: (row) => {\r\n        const formattedDate = row.installation_date\r\n          ? new Date(row.installation_date).toLocaleDateString(\"en-CA\")\r\n          : \"--\";\r\n        return (\r\n          <button>\r\n            <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n              {formattedDate}\r\n            </span>\r\n          </button>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Customer Name\",\r\n      render: (row) => {\r\n        return (\r\n          <button>\r\n            <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n              {row?.user_name}\r\n            </span>\r\n          </button>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Customer Phone Number\",\r\n      render: (row) => {\r\n        return (\r\n          <button>\r\n            <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n              {row?.user_phone}\r\n            </span>\r\n          </button>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Customer Email\",\r\n      render: (row) => {\r\n        return (\r\n          <button>\r\n            <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n              {row?.user_email}\r\n            </span>\r\n          </button>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Location\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n            {row.address?.line1},{\" \"}\r\n            {row.address?.line2 ? row.address?.line2 + \", \" : \"\"},{\" \"}\r\n            {row.address?.city}, {row.address?.state},{\" \"}\r\n            {row.address ? row.address.postal_code : \" \"},{\" \"}\r\n            {row.address?.country}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Product Name\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary flex  gap-2\">\r\n            {/* {row.products.map(\r\n              (item, indx) =>\r\n                [\"Seenyor Kit\", \"Installation\"].includes(item.type) &&\r\n                indx < 2 && <span key={indx}>{item.type}</span>\r\n            )} */}\r\n            {row.products\r\n              .filter((item, indx, self) => {\r\n                const isUniqueSeenyorKit =\r\n                  item.type === \"Seenyor Kit\" &&\r\n                  self.findIndex((i) => i.type === \"Seenyor Kit\") === indx;\r\n                return (\r\n                  !/^AI Sensor/.test(item.type) &&\r\n                  (item.type !== \"Seenyor Kit\" || isUniqueSeenyorKit)\r\n                );\r\n              })\r\n              .map((item, indx) => {\r\n                const color =\r\n                  item.type === \"Seenyor Kit\"\r\n                    ? \"blue\"\r\n                    : item.type === \"Installation\"\r\n                    ? \"orange\"\r\n                    : \"default\";\r\n                return (\r\n                  <Tag key={indx} color={color}>\r\n                    {item.type === \"Seenyor Kit\" ? \"Package\" : item.type}\r\n                  </Tag>\r\n                );\r\n              })}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Product Price\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary\">\r\n            $\r\n            {row.products\r\n              .filter((item) =>\r\n                [\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                  item.type\r\n                )\r\n              )\r\n              .reduce((total, item) => total + item.price, 0)\r\n              .toFixed(2)}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Addon Name\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary flex gap-2\">\r\n            {/* {row.products.map(\r\n              (item, indx) =>\r\n                ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                  item.type\r\n                ) && <span key={indx}>{item.type}</span>\r\n            )} */}\r\n            {row.products\r\n              .filter(\r\n                (item) =>\r\n                  ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                    item.type\r\n                  )\r\n              )\r\n              .map((item, indx) => <Tag key={indx}>{item.type}</Tag>).length ===\r\n            0 ? (\r\n              <span>--</span>\r\n            ) : (\r\n              row.products\r\n                .filter(\r\n                  (item) =>\r\n                    ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                      item.type\r\n                    )\r\n                )\r\n                .map((item, indx) => <Tag key={indx}>{item.type}</Tag>)\r\n            )}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Addon Price\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n            {row.products\r\n              .map((item, indx) =>\r\n                ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                  item.type\r\n                ) ? (\r\n                  <span key={indx}>${item.price.toFixed(2)}</span>\r\n                ) : null\r\n              )\r\n              .filter(Boolean).length === 0 ? (\r\n              <span>--</span>\r\n            ) : (\r\n              row.products.map((item, indx) =>\r\n                ![\"Seenyor Kit\", \"Installation\", \"AI Monitoring\"].includes(\r\n                  item.type\r\n                ) ? (\r\n                  <span key={indx}>${item.price.toFixed(2)}</span>\r\n                ) : null\r\n              )\r\n            )}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Total Price\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\"text-[14px] xl:text-base font-normal text-text-secondary text-nowrap\">\r\n            ${row.total.toFixed(2)}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n\r\n    {\r\n      title: \"Payment Status\",\r\n      dataIndex: \"payment_status\",\r\n      key: \"payment_status\",\r\n      filters: [\r\n        { text: \"Completed\", value: \"completed\" },\r\n        { text: \"Pending\", value: \"pending\" },\r\n        { text: \"Cancelled\", value: \"cancelled\" },\r\n      ],\r\n      filterMultiple: true,\r\n      onFilter: (value, record) => record.payment_status.includes(value),\r\n      render: (status, record) => {\r\n        let color = \"\";\r\n\r\n        switch (status) {\r\n          case \"pending\":\r\n            color = \"orange\";\r\n            break;\r\n          case \"cancelled\":\r\n            color = \"red\";\r\n            break;\r\n          case \"completed\":\r\n            color = \"green\";\r\n            break;\r\n          default:\r\n            color = \"black\";\r\n        }\r\n\r\n        return (\r\n          <span\r\n            style={{\r\n              backgroundColor: color,\r\n              color: \"white\",\r\n              padding: \"4px 8px\",\r\n              borderRadius: \"4px\",\r\n              fontWeight: 500,\r\n              textTransform: \"capitalize\",\r\n            }}\r\n          >\r\n            {status}\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  if (columnsName === \"dealDetailCol\") {\r\n    return dealDetailCol;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { ConfigProvider, Select, Table, DatePicker } from \"antd\";\r\nimport DealColumns from \"./utiles\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport ls from \"store2\";\r\nimport { getUser } from \"@/api/Users\";\r\nimport { getDealDetails } from \"@/api/Dashboard\";\r\nimport WeeklyMonthlyPicker from \"@/Components/WeeklyMonthlyPicker/WeeklyMonthlyPicker\";\r\nimport { SidebarContext } from \"@/Context/CustomUsertable\";\r\nimport CustomTable from \"@/Shared/Table/CustomTable\";\r\nimport \"./style.css\";\r\nimport CustomButton from \"@/Shared/button/CustomButton\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { saveAs } from \"file-saver\";\r\nconst { RangePicker } = DatePicker;\r\nconst Deals = () => {\r\n  const [DDOrderStatus, setDDOrderStatus] = useState(null);\r\n  const [DDAgentId, setDDAgentId] = useState(\"all\");\r\n  const [user, SetUser] = useState(ls.get(\"user\"));\r\n  const [office, setOffice] = useState([]);\r\n  const [salesAgent, setSalesAgent] = useState([]);\r\n  const [officeId, setOfficeId] = useState(null);\r\n  const [dealDetails, setDealDetails] = useState([]);\r\n  const [dealDetailsForReports, setDealDetailsForReports] = useState([]);\r\n  const [officeQuery, setOfficeQuery] = useState({});\r\n  const [dealLoading, setDealLoading] = useState(false);\r\n  const [page, SetPage] = useState(1);\r\n  const [fromDate, setFromDate] = useState(null);\r\n  const [toDate, setToDate] = useState(null);\r\n  const dealDetailCol = DealColumns(\"dealDetailCol\");\r\n\r\n  //Report Download\r\n  const downloadReport = async () => {\r\n    try {\r\n      const reportData = await DealsForReports(\r\n        DDAgentId === \"all\" ? null : DDAgentId,\r\n        DDOrderStatus === \"all\" ? null : DDOrderStatus\r\n      );\r\n\r\n      if (!reportData || reportData.length === 0) {\r\n        throw new Error(\"No data available to download\");\r\n      }\r\n\r\n      const formattedData = reportData.map((item, index) => {\r\n        const saleDate = new Date(item.created_at);\r\n        return {\r\n          \"No.\": index + 1,\r\n          \"Office Name\": item.office_name,\r\n          \"Agent ID\": item.agent_unique_id,\r\n          \"Agent Name\": item.agent_name,\r\n          // \"Order Number\": item.order_no,\r\n          \"Sale Date\": saleDate.toLocaleDateString(\"en-CA\"),\r\n          \"Sale Time\": saleDate.toLocaleTimeString(\"en-GB\", {\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n          }),\r\n          Products: item.products\r\n            .map((product, idx) => `${idx + 1}. ${product.name}`)\r\n            .join(\"\"),\r\n          \"Extra Product\": item.products\r\n            .map((item, indx) => {\r\n              if (\r\n                item.type !== \"Seenyor Kit\" &&\r\n                item.type !== \"Installation\" &&\r\n                item.type !== \"AI Monitoring\"\r\n              ) {\r\n                return item.type;\r\n              }\r\n            })\r\n            .join(\"\"),\r\n          \"Current Sale Status\": item.saleStatus,\r\n          \"City Location\": item.address?.city || \"N/A\",\r\n        };\r\n      });\r\n\r\n      const worksheet = XLSX.utils.json_to_sheet(formattedData);\r\n      const workbook = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(workbook, worksheet, \"Sales Report\");\r\n\r\n      const excelBuffer = XLSX.write(workbook, {\r\n        bookType: \"xlsx\",\r\n        type: \"array\",\r\n      });\r\n      const blob = new Blob([excelBuffer], {\r\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n      });\r\n\r\n      const fileName = `Sales_Report_${\r\n        new Date().toISOString().split(\"T\")[0]\r\n      }.xlsx`;\r\n      saveAs(blob, fileName);\r\n    } catch (error) {\r\n      console.error(\"Error downloading the sales report:\", error);\r\n      // Here you might want to show an error message to the user\r\n      // For example: message.error(\"Failed to download report. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const DealsForReports = (agentId, orderStatus) => {\r\n    return getDealDetails({\r\n      ...officeQuery,\r\n      agent_id: agentId,\r\n      payment_status: orderStatus,\r\n      from_date: fromDate,\r\n      to_date: toDate,\r\n      limit: 100000,\r\n    })\r\n      .then((res) => {\r\n        setDealDetailsForReports(res);\r\n        return res.data; // Return the data for further processing\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        throw err; // Propagate the error\r\n      });\r\n  };\r\n  const DealDetails = useCallback(\r\n    (agentId, orderStatus) => {\r\n      setDealLoading(true);\r\n      getDealDetails({\r\n        ...page,\r\n        ...officeQuery,\r\n        agent_id: agentId,\r\n        payment_status: orderStatus,\r\n        from_date: fromDate,\r\n        to_date: toDate,\r\n      })\r\n        .then((res) => {\r\n          console.log(res);\r\n\r\n          setDealDetails(res);\r\n          setDealLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    [DDOrderStatus, DDAgentId, officeQuery.office_id, toDate, page]\r\n  );\r\n  function getAllOffice() {\r\n    getUser({ role: \"office\" })\r\n      .then((res) => {\r\n        setOffice(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  function getAllAgent() {\r\n    getUser({ ...officeQuery, role: \"sales_agent\" })\r\n      .then((res) => {\r\n        setSalesAgent(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    getAllOffice();\r\n    getAllAgent();\r\n  }, []);\r\n  useEffect(() => {\r\n    getAllAgent();\r\n  }, [officeQuery]);\r\n  useEffect(() => {\r\n    DealDetails(\r\n      DDAgentId === \"all\" ? null : DDAgentId,\r\n      DDOrderStatus === \"all\" ? null : DDOrderStatus\r\n    );\r\n  }, [DealDetails]);\r\n  //Weekly, Monthly and  Date Picker Handler\r\n  function handleWeeklyMonthly(e) {\r\n    console.log(e);\r\n    setFromDate(e.start);\r\n    setToDate(e.end);\r\n  }\r\n  function handleDatePicker(e) {\r\n    setFromDate(e[0]);\r\n    setToDate(e[1]);\r\n  }\r\n  useEffect(() => {\r\n    if (!officeId) return;\r\n    if (officeId === \"all\") {\r\n      if (officeQuery.office_id) {\r\n        const newQuery = { ...officeQuery };\r\n        delete newQuery.office_id;\r\n        setOfficeQuery(newQuery);\r\n      }\r\n    } else {\r\n      setOfficeQuery((prevQuery) => ({\r\n        ...prevQuery,\r\n        office_id: officeId,\r\n      }));\r\n      // Reset other states if needed\r\n      setDDAgentId(\"all\");\r\n    }\r\n  }, [officeId]);\r\n  return (\r\n    <>\r\n      <div\r\n        id=\"Distributor_Dash_Top\"\r\n        className=\"flex justify-between w-full mb-5 flex-wrap gap-5 pt-[30px]\"\r\n      >\r\n        <ConfigProvider\r\n          theme={{\r\n            token: {\r\n              fontFamily: \"Baloo2\",\r\n              colorPrimary: \"#8086AC\",\r\n              colorLinkActive: \"#8086AC\",\r\n              colorLinkHover: \"#8086AC\",\r\n              colorLink: \"#8086AC\",\r\n            },\r\n          }}\r\n        >\r\n          {user.role == \"office\" ? (\r\n            <div className=\"p-2 px-4 rounded-lg text-[36px] font-bold  text-primary\">\r\n              {user.office}\r\n            </div>\r\n          ) : user.role == \"sales_agent\" ? null : (\r\n            <Select\r\n              showSearch\r\n              optionFilterProp=\"label\"\r\n              onChange={(e) => setOfficeId(e.value)}\r\n              defaultValue={\"all\"}\r\n              size=\"large\"\r\n              className=\"custom-select\"\r\n              labelInValue={true}\r\n              options={[\r\n                {\r\n                  value: \"all\",\r\n                  label: (\r\n                    <>\r\n                      All Offices{\" \"}\r\n                      <span className=\"highlighted-number\">\r\n                        {office.length}\r\n                      </span>\r\n                    </>\r\n                  ), // Number of options included here\r\n                },\r\n                ...office.map((office) => ({\r\n                  value: office._id,\r\n                  label: office.name,\r\n                })),\r\n              ]}\r\n            />\r\n          )}\r\n          <div id=\"DatePickers\" className=\"flex gap-4 items-center\">\r\n            <WeeklyMonthlyPicker\r\n              placeholder={\"Weekly/Monthly\"}\r\n              style={{ width: \"140px\", borderRadius: \"10px\" }}\r\n              handleChnage={handleWeeklyMonthly}\r\n            />\r\n            <RangePicker\r\n              showTime={false}\r\n              style={{ width: \"200px\", borderRadius: \"10px\" }}\r\n              size=\"large\"\r\n              placeholder={[\"Pick Data Range (Start)\", \"End\"]}\r\n              format=\"YYYY-MM-DD\"\r\n              onChange={(value, dateString) => {\r\n                handleDatePicker(dateString);\r\n              }}\r\n            />\r\n            <CustomButton\r\n              disabled={dealDetails?.data?.length <= 0}\r\n              onClick={downloadReport}\r\n              type=\"text\"\r\n            >\r\n              Download\r\n            </CustomButton>\r\n          </div>\r\n        </ConfigProvider>\r\n      </div>\r\n      <div\r\n        id=\"dealsDetails\"\r\n        className=\" p-[25px] rounded-2xl  bg-white w-full mb-[20px]\"\r\n      >\r\n        <div id=\"DealsHeader\" className=\"w-full flex justify-between mb-8\">\r\n          <h1 className=\"text-[24px] font-bold\">All Deal</h1>\r\n          {user.role == \"sales_agent\" ? null : (\r\n            <div id=\"chartController\" className=\"flex gap-4\">\r\n              <ConfigProvider\r\n                theme={{\r\n                  token: {\r\n                    fontFamily: \"Baloo2\",\r\n                    colorPrimary: \"#8086AC\",\r\n                    colorLinkActive: \"#8086AC\",\r\n                    colorLinkHover: \"#8086AC\",\r\n                    colorLink: \"#8086AC\",\r\n                  },\r\n                }}\r\n              >\r\n                <Select\r\n                  optionFilterProp=\"label\"\r\n                  onChange={(e) => setDDOrderStatus(e.value)}\r\n                  defaultValue={\"all\"}\r\n                  size=\"large\"\r\n                  labelInValue={true}\r\n                  options={[\r\n                    {\r\n                      value: \"all\",\r\n                      label: \"All Sales\",\r\n                    },\r\n                    {\r\n                      value: \"completed\",\r\n                      label: \"Completed\",\r\n                    },\r\n                    {\r\n                      value: \"pending\",\r\n                      label: \"Pending\",\r\n                    },\r\n                    {\r\n                      value: \"cancelled\",\r\n                      label: \"Cancelled\",\r\n                    },\r\n                  ]}\r\n                />\r\n                <Select\r\n                  showSearch\r\n                  optionFilterProp=\"label\"\r\n                  onChange={(e) => setDDAgentId(e.value)}\r\n                  defaultValue={\"all\"}\r\n                  size=\"large\"\r\n                  value={DDAgentId}\r\n                  style={{ maxWidth: 150, zIndex: \"400\" }}\r\n                  labelInValue={true}\r\n                  options={[\r\n                    {\r\n                      value: \"all\",\r\n                      label: \"All Agents\",\r\n                    },\r\n                    ...salesAgent.map((agent) => ({\r\n                      value: agent._id,\r\n                      label: agent.name + \" \" + agent.last_name,\r\n                    })),\r\n                  ]}\r\n                />\r\n              </ConfigProvider>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <SidebarContext.Provider\r\n          value={{\r\n            getlist: DealDetails,\r\n            total: dealDetails.total || [],\r\n            page,\r\n            SetPage,\r\n          }}\r\n        >\r\n          <CustomTable\r\n            loading={dealLoading}\r\n            tableData={dealDetails.data}\r\n            columns={dealDetailCol}\r\n          />\r\n        </SidebarContext.Provider>\r\n        {/* <Table\r\n            loading={dealLoading}\r\n            pagination={{\r\n              total: dealDetails.total,\r\n              onChange: (page, pageSize) => {\r\n                setPage(page);\r\n              },\r\n            }}\r\n            scroll={{ x: 750 }}\r\n            className=\"custom-table-filter\"\r\n            columns={dealDetailCol}\r\n            dataSource={dealDetails.data}\r\n          /> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Deals;\r\n"],"names":["AssignInstaller","data","open","setOpen","useState","sharedMethod","useContext","SidebarContext","dataSource","setDataSource","selectedItems","setSelectedItems","loading","setLoading","query","setQuery","getlist","getUser","res","handleSelectChange","value","handleClick","assignInstaller","handleAssignBtnClick","jsxs","jsx","RiToolsLine","CustomModal","ConfigProvider","Select","item","CustomButton","DealColumns","columnsName","ls","row","ReportActionModal","bgColor","statusMapping","formattedDate","_a","_b","_c","_d","_e","_f","indx","self","isUniqueSeenyorKit","i","color","Tag","total","record","status","RangePicker","DatePicker","Deals","DDOrderStatus","setDDOrderStatus","DDAgentId","setDDAgentId","user","SetUser","office","setOffice","salesAgent","setSalesAgent","officeId","setOfficeId","dealDetails","setDealDetails","dealDetailsForReports","setDealDetailsForReports","officeQuery","setOfficeQuery","dealLoading","setDealLoading","page","SetPage","fromDate","setFromDate","toDate","setToDate","dealDetailCol","downloadReport","reportData","DealsForReports","formattedData","index","saleDate","product","idx","worksheet","XLSX.utils","workbook","excelBuffer","XLSX.write","blob","fileName","saveAs","error","agentId","orderStatus","getDealDetails","err","DealDetails","useCallback","getAllOffice","getAllAgent","useEffect","handleWeeklyMonthly","e","handleDatePicker","newQuery","prevQuery","Fragment","WeeklyMonthlyPicker","dateString","agent","CustomTable"],"mappings":"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"}