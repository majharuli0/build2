{"version":3,"file":"HeartRateAnnomalyStatistic-CHm84p-N.js","sources":["../../src/Pages/Elderlies/Components/TabContents/Health/Components/HeartRateAnnomalyStatistic.jsx"],"sourcesContent":["import { useState, useEffect, useContext, useCallback } from \"react\";\r\nimport Template from \"@/Components/GraphAndChartTemp/Template\";\r\nimport { getTemplateData } from \"@/Pages/Elderlies/Components/Utiles/utiles\";\r\nimport BarChart from \"@/Components/GraphAndChart/barChart\";\r\nimport { CustomContext } from \"@/Context/UseCustomContext\";\r\nimport dayjs from \"dayjs\";\r\nimport { getSleepEvents } from \"@/api/deviceReports\";\r\nimport SkeletonBarChart from \"@/components/Skeleton/SkeletonBarChart\";\r\n\r\nexport default function HeartRateAnomalyStatistic({ isSummaryBtn = true }) {\r\n  const { title, color, icon, dataAnalysis, summaryProps } = getTemplateData(\r\n    \"Heart Rate Anomaly Statistic\"\r\n  );\r\n  const context = useContext(CustomContext);\r\n  const {\r\n    chartToDate = \"\",\r\n    chartFromDate = \"\",\r\n    elderlyDetails,\r\n  } = context || {};\r\n  const [toDate, setToDate] = useState(\r\n    dayjs().subtract(1, \"day\").format(\"YYYY-MM-DD\")\r\n  );\r\n  const [fromDate, setFromDate] = useState(\r\n    dayjs().subtract(31, \"day\").format(\"YYYY-MM-DD\")\r\n  );\r\n  const [heartRate, setHeartRate] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const getHeartRateAnomaly = useCallback(() => {\r\n    if (!elderlyDetails?.deviceId || !elderlyDetails._id) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    getSleepEvents({\r\n      uids: elderlyDetails?.deviceId,\r\n      elderly_id: elderlyDetails._id,\r\n      to_date: fromDate,\r\n      from_date: toDate,\r\n    })\r\n      .then((res) => {\r\n        const filtered = filteredData(res?.data);\r\n        setHeartRate(filtered);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoading(false);\r\n      });\r\n  }, [toDate, fromDate, elderlyDetails]);\r\n\r\n  useEffect(() => {\r\n    getHeartRateAnomaly();\r\n  }, [getHeartRateAnomaly]);\r\n\r\n  useEffect(() => {\r\n    if (chartToDate && chartFromDate) {\r\n      setToDate(chartToDate);\r\n      setFromDate(chartFromDate);\r\n    }\r\n  }, [chartToDate, chartFromDate]);\r\n\r\n  function filteredData(data) {\r\n    const result = [];\r\n    data?.forEach((item) => {\r\n      const eventDate = item.date;\r\n      item?.events?.forEach((ev) => {\r\n        if (ev.event_type === 14 || ev.event_type === 15) {\r\n          const existingEntry = result.find(\r\n            (entry) => entry.date === eventDate\r\n          );\r\n          if (existingEntry) {\r\n            existingEntry.anomalyHeartRate += 1;\r\n          } else {\r\n            result.push({ date: eventDate, anomalyHeartRate: 1 });\r\n          }\r\n        }\r\n      });\r\n    });\r\n    return result;\r\n  }\r\n\r\n  return (\r\n    <Template\r\n      title={title}\r\n      color={color}\r\n      icon={icon}\r\n      dataAnalysis={dataAnalysis}\r\n      isSummaryBtn={isSummaryBtn}\r\n      summaryProps={summaryProps}\r\n    >\r\n      {loading ? (\r\n        <SkeletonBarChart\r\n          height={350}\r\n          chartHeight={280}\r\n          barGroups={25}\r\n          barsPerGroup={2}\r\n          gridLines={5}\r\n          barWidth={40}\r\n        />\r\n      ) : (\r\n        <BarChart\r\n          data={heartRate}\r\n          color={color}\r\n          dataType=\"number\"\r\n          fromDate={fromDate}\r\n          toDate={toDate}\r\n          chartFor=\"heartRateAnomaly\"\r\n        />\r\n      )}\r\n    </Template>\r\n  );\r\n}\r\n"],"names":["HeartRateAnomalyStatistic","isSummaryBtn","title","color","icon","dataAnalysis","summaryProps","getTemplateData","context","useContext","CustomContext","chartToDate","chartFromDate","elderlyDetails","toDate","setToDate","useState","dayjs","fromDate","setFromDate","heartRate","setHeartRate","loading","setLoading","getHeartRateAnomaly","useCallback","getSleepEvents","res","filtered","filteredData","err","useEffect","data","result","item","eventDate","_a","ev","existingEntry","entry","jsx","Template","SkeletonBarChart","BarChart"],"mappings":"8pBASA,SAAwBA,EAA0B,CAAE,aAAAC,EAAe,IAAQ,CACzE,KAAM,CAAE,MAAAC,EAAO,MAAAC,EAAO,KAAAC,EAAM,aAAAC,EAAc,aAAAC,GAAiBC,EACzD,8BAAA,EAEIC,EAAUC,EAAAA,WAAWC,CAAa,EAClC,CACJ,YAAAC,EAAc,GACd,cAAAC,EAAgB,GAChB,eAAAC,CAAA,EACEL,GAAW,CAAA,EACT,CAACM,EAAQC,CAAS,EAAIC,EAAAA,SAC1BC,IAAQ,SAAS,EAAG,KAAK,EAAE,OAAO,YAAY,CAAA,EAE1C,CAACC,EAAUC,CAAW,EAAIH,EAAAA,SAC9BC,IAAQ,SAAS,GAAI,KAAK,EAAE,OAAO,YAAY,CAAA,EAE3C,CAACG,EAAWC,CAAY,EAAIL,EAAAA,SAAS,CAAA,CAAE,EACvC,CAACM,EAASC,CAAU,EAAIP,EAAAA,SAAS,EAAI,EAErCQ,EAAsBC,EAAAA,YAAY,IAAM,CAC5C,GAAI,EAACZ,GAAA,MAAAA,EAAgB,WAAY,CAACA,EAAe,IAAK,CACpDU,EAAW,EAAK,EAChB,MACF,CACAA,EAAW,EAAI,EACfG,EAAe,CACb,KAAMb,GAAA,YAAAA,EAAgB,SACtB,WAAYA,EAAe,IAC3B,QAASK,EACT,UAAWJ,CAAA,CACZ,EACE,KAAMa,GAAQ,CACb,MAAMC,EAAWC,EAAaF,GAAA,YAAAA,EAAK,IAAI,EACvCN,EAAaO,CAAQ,EACrBL,EAAW,EAAK,CAClB,CAAC,EACA,MAAOO,GAAQ,CACd,QAAQ,IAAIA,CAAG,EACfP,EAAW,EAAK,CAClB,CAAC,CACL,EAAG,CAACT,EAAQI,EAAUL,CAAc,CAAC,EAErCkB,EAAAA,UAAU,IAAM,CACdP,EAAA,CACF,EAAG,CAACA,CAAmB,CAAC,EAExBO,EAAAA,UAAU,IAAM,CACVpB,GAAeC,IACjBG,EAAUJ,CAAW,EACrBQ,EAAYP,CAAa,EAE7B,EAAG,CAACD,EAAaC,CAAa,CAAC,EAE/B,SAASiB,EAAaG,EAAM,CAC1B,MAAMC,EAAS,CAAA,EACf,OAAAD,GAAA,MAAAA,EAAM,QAASE,GAAS,OACtB,MAAMC,EAAYD,EAAK,MACvBE,EAAAF,GAAA,YAAAA,EAAM,SAAN,MAAAE,EAAc,QAASC,GAAO,CAC5B,GAAIA,EAAG,aAAe,IAAMA,EAAG,aAAe,GAAI,CAChD,MAAMC,EAAgBL,EAAO,KAC1BM,GAAUA,EAAM,OAASJ,CAAA,EAExBG,EACFA,EAAc,kBAAoB,EAElCL,EAAO,KAAK,CAAE,KAAME,EAAW,iBAAkB,EAAG,CAExD,CACF,EACF,GACOF,CACT,CAEA,OACEO,EAAAA,IAACC,EAAA,CACC,MAAAvC,EACA,MAAAC,EACA,KAAAC,EACA,aAAAC,EACA,aAAAJ,EACA,aAAAK,EAEC,SAAAgB,EACCkB,EAAAA,IAACE,EAAA,CACC,OAAQ,IACR,YAAa,IACb,UAAW,GACX,aAAc,EACd,UAAW,EACX,SAAU,EAAA,CAAA,EAGZF,EAAAA,IAACG,EAAA,CACC,KAAMvB,EACN,MAAAjB,EACA,SAAS,SACT,SAAAe,EACA,OAAAJ,EACA,SAAS,kBAAA,CAAA,CACX,CAAA,CAIR"}