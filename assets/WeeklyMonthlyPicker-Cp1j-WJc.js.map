{"version":3,"file":"WeeklyMonthlyPicker-Cp1j-WJc.js","sources":["../../src/Components/WeeklyMonthlyPicker/WeeklyMonthlyPicker.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { DatePicker, Space } from \"antd\";\r\nimport dayjs from \"dayjs\";\r\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\r\nimport weekOfYear from \"dayjs/plugin/weekOfYear\";\r\n\r\ndayjs.extend(customParseFormat);\r\ndayjs.extend(weekOfYear); // Extend dayjs to use week of year\r\n\r\nconst WeeklyMonthlyPicker = ({ placeholder, style, handleChnage, value }) => {\r\n  const [format, setFormat] = useState(\"\");\r\n  const [activePicker, setActivePicker] = useState(\"weekly\");\r\n  // Function to format the selected month\r\n  const formatMonth = (value) => {\r\n    const start = dayjs(value).startOf(\"month\").format(\"YYYY-MM-DD\"); // Get start date of month\r\n    const end = dayjs(value).endOf(\"month\").format(\"YYYY-MM-DD\"); // Get end date of month\r\n    return {\r\n      month: dayjs(value).format(\"MMMM-YY\"),\r\n      start,\r\n      end,\r\n    }; // e.g., { month: \"October\", start: \"2024-10-01\", end: \"2024-10-31\" }\r\n  };\r\n\r\n  // Function to format the selected week\r\n  const formatWeek = (value) => {\r\n    const start = dayjs(value).startOf(\"week\").format(\"YYYY-MM-DD\"); // Get start date of week\r\n    const end = dayjs(value).endOf(\"week\").format(\"YYYY-MM-DD\"); // Get end date of week\r\n    return {\r\n      week: dayjs(value).week(),\r\n      start,\r\n      end,\r\n    }; // e.g., { week: 42, start: \"2024-10-15\", end: \"2024-10-21\" }\r\n  };\r\n\r\n  // Function to display the formatted string in the DatePicker\r\n  const displayFormat = (value) => {\r\n    if (format === \"month\") {\r\n      return formatMonth(value).month; // Return month name for display\r\n    } else {\r\n      return `Week ${formatWeek(value).week}`; // Return week number for display\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DatePicker\r\n      style={style}\r\n      placeholder={placeholder}\r\n      size=\"large\"\r\n      format={displayFormat} // Use the display format function\r\n      picker={format === \"month\" ? \"month\" : \"week\"}\r\n      onChange={(value) => {\r\n        if (value) {\r\n          // Check if the value is valid before formatting\r\n          const formatted =\r\n            format === \"month\" ? formatMonth(value) : formatWeek(value);\r\n          handleChnage(formatted);\r\n        } else {\r\n          // If the value is null (cleared), pass an empty string\r\n          handleChnage(\"\");\r\n        }\r\n      }}\r\n      renderExtraFooter={() => {\r\n        return (\r\n          <div className=\"flex items-center gap-2 w-full justify-center\">\r\n            <div className=\"p-1 \">\r\n              <div\r\n                onClick={() => {\r\n                  setFormat(\"week\");\r\n                  setActivePicker(\"weekly\");\r\n                }}\r\n                className={`cursor-pointer font-medium text-text-primary ${\r\n                  activePicker === \"weekly\"\r\n                    ? \"bg-text-primary text-white\"\r\n                    : \"bg-white\"\r\n                } h-8 px-3 flex items-center justify-center rounded`}\r\n              >\r\n                Weekly\r\n              </div>\r\n            </div>\r\n            <div className=\"p-3 \">\r\n              <div\r\n                onClick={() => {\r\n                  setFormat(\"month\");\r\n                  setActivePicker(\"monthly\");\r\n                }}\r\n                className={`cursor-pointer font-medium text-text-primary ${\r\n                  activePicker === \"monthly\"\r\n                    ? \"bg-text-primary text-white\"\r\n                    : \"bg-white\"\r\n                } h-8 px-3 flex items-center justify-center rounded`}\r\n              >\r\n                Monthly\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default WeeklyMonthlyPicker;\r\n"],"names":["dayjs","customParseFormat","weekOfYear","WeeklyMonthlyPicker","placeholder","style","handleChnage","value","format","setFormat","useState","activePicker","setActivePicker","formatMonth","start","end","formatWeek","displayFormat","jsx","DatePicker","formatted","jsxs"],"mappings":"sZAMAA,EAAM,OAAOC,CAAiB,EAC9BD,EAAM,OAAOE,CAAU,EAEvB,MAAMC,EAAsB,CAAC,CAAE,YAAAC,EAAa,MAAAC,EAAO,aAAAC,EAAc,MAAAC,KAAY,CAC3E,KAAM,CAACC,EAAQC,CAAS,EAAIC,EAAAA,SAAS,EAAE,EACjC,CAACC,EAAcC,CAAe,EAAIF,EAAAA,SAAS,QAAQ,EAEnDG,EAAeN,GAAU,CAC7B,MAAMO,EAAQd,EAAMO,CAAK,EAAE,QAAQ,OAAO,EAAE,OAAO,YAAY,EACzDQ,EAAMf,EAAMO,CAAK,EAAE,MAAM,OAAO,EAAE,OAAO,YAAY,EAC3D,MAAO,CACL,MAAOP,EAAMO,CAAK,EAAE,OAAO,SAAS,EACpC,MAAAO,EACA,IAAAC,CAAA,CAEJ,EAGMC,EAAcT,GAAU,CAC5B,MAAMO,EAAQd,EAAMO,CAAK,EAAE,QAAQ,MAAM,EAAE,OAAO,YAAY,EACxDQ,EAAMf,EAAMO,CAAK,EAAE,MAAM,MAAM,EAAE,OAAO,YAAY,EAC1D,MAAO,CACL,KAAMP,EAAMO,CAAK,EAAE,KAAA,EACnB,MAAAO,EACA,IAAAC,CAAA,CAEJ,EAGME,EAAiBV,GACjBC,IAAW,QACNK,EAAYN,CAAK,EAAE,MAEnB,QAAQS,EAAWT,CAAK,EAAE,IAAI,GAIzC,OACEW,EAAAA,IAACC,EAAA,CACC,MAAAd,EACA,YAAAD,EACA,KAAK,QACL,OAAQa,EACR,OAAQT,IAAW,QAAU,QAAU,OACvC,SAAWD,GAAU,CACnB,GAAIA,EAAO,CAET,MAAMa,EACJZ,IAAW,QAAUK,EAAYN,CAAK,EAAIS,EAAWT,CAAK,EAC5DD,EAAac,CAAS,CACxB,MAEEd,EAAa,EAAE,CAEnB,EACA,kBAAmB,IAEfe,EAAAA,KAAC,MAAA,CAAI,UAAU,gDACb,SAAA,CAAAH,EAAAA,IAAC,MAAA,CAAI,UAAU,OACb,SAAAA,EAAAA,IAAC,MAAA,CACC,QAAS,IAAM,CACbT,EAAU,MAAM,EAChBG,EAAgB,QAAQ,CAC1B,EACA,UAAW,gDACTD,IAAiB,SACb,6BACA,UACN,qDACD,SAAA,QAAA,CAAA,EAGH,EACAO,EAAAA,IAAC,MAAA,CAAI,UAAU,OACb,SAAAA,EAAAA,IAAC,MAAA,CACC,QAAS,IAAM,CACbT,EAAU,OAAO,EACjBG,EAAgB,SAAS,CAC3B,EACA,UAAW,gDACTD,IAAiB,UACb,6BACA,UACN,qDACD,SAAA,SAAA,CAAA,CAED,CACF,CAAA,EACF,CAEJ,CAAA,CAGN"}