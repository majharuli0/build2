{"version":3,"file":"multibarChart-D4daeGPE.js","sources":["../../node_modules/dayjs/plugin/isSameOrAfter.js","../../node_modules/dayjs/plugin/isSameOrBefore.js","../../src/Components/GraphAndChart/multibarChart.jsx"],"sourcesContent":["!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_isSameOrAfter=t()}(this,(function(){\"use strict\";return function(e,t){t.prototype.isSameOrAfter=function(e,t){return this.isSame(e,t)||this.isAfter(e,t)}}}));","!function(e,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_isSameOrBefore=i()}(this,(function(){\"use strict\";return function(e,i){i.prototype.isSameOrBefore=function(e,i){return this.isSame(e,i)||this.isBefore(e,i)}}}));","import React, { useEffect, useState, useMemo, useContext } from \"react\";\r\nimport ReactECharts from \"echarts-for-react\";\r\nimport dayjs from \"dayjs\";\r\nimport isSameOrAfter from \"dayjs/plugin/isSameOrAfter\";\r\nimport isSameOrBefore from \"dayjs/plugin/isSameOrBefore\";\r\nimport { SidebarContext } from \"@/Context/CustomContext\";\r\nimport { Empty } from \"antd\";\r\n\r\n// Extend dayjs with the plugins\r\ndayjs.extend(isSameOrAfter);\r\ndayjs.extend(isSameOrBefore);\r\n\r\nexport default function MultibarChart({\r\n  data,\r\n  fromDate,\r\n  toDate,\r\n  valueType = \"duration\",\r\n}) {\r\n  const [chartData, setChartData] = useState([]);\r\n  const { sleepEventsType, sleepEventsColor } = useContext(SidebarContext);\r\n\r\n  useEffect(() => {\r\n    setChartData(Array.isArray(data) ? data : []);\r\n  }, [data]);\r\n\r\n  const formatValue = (value, type) => {\r\n    if (type === \"duration\") {\r\n      const hours = Math.floor(value / 60);\r\n      const minutes = value % 60;\r\n      return `${hours}hr ${minutes}m`;\r\n    }\r\n    // For time or number type values, return as is\r\n    return value.toString();\r\n  };\r\n\r\n  const chartOptions = useMemo(() => {\r\n    // Generate all dates between fromDate and toDate\r\n    const getAllDates = (start, end) => {\r\n      const dates = [];\r\n      let currentDate = dayjs(start);\r\n      const endDate = dayjs(end);\r\n\r\n      while (currentDate.isSameOrBefore(endDate)) {\r\n        dates.push(currentDate.format(\"YYYY-MM-DD\"));\r\n        currentDate = currentDate.add(1, \"day\");\r\n      }\r\n      return dates;\r\n    };\r\n\r\n    const allDates = getAllDates(fromDate, toDate);\r\n\r\n    // Create a map of existing data indexed by date\r\n    const dataByDate = (Array.isArray(chartData) ? chartData : []).reduce(\r\n      (acc, item) => {\r\n        if (!item?.date || !item?.data) return acc;\r\n        const dateKey = dayjs(item.date).format(\"YYYY-MM-DD\");\r\n        acc[dateKey] = item.data;\r\n        return acc;\r\n      },\r\n      {}\r\n    );\r\n\r\n    // Get unique status values from the actual data\r\n    const activeStatuses = [\r\n      ...new Set(\r\n        (Array.isArray(chartData) ? chartData : []).flatMap(\r\n          (item) => item?.data?.map((d) => d.status) || []\r\n        )\r\n      ),\r\n    ];\r\n\r\n    // Filter sleepEventsType to only include active events\r\n    const activeEvents = Object.entries(sleepEventsType).filter(([status]) =>\r\n      activeStatuses.includes(status)\r\n    );\r\n\r\n    // Create series only for events that exist in the data\r\n    const series = activeEvents.map(([status, label]) => {\r\n      const seriesData = allDates.map((date) => {\r\n        const dayData = dataByDate[date];\r\n        const eventData = dayData?.find((d) => d.status === status);\r\n        const value = eventData ? Number(eventData.value) : 0;\r\n        return value;\r\n      });\r\n\r\n      return {\r\n        name: label,\r\n        type: \"bar\",\r\n        stack: \"total\",\r\n        data: seriesData,\r\n        itemStyle: { color: sleepEventsColor[label] },\r\n      };\r\n    });\r\n\r\n    return {\r\n      tooltip: {\r\n        trigger: \"axis\",\r\n        axisPointer: { type: \"shadow\" },\r\n        formatter: (params) => {\r\n          let tooltipText = `${params[0].axisValue}<br/>`;\r\n          params.forEach((param) => {\r\n            if (param.value > 0) {\r\n              tooltipText += `${param.marker} ${\r\n                param.seriesName\r\n              }: ${formatValue(param.value, valueType)}<br/>`;\r\n            }\r\n          });\r\n          return tooltipText;\r\n        },\r\n      },\r\n      legend: {\r\n        data: activeEvents.map(([_, label]) => label),\r\n      },\r\n      xAxis: {\r\n        type: \"category\",\r\n        data: allDates,\r\n      },\r\n      yAxis: {\r\n        type: \"value\",\r\n        axisLabel: {\r\n          formatter: (value) => formatValue(value, valueType),\r\n        },\r\n      },\r\n      series,\r\n    };\r\n  }, [\r\n    chartData,\r\n    fromDate,\r\n    toDate,\r\n    sleepEventsType,\r\n    sleepEventsColor,\r\n    valueType,\r\n  ]);\r\n\r\n  if (data?.length === 0 || !toDate || !fromDate) {\r\n    return <Empty description=\"No data available to show\" />;\r\n  }\r\n\r\n  return <ReactECharts option={chartOptions} style={{ height: \"350px\" }} />;\r\n}\r\n"],"names":["e","t","module","this","i","dayjs","isSameOrAfter","isSameOrBefore","MultibarChart","data","fromDate","toDate","valueType","chartData","setChartData","useState","sleepEventsType","sleepEventsColor","useContext","SidebarContext","useEffect","formatValue","value","type","hours","minutes","chartOptions","useMemo","allDates","start","end","dates","currentDate","endDate","dataByDate","acc","item","dateKey","activeStatuses","_a","d","activeEvents","status","series","label","seriesData","date","dayData","eventData","params","tooltipText","param","_","jsx","Empty","ReactECharts"],"mappings":"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","x_google_ignoreList":[0,1]}