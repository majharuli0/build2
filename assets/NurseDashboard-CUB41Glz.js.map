{"version":3,"file":"NurseDashboard-CUB41Glz.js","sources":["../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../src/Pages/Supportnursing/Dashboards/Components/RoomvView/nurseRoomMap.jsx","../../src/Pages/Supportnursing/Dashboards/Components/RoomvView/CurrentRateData.jsx","../../src/Pages/Supportnursing/Dashboards/Components/RoomvView/NursingHomeRoomView.jsx","../../src/Pages/Supportnursing/Dashboards/NurseDashboard.jsx"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, exitBeforeEnter, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = presentChildren === renderedChildren ||\n                presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: isPresent ? undefined : custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","import React, { useCallback, useState, useEffect, useRef } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Room1 from \"@/Components/RoomMap/RoomMap3\";\r\nimport Room2 from \"@/Components/RoomMap/RoomMap4\";\r\nimport \"./style.css\";\r\nimport { Empty } from \"antd\";\r\nimport useWebSocket from \"@/hook/useWebSoket\";\r\nimport { decodePosition } from \"@/utils/helper\";\r\n\r\nexport default function NurseRoomMap({ rooms = [] }) {\r\n  const [roomData, setRoomData] = useState({}); // Store room-specific data\r\n  const timeoutRefs = useRef({}); // Track timeouts for each device\r\n  const heartBreathRateRefs = useRef({}); // Track heart breath activity for each device\r\n  const lastHeartBreathTimestamps = useRef({}); // Track last heartbreath timestamps for each device\r\n  console.log(rooms);\r\n\r\n  const settings = {\r\n    dots: rooms.length >= 2,\r\n    infinite: rooms.length > 2,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    draggable: true,\r\n    arrows: false,\r\n    appendDots: (dots) => (\r\n      <div\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          borderRadius: \"10px\",\r\n          padding: \"2px\",\r\n        }}\r\n      >\r\n        <ul id=\"dots\" style={{ margin: \"0px\" }}>\r\n          {\" \"}\r\n          {dots}{\" \"}\r\n        </ul>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  const handleDecode = useCallback((code, deviceNo) => {\r\n    const data = decodePosition(code);\r\n\r\n    // Modify people data if heartBreathRateActive is true\r\n    if (heartBreathRateRefs.current[deviceNo] && data[0]?.postureIndex === 4) {\r\n      data[0].postureIndex = 6;\r\n      data[0].posture = \"Resident on Bed\";\r\n      data[0].color = \"#252F67\";\r\n    }\r\n\r\n    setRoomData((prev) => ({\r\n      ...prev,\r\n      [deviceNo]: {\r\n        ...prev[deviceNo],\r\n        peopleData: data,\r\n      },\r\n    }));\r\n  }, []);\r\n\r\n  const handleHeartBreathUpdate = useCallback((deviceNo) => {\r\n    // Set heartBreathRateActive to true for the device\r\n    heartBreathRateRefs.current[deviceNo] = true;\r\n    lastHeartBreathTimestamps.current[deviceNo] = Date.now();\r\n\r\n    // Clear any existing timeout for this device\r\n    if (timeoutRefs.current[deviceNo]) {\r\n      clearTimeout(timeoutRefs.current[deviceNo]);\r\n    }\r\n\r\n    // Set a timeout to reset heart breath activity after 5 seconds\r\n    timeoutRefs.current[deviceNo] = setTimeout(() => {\r\n      heartBreathRateRefs.current[deviceNo] = false;\r\n\r\n      // Reset the posture and update the data for this device\r\n      setRoomData((prev) => ({\r\n        ...prev,\r\n        [deviceNo]: {\r\n          ...prev[deviceNo],\r\n          peopleData: prev[deviceNo]?.peopleData?.map((person) => ({\r\n            ...person,\r\n            postureIndex: person.postureIndex === 6 ? 4 : person.postureIndex,\r\n            posture: person.postureIndex === 6 ? \"Standing\" : person.posture,\r\n            color: person.postureIndex === 6 ? \"#A7E2FE\" : person.color,\r\n          })),\r\n        },\r\n      }));\r\n    }, 5000);\r\n\r\n    // Immediately set heartBreathRateActive to true in roomData\r\n    setRoomData((prev) => ({\r\n      ...prev,\r\n      [deviceNo]: {\r\n        ...prev[deviceNo],\r\n        heartBreathRateActive: true,\r\n      },\r\n    }));\r\n  }, []);\r\n\r\n  // useWebSocket({\r\n  //   onMessage: (data) => {\r\n  //     const payload = JSON.parse(data?.message)?.payload;\r\n\r\n  //     if (payload?.position) {\r\n  //       handleDecode(payload.position, payload.deviceCode);\r\n  //     }\r\n\r\n  //     if (payload?.heartbreath) {\r\n  //       handleHeartBreathUpdate(payload.deviceCode);\r\n  //     }\r\n  //   },\r\n  //   dependencies: [handleDecode, handleHeartBreathUpdate],\r\n  // });\r\n\r\n  // useEffect(() => {\r\n  //   const interval = setInterval(() => {\r\n  //     const now = Date.now();\r\n\r\n  //     // Check each device's last heart-breath timestamp\r\n  //     Object.keys(lastHeartBreathTimestamps.current).forEach((deviceNo) => {\r\n  //       if (\r\n  //         lastHeartBreathTimestamps.current[deviceNo] &&\r\n  //         now - lastHeartBreathTimestamps.current[deviceNo] > 5000\r\n  //       ) {\r\n  //         heartBreathRateRefs.current[deviceNo] = false;\r\n\r\n  //         // Reset the posture and update the data for this device\r\n  //         setRoomData((prev) => ({\r\n  //           ...prev,\r\n  //           [deviceNo]: {\r\n  //             ...prev[deviceNo],\r\n  //             heartBreathRateActive: false,\r\n  //             peopleData: prev[deviceNo]?.peopleData?.map((person) => ({\r\n  //               ...person,\r\n  //               postureIndex:\r\n  //                 person.postureIndex === 6 ? 4 : person.postureIndex,\r\n  //               posture:\r\n  //                 person.postureIndex === 6 ? \"Standing\" : person.posture,\r\n  //               color: person.postureIndex === 6 ? \"#A7E2FE\" : person.color,\r\n  //             })),\r\n  //           },\r\n  //         }));\r\n  //       }\r\n  //     });\r\n  //   }, 1000);\r\n\r\n  //   return () => {\r\n  //     clearInterval(interval);\r\n  //     Object.values(timeoutRefs.current).forEach((timeout) => {\r\n  //       clearTimeout(timeout);\r\n  //     });\r\n  //   };\r\n  // }, []);\r\n\r\n  return (\r\n    <>\r\n      {rooms.length > 0 && (\r\n        <div\r\n          id=\"rooms\"\r\n          className=\"w-full mb-2 transition-all duration-300 h-full\"\r\n        >\r\n          <Slider\r\n            {...settings}\r\n            className=\"w-full transition-all duration-300 h-full\"\r\n          >\r\n            {rooms.map((room, index) => (\r\n              <div\r\n                key={index}\r\n                className=\"px-2 overflow-hidden transition-all duration-300 w-full h-[355px] \"\r\n              >\r\n                <div\r\n                  id=\"roomNmaeAndStatus\"\r\n                  className=\"flex items-center gap-2 w-fit bg-white pr-4 py-1.5 border border-gray-200 p-2 rounded-full absolute top-2 left-2\"\r\n                >\r\n                  <div\r\n                    id=\"dot\"\r\n                    className=\"size-3 rounded-full\"\r\n                    style={{\r\n                      backgroundColor:\r\n                        room?.is_device_bind === true ? \"green\" : \"red\",\r\n                    }}\r\n                  ></div>\r\n                  <p>{room?.name}</p>\r\n                </div>\r\n                {room?.is_device_bind && room?.mount_type === 2 && (\r\n                  <Room2 roomInfo={room} />\r\n                )}\r\n                {room?.is_device_bind && room?.mount_type === 1 && (\r\n                  <Room1 roomInfo={room} />\r\n                )}\r\n                {!room?.is_device_bind && (\r\n                  <span className=\"w-full h-full flex items-center justify-center\">\r\n                    <p>No Device Data Available</p>\r\n                  </span>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </Slider>\r\n        </div>\r\n      )}\r\n      {rooms.length === 0 && <Empty description=\"No Room Found \" />}\r\n    </>\r\n  );\r\n}\r\n","import { WebSocketContext } from \"@/Context/WebSoketHook\";\r\nimport { decodeHeartBreath } from \"@/utils/helper\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { CustomContext } from \"@/Context/UseCustomContext\";\r\n\r\nexport default function CurrentRateData({ style, rooms }) {\r\n  const deviceIDs =\r\n    rooms?.rooms?.length > 0\r\n      ? rooms.rooms\r\n          .filter((item) => item.device_no)\r\n          .map((item) => item.device_no)\r\n          .join(\",\")\r\n      : \"\";\r\n  // const deviceCode = elderlyDetails?.deviceId;\r\n  const { deviceData } = useContext(WebSocketContext);\r\n  const deviceCodes = deviceIDs\r\n    ? deviceIDs.split(\",\").map((code) => code.trim())\r\n    : [];\r\n  const [data, setData] = useState({\r\n    time: [],\r\n    heartRate: [],\r\n    breathRate: [],\r\n  });\r\n\r\n  const [liveRateData, setLiveRateData] = useState(null);\r\n  const [lastUpdate, setLastUpdate] = useState(Date.now());\r\n\r\n  // Decode action handler\r\n  const handleDecode = (base64Input) => {\r\n    const data = decodeHeartBreath(base64Input);\r\n    setLiveRateData(data);\r\n    setLastUpdate(Date.now());\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const now = Date.now();\r\n      const isStale = now - lastUpdate > 5000;\r\n\r\n      if (isStale) {\r\n        setLiveRateData(null);\r\n        setData({ time: [], heartRate: [], breathRate: [] });\r\n      } else if (liveRateData) {\r\n        const newTime = new Date().toLocaleTimeString();\r\n\r\n        // Update the data state with liveRateData values\r\n        setData((prevData) => ({\r\n          time: [...prevData.time, newTime].slice(-30),\r\n          heartRate: [...prevData.heartRate, liveRateData.heartRateValue].slice(\r\n            -30\r\n          ),\r\n          breathRate: [\r\n            ...prevData.breathRate,\r\n            liveRateData.breathingValue,\r\n          ].slice(-30),\r\n        }));\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [liveRateData, lastUpdate]);\r\n\r\n  useEffect(() => {\r\n    if (!deviceCodes.length) {\r\n      setLiveRateData(null);\r\n      return;\r\n    }\r\n\r\n    for (const code of [deviceCodes]) {\r\n      if (!deviceData[code]) continue;\r\n\r\n      const { heartBreath } = deviceData[code];\r\n      if (heartBreath) {\r\n        console.log(code);\r\n\r\n        handleDecode(heartBreath);\r\n        return;\r\n      }\r\n    }\r\n\r\n    setLiveRateData(null);\r\n  }, [deviceData]);\r\n  return (\r\n    <div id=\"liveHeartAndBreathRate\" className=\"flex w-fit py-4 gap-8\">\r\n      <div\r\n        id=\"heartRate\"\r\n        className=\"flex flex-col items-start justify-start w-full\"\r\n      >\r\n        <h2\r\n          className={`text-[27px] font-bold leading-none ${style.textColor}  text-nowrap`}\r\n        >\r\n          {liveRateData?.heartRateValue ?? \"--\"}{\" \"}\r\n          <span className=\"text-sm\">/BPM</span>\r\n        </h2>\r\n        <h2\r\n          className={`text-sm font-medium ${style.textColor} opacity-80 text-nowrap`}\r\n        >\r\n          Heart Activity\r\n        </h2>\r\n      </div>\r\n      <div\r\n        id=\"breathRate\"\r\n        className=\"flex flex-col items-start justify-start w-full\"\r\n      >\r\n        <h2\r\n          className={`text-[27px] font-bold leading-none ${style.textColor}  text-nowrap`}\r\n        >\r\n          {liveRateData?.breathingValue ?? \"--\"}{\" \"}\r\n          <span className=\"text-sm\">/BPM</span>\r\n        </h2>\r\n        <h2\r\n          className={`text-sm font-medium ${style.textColor} opacity-80  text-nowrap`}\r\n        >\r\n          Breathing Pattern\r\n        </h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { Dropdown, ConfigProvider, Spin, Empty } from \"antd\";\r\nimport { IoClose } from \"react-icons/io5\";\r\nimport { LuPhoneCall } from \"react-icons/lu\";\r\nimport \"./style.css\";\r\nimport { getAlertList } from \"@/api/elderlySupport\";\r\nimport {\r\n  decodeHeartBreath,\r\n  transformDateAndTime,\r\n  getAlertInfoViaEvent,\r\n} from \"@/utils/helper\";\r\nimport dayjs from \"dayjs\";\r\nimport { getElderliesPriority } from \"@/api/elderly\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport NurseRoomMap from \"./nurseRoomMap\";\r\nimport AlertCloseModal from \"@/Components/ActiveAlerts/AlertCloseModal\";\r\nimport { subscribeToMqtt, unsubscribeFromMqtt } from \"@/api/deviceReports\";\r\nimport { WebSocketProvider } from \"@/Context/WebSoketHook\";\r\nimport CurrentRateData from \"./CurrentRateData\";\r\n\r\nexport default function NursingHomeRoomView({\r\n  refreshAlertList,\r\n  roomList = [],\r\n  loadingsData,\r\n}) {\r\n  const [selectedRoom, setSelectedRoom] = useState(null);\r\n  const navigate = useNavigate(); // Initialize the navigate function\r\n  const [openAlertCloseModal, setOpenAlertCloseModal] = useState(false);\r\n  const [selectedAlert, setSelectedAlert] = useState(null);\r\n\r\n  const [style, setStyle] = useState({\r\n    textColor: \"text-white\",\r\n    bodyColor: \"text-white\",\r\n    txtc: \"#fff\",\r\n    bgc: \"#fff\",\r\n  });\r\n  const [data, setData] = useState({\r\n    time: [],\r\n    heartRate: [],\r\n    breathRate: [],\r\n  });\r\n\r\n  const [liveRateData, setLiveRateData] = useState(null);\r\n  const [lastUpdate, setLastUpdate] = useState(Date.now());\r\n  const [alertList, setAlertList] = useState([]);\r\n  const [loadingAlert, setLoadingAlert] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const listRef = useRef(null);\r\n\r\n  const getAlertListData = useCallback(() => {\r\n    if (loadingAlert) return;\r\n    setLoadingAlert(true);\r\n    getAlertList({\r\n      to_date: \"2024-11-30\",\r\n      from_date: dayjs().format(\"YYYY-MM-DD\"),\r\n      is_resolved: false,\r\n      elderly_id: selectedRoom?._id,\r\n      limit: 20,\r\n      page,\r\n    })\r\n      .then((res) => {\r\n        setAlertList((prev) => [...prev, ...res.data]);\r\n        setLoadingAlert(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoadingAlert(false);\r\n        console.error(err);\r\n      });\r\n  }, [selectedRoom?._id, page]);\r\n\r\n  useEffect(() => {\r\n    if (selectedRoom?._id) {\r\n      setAlertList([]);\r\n      setPage(1);\r\n    }\r\n  }, [selectedRoom?._id]);\r\n\r\n  useEffect(() => {\r\n    if (selectedRoom?._id) {\r\n      getAlertListData();\r\n    }\r\n  }, [getAlertListData]);\r\n\r\n  const handleScroll = () => {\r\n    const { scrollTop, scrollHeight, clientHeight } = listRef.current;\r\n\r\n    // Check if user has scrolled to the bottom\r\n    if (scrollTop + clientHeight >= scrollHeight - 10 && !loadingAlert) {\r\n      setPage((prevPage) => prevPage + 1);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (selectedRoom) {\r\n      setStyle({\r\n        textColor:\r\n          getAlertInfoViaEvent(selectedRoom)?.label !==\r\n          (\"Critical\" || \"Warning\" || \"Info\")\r\n            ? \"text-primary\"\r\n            : \"text-white\",\r\n        bodyColor:\r\n          getAlertInfoViaEvent(selectedRoom)?.label !==\r\n          (\"Critical\" || \"Warning\" || \"Info\")\r\n            ? \"text-primary\"\r\n            : \"text-white\",\r\n        txtc:\r\n          getAlertInfoViaEvent(selectedRoom)?.label !==\r\n          (\"Critical\" || \"Warning\" || \"Info\")\r\n            ? \"#fff\"\r\n            : \"#000\",\r\n        bgc:\r\n          getAlertInfoViaEvent(selectedRoom)?.label !==\r\n          (\"Critical\" || \"Warning\" || \"Info\")\r\n            ? \"#fff\"\r\n            : \"#000\",\r\n      });\r\n    }\r\n  }, [selectedRoom]);\r\n  const getInitials = (name = \"\") => {\r\n    const splitName = name?.split(\" \");\r\n    return `${splitName[0]?.[0]?.toUpperCase() || \"\"}${\r\n      splitName[1]?.[0]?.toUpperCase() || \"\"\r\n    }`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const deviceCode =\r\n      selectedRoom?.rooms?.length > 0\r\n        ? selectedRoom.rooms\r\n            .filter((item) => item.device_no) // Filter out devices with no device number\r\n            .map((item) => item.device_no) // Get the device numbers\r\n            .join(\", \") // Join the device numbers as a comma-separated string\r\n        : \"\";\r\n\r\n    if (deviceCode && selectedRoom) {\r\n      // Split the deviceCode string into an array of device numbers\r\n      const deviceCodesArray = deviceCode.split(\", \");\r\n\r\n      // Loop over each device number and subscribe to MQTT individually\r\n      deviceCodesArray.forEach((deviceNo) => {\r\n        subscribeToMqtt({\r\n          uid: deviceNo,\r\n          messageType: [\"1\", \"2\", \"3\", \"4\"],\r\n          topics: {\r\n            pub: [deviceNo],\r\n          },\r\n        })\r\n          .then((res) => {\r\n            console.log(`Subscription for Device No ${deviceNo}:`, res);\r\n          })\r\n          .catch((err) => {\r\n            console.log(`Error for Device No ${deviceNo}:`, err);\r\n          });\r\n      });\r\n    }\r\n  }, [selectedRoom]);\r\n\r\n  const handleViewClick = (row) => {\r\n    window.scrollTo(0, 0);\r\n    navigate(`/supporter/elderlies/elderly-profile/${row?._id}`); // Navigate to the profile page with the ID\r\n  };\r\n\r\n  const onCloseModal = () => {\r\n    const deviceCode =\r\n      selectedRoom?.rooms?.length > 0\r\n        ? selectedRoom.rooms\r\n            .filter((item) => item.device_no) // Filter out rooms with no device number\r\n            .map((item) => item.device_no) // Map to get only device numbers\r\n            .join(\", \") // Join the device numbers into a comma-separated string\r\n        : \"\";\r\n\r\n    if (deviceCode && selectedRoom) {\r\n      // Split the deviceCode string into an array of device numbers\r\n      const deviceCodesArray = deviceCode.split(\", \");\r\n\r\n      // Loop over each device number and unsubscribe from MQTT individually\r\n      deviceCodesArray.forEach((deviceNo) => {\r\n        unsubscribeFromMqtt({\r\n          uid: deviceNo,\r\n          messageType: [\"1\", \"2\", \"3\", \"4\"],\r\n        })\r\n          .then((res) => {\r\n            // You can handle the response here if needed\r\n          })\r\n          .catch((err) => {\r\n            console.log(`Error unsubscribing for Device No ${deviceNo}:`, err);\r\n          });\r\n      });\r\n    }\r\n\r\n    // Reset the selected room\r\n    setSelectedRoom(null);\r\n  };\r\n\r\n  if (loadingsData) {\r\n    return (\r\n      <>\r\n        {loadingsData && (\r\n          <span className=\"w-full h-full flex items-center justify-center\">\r\n            <Spin />\r\n          </span>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n  if (!roomList.length) {\r\n    return (\r\n      <div className=\"h-full flex items-center w-full justify-center\">\r\n        <Empty description=\"No room available to show\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div id=\"NurseRoomView\" className=\"w-full h-full relative\">\r\n        <div className=\"w-full h-full grid grid-cols-10  overflow-auto\">\r\n          {roomList?.map((item, ind) => (\r\n            <motion.div\r\n              key={ind}\r\n              layoutId={item?._id}\r\n              onClick={() => setSelectedRoom(item)} // Store the entire room object\r\n              className={`text-white text-base ${\r\n                getAlertInfoViaEvent(item?.alarms_data[0])?.label === \"Critical\"\r\n                  ? \"bg-[#FF1D1D] animate-scaleUpDown1\"\r\n                  : getAlertInfoViaEvent(item?.alarms_data[0])?.label ===\r\n                    \"Warning\"\r\n                  ? \"bg-[#FF9831] animate-scaleUpDown2\"\r\n                  : getAlertInfoViaEvent(item?.alarms_data[0])?.label === \"Info\"\r\n                  ? \"bg-[#6471FF]\"\r\n                  : \"bg-[#F4F4F6] !text-primary\"\r\n              }  rounded-lg cursor-pointer flex justify-center m-2 items-center font-semibold min-w-[55px] min-h-[65px] h-fit `}\r\n            >\r\n              <motion.h5>{item?.room_no || \"--\"}</motion.h5>\r\n            </motion.div>\r\n          ))}\r\n        </div>\r\n        <WebSocketProvider\r\n          deviceId={\r\n            selectedRoom?.rooms?.length > 0\r\n              ? selectedRoom?.rooms\r\n                  .filter((item) => item.device_no)\r\n                  .map((item) => item.device_no)\r\n                  .join(\",\")\r\n              : \"\"\r\n          }\r\n        >\r\n          <AnimatePresence>\r\n            {selectedRoom && (\r\n              <motion.div\r\n                className=\"absolute inset-0 flex justify-center items-center\"\r\n                initial={{ opacity: 0 }}\r\n                animate={{ opacity: 1 }}\r\n                exit={{ opacity: 0 }}\r\n              >\r\n                <motion.div\r\n                  className=\"bg-black bg-opacity-50 w-full h-full flex justify-center items-center\"\r\n                  onClick={() => onCloseModal()}\r\n                >\r\n                  <motion.div\r\n                    className={`${\r\n                      getAlertInfoViaEvent(selectedRoom)?.label === \"Critical\"\r\n                        ? \"bg-[#FF1D1D]\"\r\n                        : getAlertInfoViaEvent(selectedRoom)?.label ===\r\n                          \"Warning\"\r\n                        ? \"bg-[#FF9831]\"\r\n                        : getAlertInfoViaEvent(selectedRoom)?.label === \"Info\"\r\n                        ? \"bg-[#6471FF]\"\r\n                        : \"bg-[#F4F4F6]\"\r\n                    } p-4 rounded-xl w-[95%] h-[90%]`}\r\n                    // style={{ margin: \"50px\" }}\r\n                    onClick={(e) => e.stopPropagation()}\r\n                    layoutId={selectedRoom?._id}\r\n                  >\r\n                    <motion.div className=\"flex justify-between items-start\">\r\n                      {\" \"}\r\n                      {/* <motion.div\r\n                      className={`rounded-xl flex flex-col items-start justify-start w-[35%]`}\r\n                    >\r\n                      <motion.h2\r\n                        className={`leading-none font-semibold ${style.bodyColor} opacity-70`}\r\n                      >\r\n                        Room Number\r\n                      </motion.h2>\r\n                      <motion.h5\r\n                        className={`text-4xl font-bold leading-none ${style.textColor}`}\r\n                      >\r\n                        {selectedRoom?.room_no || \"--\"}\r\n                      </motion.h5>\r\n                    </motion.div> */}\r\n                      <div\r\n                        className=\"w-[65%] flex items-start cursor-pointer bg-white hover:bg-white/75 rounded-xl transition-all duration-300 ease-in\"\r\n                        onClick={() => handleViewClick(selectedRoom)}\r\n                      >\r\n                        <div\r\n                          id=\"elderly-profile\"\r\n                          className=\"flex items-center w-full  justify-between px-4 \"\r\n                        >\r\n                          <div className=\"flex items-center gap-2\">\r\n                            {/* <div\r\n                            id=\"image\"\r\n                            className=\"relative rounded-full min-h-[60px]  h-[60px] min-w-[60px] w-[60px] bg-[#fff] flex items-center justify-center font-semibold text-xl\"\r\n                          > */}\r\n                            {/* <div className=\"flex flex-col items-center gap-2\">\r\n                            {selectedRoom.alertStatus !== \"normal\" && (\r\n                              <span\r\n                                className={`animate-ping absolute inline-flex h-full w-full rounded-full ${\r\n                                  selectedRoom.alertStatus === \"critical\"\r\n                                    ? \"bg-red-50\"\r\n                                    : selectedRoom.alertStatus === \"warning\"\r\n                                    ? \"bg-orange-50\"\r\n                                    : selectedRoom.alertStatus === \"normal\"\r\n                                    ? \"bg-none\"\r\n                                    : \"bg-blue-50\"\r\n                                } opacity-75`}\r\n                              ></span>\r\n                            )}\r\n                            <span\r\n                              className={`relative rounded-full h-[80px] w-[80px] ${\r\n                                selectedRoom.alertStatus === \"critical\"\r\n                                  ? \"bg-red-500 border-red-500\"\r\n                                  : selectedRoom.alertStatus === \"warning\"\r\n                                  ? \"bg-orange-500 border-orange-500\"\r\n                                  : selectedRoom.alertStatus === \"normal\"\r\n                                  ? \"bg-green-500 border-green-500 !border-0\"\r\n                                  : \"bg-blue-500 border-blue-500\"\r\n                              } flex items-center justify-center overflow-hidden border-0`}\r\n                            >\r\n                              <img\r\n                                className=\"w-full h-full object-cover overflow-hidden\"\r\n                                src=\"https://www.shutterstock.com/image-photo/elderly-hispanic-man-grey-hair-260nw-2511514837.jpg\"\r\n                                alt=\"\"\r\n                              />\r\n                            </span>\r\n                          </div> */}\r\n                            {/* <img\r\n                            className=\"w-full h-full object-cover overflow-hidden\"\r\n                            src=\"https://www.shutterstock.com/image-photo/elderly-hispanic-man-grey-hair-260nw-2511514837.jpg\"\r\n                            alt=\"\"\r\n                          /> */}\r\n                            {/* {getInitials(selectedRoom?.name)} */}\r\n                            {/* </div> */}\r\n\r\n                            <div className=\"flex flex-col items-start w-full gap-1\">\r\n                              <h2\r\n                                className={`text-xl font-bold ${style.textColor} text-center text-nowrap m-0  leading-none`}\r\n                              >\r\n                                {selectedRoom?.name}\r\n                              </h2>\r\n                              <h2\r\n                                className={`text-base font-medium ${style.textColor} opacity-80 text-center text-nowrap m-0 leading-none`}\r\n                              >\r\n                                Age: <span>{selectedRoom?.age}</span>\r\n                              </h2>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <CurrentRateData style={style} rooms={selectedRoom} />\r\n                        </div>\r\n                      </div>\r\n                      <motion.button\r\n                        className=\"p-2 bg-black/5  hover:bg-black/10 rounded-full\"\r\n                        onClick={() => onCloseModal()}\r\n                      >\r\n                        <IoClose size={24} className={style.textColor} />\r\n                      </motion.button>\r\n                    </motion.div>\r\n                    <motion.div className=\"flex h-[80%] items-center mt-2\">\r\n                      <motion.div className=\"h-full  w-[65%] bg-white rounded-xl flex flex-col items-center justify-center\">\r\n                        <NurseRoomMap\r\n                          rooms={selectedRoom?.rooms?.filter(\r\n                            (room) => room.device_no\r\n                          )}\r\n                        />\r\n                      </motion.div>\r\n                      <motion.div\r\n                        className=\"h-full w-[35%] rounded-xl p-2 border-1 overflow-y-auto overflow-x-hidden gap-2 flex flex-col pt-0\"\r\n                        ref={listRef}\r\n                        onScroll={handleScroll}\r\n                      >\r\n                        {alertList?.map((alarm, indx) => (\r\n                          <div\r\n                            className=\"flex items-center gap-2 w-[350px] bg-white p-2 rounded-lg cursor-pointer \"\r\n                            key={indx}\r\n                            onClick={() => {\r\n                              if (\r\n                                getAlertInfoViaEvent(alarm)?.label !== \"Info\"\r\n                              ) {\r\n                                setSelectedAlert(alarm);\r\n                                setOpenAlertCloseModal(true);\r\n                              }\r\n                            }}\r\n                          >\r\n                            <div id=\"Icon\" className=\"w-[38px] h-[38px]\">\r\n                              {getAlertInfoViaEvent(alarm)?.icon ? (\r\n                                <img\r\n                                  src={getAlertInfoViaEvent(alarm).icon}\r\n                                  alt=\"Alert Icon\"\r\n                                  width={38}\r\n                                  height={38}\r\n                                  className=\"min-w-[38px]\"\r\n                                />\r\n                              ) : null}\r\n                            </div>\r\n                            <div className=\"flex items-center justify-between w-full\">\r\n                              <div className=\"w-fit\">\r\n                                <h4 className=\"text-sm font-medium text-text-primary\">\r\n                                  {getAlertInfoViaEvent(alarm)?.title}\r\n                                </h4>\r\n                                <p className=\"text-xs text-text-secondary\">\r\n                                  {transformDateAndTime(alarm?.created_at)}\r\n                                </p>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                        {alertList.length === 0 && !loadingAlert && (\r\n                          <div className=\"h-full flex items-center w-full justify-center\">\r\n                            <Empty description=\"No alerts available to show\" />\r\n                          </div>\r\n                        )}\r\n                        {loadingAlert && (\r\n                          <div className=\"h-full w-full flex flex-col justify-center items-center\">\r\n                            <Spin />\r\n                          </div>\r\n                        )}\r\n                      </motion.div>\r\n                    </motion.div>\r\n                  </motion.div>\r\n                </motion.div>\r\n              </motion.div>\r\n            )}\r\n          </AnimatePresence>\r\n        </WebSocketProvider>\r\n      </div>\r\n      <AlertCloseModal\r\n        openAlertCloseModal={openAlertCloseModal}\r\n        setOpenAlertCloseModal={setOpenAlertCloseModal}\r\n        selectedAlert={selectedAlert}\r\n        getAlertListDatas={() => {\r\n          getAlertListData();\r\n          refreshAlertList();\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nimport { Segmented, ConfigProvider, Select } from \"antd\";\r\nimport { HomeOutlined, AimOutlined } from \"@ant-design/icons\";\r\nimport NursingHomeRoomView from \"./Components/RoomvView/NursingHomeRoomView\";\r\nimport MultiLineChart from \"./Components/3xLineChart/MultiLineChart\";\r\nimport WeeklyPicker from \"@/Components/WeeklyPicker/WeeklyPicker\";\r\nimport WeeklyMonthlyPicker from \"@/Components/WeeklyMonthlyPicker/WeeklyMonthlyPicker\";\r\nimport CustomButton from \"@/Shared/button/CustomButton\";\r\nimport { DatePicker, Input } from \"antd\";\r\nconst { RangePicker } = DatePicker;\r\nimport { SidebarContext } from \"@/Context/CustomUsertable\";\r\nimport CustomTable from \"@/Shared/Table/CustomTable\";\r\nimport { LuPlus } from \"react-icons/lu\";\r\nimport { useAlertTableColumns } from \"../Utiles/utiles\";\r\nimport { LuNavigation } from \"react-icons/lu\";\r\nimport {\r\n  activeAlertsTableData,\r\n  recentlyClosedAlertsTableData,\r\n  eventsTableData,\r\n} from \"./mock\";\r\nimport ActiveAlertsCards from \"@/Components/ActiveAlerts/ActiveAlertsCards\";\r\nimport CreateAndEditModal from \"@/Components/CreateAndEditModal/CreateAndEditModal\";\r\nimport { getAlertList, getEventList } from \"@/api/elderlySupport\";\r\nimport dayjs from \"dayjs\";\r\nimport AlertsOverview from \"./Components/AlertsOverview/alertsOverview\";\r\nimport { getAlertsGroup } from \"@/utils/helper\";\r\nimport { getElderlies, getElderliesPriority } from \"@/api/elderly\";\r\nimport { updateUserDetails } from \"@/api/Users\";\r\nimport { requestPermission } from \"@/firebase\";\r\nimport ls from \"store2\";\r\n\r\nexport default function NurseDashboard() {\r\n  const [viewType, setViewType] = useState(\"Map View\");\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [expandedRowKeys, setExpandedRowKeys] = useState([]);\r\n  const activeAlertTableColumns = useAlertTableColumns(\"activeAlert\");\r\n  const recentlyClosedAlertTableColumns = useAlertTableColumns(\r\n    \"recentlyClosedAlert\"\r\n  );\r\n  const eventsTableColumns = useAlertTableColumns(\"events\");\r\n  function handleDatePicker(dateString) {\r\n    console.log(dateString);\r\n  }\r\n  const onExpand = (expanded, record) => {\r\n    if (expanded) {\r\n      setExpandedRowKeys([record._id]);\r\n    } else {\r\n      setExpandedRowKeys([]);\r\n    }\r\n  };\r\n  const [user, SetUser] = useState(ls.get(\"user\"));\r\n\r\n  const [roomList, setRoomList] = useState([]);\r\n  const [loadingsData, setLoadingData] = useState(true);\r\n  const [eventList, setEventList] = useState([]);\r\n  const [eventPage, setEventPage] = useState([]);\r\n  const [page, SetPage] = useState(1);\r\n  const [page2, setPage2] = useState(1);\r\n  const [alertList, setAlertList] = useState([]);\r\n  const [recentlyClosedAlert, setRecentlyClosedAlert] = useState([]);\r\n  const [alertQuery, setAcitveAlertQuery] = useState({});\r\n  const [historyAlertQuery, setHistoryAlertQuery] = useState({});\r\n  const [historyAlartLoading, setHistoryAlartLoading] = useState(true);\r\n  const [activeAlartLoading, setActiveAlartLoading] = useState(true);\r\n  const [searchResult, setSearchResult] = useState();\r\n  const [activeAlertTotal, setActiveAlertTotal] = useState();\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const getAlertListData = useCallback(() => {\r\n    setActiveAlartLoading(true);\r\n    getAlertList({\r\n      to_date: \"2024-11-30\",\r\n      from_date: dayjs().format(\"YYYY-MM-DD\"),\r\n      is_resolved: false,\r\n      ...page,\r\n      ...getAlertsGroup(\"Critical\"),\r\n      // ...alertQuery,\r\n    })\r\n      .then((res) => {\r\n        setAlertList(res?.data);\r\n        setActiveAlertTotal(res?.total);\r\n        setActiveAlartLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setActiveAlartLoading(false);\r\n      });\r\n  }, [page]);\r\n  // }, [page, alertQuery]);\r\n\r\n  useEffect(() => {\r\n    getAlertListData();\r\n  }, [getAlertListData]);\r\n\r\n  const getRecentlyClosedAlerts = useCallback(() => {\r\n    setHistoryAlartLoading(true);\r\n    getAlertList({\r\n      to_date: \"2024-11-30\",\r\n      from_date: dayjs().format(\"YYYY-MM-DD\"),\r\n      is_resolved: true,\r\n      page: page2,\r\n      ...getAlertsGroup(\"Critical\"),\r\n      // ...historyAlertQuery,\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n\r\n        setRecentlyClosedAlert(res.data);\r\n        setHistoryAlartLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setHistoryAlartLoading(false);\r\n      });\r\n  }, [page2]);\r\n  // }, [page2, historyAlertQuery]);\r\n\r\n  useEffect(() => {\r\n    getRecentlyClosedAlerts();\r\n  }, [getRecentlyClosedAlerts]);\r\n  const getAllEventList = useCallback(() => {\r\n    getEventList({\r\n      to_date: \"2024-11-30\",\r\n      from_date: dayjs().format(\"YYYY-MM-DD\"),\r\n      page: eventPage,\r\n    })\r\n      .then((res) => {\r\n        if (res.data.length > 0) {\r\n          setEventList(res.data);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [eventPage]);\r\n  useEffect(() => {\r\n    getAllEventList();\r\n  }, [getAllEventList]);\r\n\r\n  const getRoomListData = useCallback(() => {\r\n    setLoadingData(true);\r\n    getElderliesPriority()\r\n      .then((res) => {\r\n        setRoomList(res.data);\r\n        setLoadingData(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoadingData(false);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getRoomListData();\r\n  }, [getRoomListData]);\r\n  function refreshAlertList() {\r\n    getAlertListData();\r\n    getRecentlyClosedAlerts();\r\n    getRoomListData();\r\n  }\r\n  function onAlertActiveSegmantChnage(value) {\r\n    setAcitveAlertQuery(getAlertsGroup(value));\r\n  }\r\n  function onAlertHistorySegmantChnage(value) {\r\n    setHistoryAlertQuery(getAlertsGroup(value));\r\n  }\r\n\r\n  const getElderlyBySearch = useCallback(() => {\r\n    if (searchQuery.trim() === \"\") {\r\n      setSearchResult([]); // Clear results if the search query is empty\r\n      return;\r\n    }\r\n\r\n    getElderlies({\r\n      search: searchQuery,\r\n    })\r\n      .then((res) => {\r\n        setSearchResult(res?.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [searchQuery]);\r\n  useEffect(() => {\r\n    getElderlyBySearch();\r\n  }, [getElderlyBySearch]);\r\n  const highlightText = (text, query) => {\r\n    if (!query) return text;\r\n    const regex = new RegExp(`(${query})`, \"gi\");\r\n    return text.replace(\r\n      regex,\r\n      `<mark style=\"background-color: #80CAA7; color: white;\">$1</mark>`\r\n    );\r\n  };\r\n  // const updateUserDetailsWithFCMToken = (id, token) => {\r\n  //   if (!token) return;\r\n  //   console.log(token);\r\n  //   updateUserDetails(id, { fcm_token_web: token })\r\n  //     .then((res) => {\r\n  //       console.log(\"Token Updated\");\r\n  //     })\r\n  //     .catch((err) => console.log(err));\r\n  // };\r\n  // useEffect(() => {\r\n  //   console.log(user);\r\n  //   requestPermission().then((token) => {\r\n  //     if (\r\n  //       (user.role === \"nurse\" ||\r\n  //         user.role === \"support_agent\" ||\r\n  //         user.role === \"end_user\") &&\r\n  //       token\r\n  //     ) {\r\n  //       console.log(token);\r\n\r\n  //       updateUserDetailsWithFCMToken(user?._id, token);\r\n  //     }\r\n  //   });\r\n  // }, [user]);\r\n  return (\r\n    <>\r\n      <div className=\"flex gap-4 flex-col pt-8 pb-8\">\r\n        <div className=\"flex item-center justify-between w-full\">\r\n          <ConfigProvider\r\n            theme={{\r\n              token: {\r\n                fontFamily: \"Baloo2\",\r\n                colorPrimary: \"#8086AC\",\r\n                colorLinkActive: \"#8086AC\",\r\n                colorLinkHover: \"#8086AC\",\r\n                colorLink: \"#8086AC\",\r\n              },\r\n            }}\r\n          >\r\n            <div className=\"w-[350px] relative\">\r\n              <Input\r\n                className=\"rounded-[10px]  min-w-[350px] w-full \"\r\n                size=\"large\"\r\n                placeholder=\"Search Anything\"\r\n                style={{ height: \"44px\" }}\r\n                onChange={(e) => setSearchQuery(e.target.value)}\r\n                onFocus={() => setIsFocused(true)}\r\n                // onBlur={() => setIsFocused(false)}\r\n              />\r\n              {isFocused && searchQuery.trim() !== \"\" && (\r\n                <div\r\n                  id=\"searchResult\"\r\n                  className=\"mt-3 max-h-[600px] overflow-auto rounded-lg shadow-lg bg-white border border-gray-300 absolute top-10 left-0 z-[1000] w-full\"\r\n                >\r\n                  <ul>\r\n                    {searchResult?.map((result) => (\r\n                      <li\r\n                        key={result._id}\r\n                        className=\"p-4 hover:bg-gray-100 border-b border-gray-200 cursor-pointer\"\r\n                        onClick={() => {\r\n                          navigate(\r\n                            `/supporter/elderlies/elderly-profile/${result?._id}`\r\n                          );\r\n                        }}\r\n                      >\r\n                        <div className=\"font-semibold text-lg text-gray-800\">\r\n                          <span\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: highlightText(result.name, searchQuery),\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-500\">\r\n                          <strong>Age:</strong>{\" \"}\r\n                          <span\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: highlightText(\r\n                                result.age.toString(),\r\n                                searchQuery\r\n                              ),\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-500\">\r\n                          <strong>Address:</strong>{\" \"}\r\n                          <span\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: highlightText(\r\n                                result.address || \"N/A\",\r\n                                searchQuery\r\n                              ),\r\n                            }}\r\n                          />\r\n                        </div>\r\n\r\n                        <div className=\"text-sm text-gray-500\">\r\n                          <strong>Sensitivity Factors:</strong>{\" \"}\r\n                          <span\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: highlightText(\r\n                                result.diseases.join(\", \"),\r\n                                searchQuery\r\n                              ),\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-500\">\r\n                          <strong>Comments:</strong>{\" \"}\r\n                          <span\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: highlightText(\r\n                                result.comments\r\n                                  .map((c) => c.comment)\r\n                                  .join(\", \"),\r\n                                searchQuery\r\n                              ),\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </ConfigProvider>\r\n        </div>\r\n        <div className=\"w-full\">\r\n          <ActiveAlertsCards\r\n            refreshAlertList={refreshAlertList}\r\n            isElderlyVisible={true}\r\n          />\r\n        </div>\r\n        <div className=\"w-full flex flex-col gap-4 lg3:flex-row\">\r\n          <div className=\"w-full p-0\">\r\n            <div className=\"bg-white rounded-2xl p-6 h-[650px] flex flex-col\">\r\n              <div className=\"flex justify-between items-center mb-5\">\r\n                <h1 className=\"text-2xl font-bold\">Room View</h1>\r\n              </div>\r\n              <div className=\"w-full h-full overflow-y-auto rounded-xl\">\r\n                <NursingHomeRoomView\r\n                  refreshAlertList={refreshAlertList}\r\n                  roomList={roomList}\r\n                  loadingsData={loadingsData}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-white w-full lg3:w-[48%] rounded-2xl p-6 h-[650px] overflow-hidden\">\r\n            <AlertsOverview />\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          id=\"Active_Alerts\"\r\n          className=\"w-full flex flex-col gap-4 justify-center items-center bg-white rounded-2xl p-6\"\r\n        >\r\n          <div\r\n            id=\"Active_Alerts_Header\"\r\n            className=\"w-full flex justify-between\"\r\n          >\r\n            <h1 className=\"text-[24px] font-bold\">Active Notifications</h1>\r\n            <div>\r\n              {/* <ConfigProvider\r\n                theme={{\r\n                  components: {\r\n                    Segmented: {\r\n                      itemSelectedBg: \"#252F67\",\r\n                      itemSelectedColor: \"#fff\",\r\n                      fontFamily: \"Baloo2\",\r\n                    },\r\n                  },\r\n                }}\r\n              >\r\n                <Segmented\r\n                  options={activeAlertSegmentOptions}\r\n                  onChange={(value) => onAlertActiveSegmantChnage(value)}\r\n                />\r\n              </ConfigProvider> */}\r\n            </div>\r\n          </div>\r\n          <div id=\"Active_Alerts_Table\" className=\"w-full\">\r\n            <SidebarContext.Provider\r\n              value={{\r\n                total: activeAlertTotal,\r\n                page: 1,\r\n                SetPage,\r\n              }}\r\n            >\r\n              <CustomTable\r\n                pageSize={6}\r\n                loading={activeAlartLoading}\r\n                tableData={alertList}\r\n                columns={activeAlertTableColumns}\r\n              />\r\n            </SidebarContext.Provider>\r\n          </div>\r\n        </div>\r\n        <div\r\n          id=\"Recently_Closed_Alerts\"\r\n          className=\"w-full flex flex-col gap-4 justify-center items-center bg-white rounded-2xl p-6\"\r\n        >\r\n          <div\r\n            id=\"Recently_Closed_Alerts_Header\"\r\n            className=\"w-full flex justify-between\"\r\n          >\r\n            <h1 className=\"text-[24px] font-bold\">Past Notifications</h1>\r\n            <div>\r\n              {/* <ConfigProvider\r\n                theme={{\r\n                  components: {\r\n                    Segmented: {\r\n                      itemSelectedBg: \"#252F67\",\r\n                      itemSelectedColor: \"#fff\",\r\n                      fontFamily: \"Baloo2\",\r\n                    },\r\n                  },\r\n                }}\r\n              >\r\n                <Segmented\r\n                  options={activeAlertSegmentOptions}\r\n                  onChange={(value) => onAlertHistorySegmantChnage(value)}\r\n                />\r\n              </ConfigProvider> */}\r\n            </div>\r\n          </div>\r\n          <div id=\"Recently_Closed_Alerts_Table\" className=\"w-full\">\r\n            <SidebarContext.Provider\r\n              value={{\r\n                total: recentlyClosedAlert?.length,\r\n                page: page2,\r\n                SetPage: setPage2,\r\n              }}\r\n            >\r\n              <CustomTable\r\n                pageSize={6}\r\n                loading={historyAlartLoading}\r\n                tableData={recentlyClosedAlert}\r\n                columns={recentlyClosedAlertTableColumns}\r\n              />\r\n            </SidebarContext.Provider>\r\n          </div>\r\n        </div>\r\n        <div\r\n          id=\"Events\"\r\n          className=\"w-full flex flex-col gap-4 justify-center items-center bg-white rounded-2xl p-6\"\r\n        >\r\n          <div id=\"Events_Header\" className=\"w-full flex justify-between\">\r\n            <h1 className=\"text-[24px] font-bold\">Events</h1>\r\n          </div>\r\n          <div id=\"Events_Table\" className=\"w-full\">\r\n            <SidebarContext.Provider\r\n              value={{\r\n                total: eventList?.length,\r\n                page: 1,\r\n                SetPage: setEventPage,\r\n                getList: () => getAllEventList,\r\n              }}\r\n            >\r\n              <CustomTable\r\n                pageSize={6}\r\n                tableData={eventList}\r\n                columns={eventsTableColumns}\r\n                // expandable={{\r\n                //   expandedRowRender: (record) => (\r\n                //     <div\r\n                //       style={{ margin: \"0\" }}\r\n                //       className=\"flex gap-14 w-full items-center justify-start px-2\"\r\n                //     >\r\n                //       <div className=\"flex w-[50vw] items-center justify-between\">\r\n                //         <div>\r\n                //           <h2 className=\"text-[16px] font-semibold\">\r\n                //             {record.hospital.name}\r\n                //           </h2>\r\n                //           <p className=\"text-base\">\r\n                //             Phone Number:{\" \"}\r\n                //             {record.hospital.phone\r\n                //               ? record.hospital.phone\r\n                //               : \"Not Available\"}\r\n                //           </p>\r\n                //         </div>\r\n                //         <div className=\"flex items-center gap-2 \">\r\n                //           <a\r\n                //             href={`https://www.google.com/maps?q=${record.hospital.latitude},${record.hospital.longitude}`}\r\n                //             target=\"_blank\"\r\n                //             rel=\"noopener noreferrer\"\r\n                //             className=\"text-base font-medium !text-blue-500\"\r\n                //           >\r\n                //             View on Google Maps\r\n                //           </a>\r\n                //           <LuNavigation size={18} className=\"text-blue-500\" />\r\n                //         </div>\r\n                //       </div>\r\n                //     </div>\r\n                //   ),\r\n                //   rowExpandable: (record) => record.elderlyName !== null,\r\n                //   expandedRowKeys: expandedRowKeys, // Controlled expanded row keys\r\n                //   onExpand: onExpand, // Handle expand/collapse events\r\n                // }}\r\n              />\r\n            </SidebarContext.Provider>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <CreateAndEditModal\r\n        modalOpen={modalOpen}\r\n        setModalOpen={setModalOpen}\r\n        type=\"event\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport const alertViewSegmentOptions = [\r\n  {\r\n    label: ` Map View`,\r\n    value: \"Map View\",\r\n    icon: <AimOutlined />,\r\n  },\r\n  {\r\n    label: \"Room View\",\r\n    value: \"Room View\",\r\n    icon: <HomeOutlined />,\r\n  },\r\n];\r\nexport const activeAlertSegmentOptions = [\r\n  {\r\n    label: \"All Alerts\",\r\n    value: \"All Alerts\",\r\n  },\r\n  {\r\n    label: \"Critical\",\r\n    value: \"Critical\",\r\n  },\r\n  {\r\n    label: \"Warning\",\r\n    value: \"Warning\",\r\n  },\r\n  {\r\n    label: \"Informational\",\r\n    value: \"Info\",\r\n  },\r\n];\r\n"],"names":["PopChildMeasure","React.Component","prevProps","element","size","PopChild","children","isPresent","id","useId","ref","useRef","nonce","useContext","MotionConfigContext","useInsertionEffect","width","height","top","left","style","jsx","React.cloneElement","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","memoizedOnExitComplete","useCallback","childId","isComplete","context","useMemo","_","key","React.useEffect","PresenceContext","getChildKey","child","onlyElements","filtered","Children","isValidElement","AnimatePresence","exitBeforeEnter","presentChildren","presentKeys","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","useIsomorphicLayoutEffect","i","exitingChildren","nextChildren","forceRender","LayoutGroupContext","Fragment","onExit","isEveryExitComplete","isExitComplete","NurseRoomMap","rooms","roomData","setRoomData","timeoutRefs","heartBreathRateRefs","lastHeartBreathTimestamps","settings","dots","jsxs","code","deviceNo","data","decodePosition","_a","prev","_b","person","Slider","room","index","Room2","Room1","Empty","CurrentRateData","deviceIDs","item","deviceData","WebSocketContext","deviceCodes","setData","liveRateData","setLiveRateData","lastUpdate","setLastUpdate","handleDecode","base64Input","decodeHeartBreath","useEffect","interval","newTime","prevData","heartBreath","NursingHomeRoomView","refreshAlertList","roomList","loadingsData","selectedRoom","setSelectedRoom","navigate","useNavigate","openAlertCloseModal","setOpenAlertCloseModal","selectedAlert","setSelectedAlert","setStyle","alertList","setAlertList","loadingAlert","setLoadingAlert","page","setPage","listRef","getAlertListData","getAlertList","dayjs","res","err","handleScroll","scrollTop","scrollHeight","clientHeight","prevPage","getAlertInfoViaEvent","_c","_d","deviceCode","subscribeToMqtt","handleViewClick","row","onCloseModal","unsubscribeFromMqtt","Spin","ind","motion","WebSocketProvider","e","IoClose","_e","alarm","indx","transformDateAndTime","AlertCloseModal","NurseDashboard","modalOpen","setModalOpen","activeAlertTableColumns","useAlertTableColumns","recentlyClosedAlertTableColumns","eventsTableColumns","ls","setRoomList","setLoadingData","eventList","setEventList","eventPage","setEventPage","SetPage","page2","setPage2","recentlyClosedAlert","setRecentlyClosedAlert","historyAlartLoading","setHistoryAlartLoading","activeAlartLoading","setActiveAlartLoading","searchResult","setSearchResult","activeAlertTotal","setActiveAlertTotal","searchQuery","setSearchQuery","isFocused","setIsFocused","getAlertsGroup","getRecentlyClosedAlerts","getAllEventList","getEventList","getRoomListData","getElderliesPriority","getElderlyBySearch","getElderlies","highlightText","text","query","regex","ConfigProvider","Input","result","c","ActiveAlertsCards","AlertsOverview","SidebarContext","CustomTable","CreateAndEditModal","alertViewSegmentOptions","AimOutlined","HomeOutlined","activeAlertSegmentOptions"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}