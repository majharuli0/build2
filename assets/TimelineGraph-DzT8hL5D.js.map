{"version":3,"file":"TimelineGraph-DzT8hL5D.js","sources":["../../src/Components/GraphAndChart/TimelineGraph.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect, useMemo } from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport { Empty } from \"antd\";\r\nimport { SidebarContext } from \"@/Context/CustomContext\";\r\n\r\nconst TimelineChart = ({\r\n  statisticalData = [],\r\n  alarmEvents = [],\r\n  enterBedTime,\r\n  getupAfterTime,\r\n  noDataText = \"No data available to show\",\r\n}) => {\r\n  const { sleepEventsType, sleepEventsColor } = useContext(SidebarContext);\r\n\r\n  const events = useMemo(\r\n    () =>\r\n      [\r\n        ...statisticalData.map((data) => ({\r\n          id: `${data.status}-${data.start_time}-${data.end_time}`,\r\n          name: sleepEventsType[data.status],\r\n          startTime: new Date(data.start_time),\r\n          endTime: new Date(data.end_time),\r\n          color: sleepEventsColor[sleepEventsType[data.status]],\r\n        })),\r\n        ...alarmEvents.map((event) => ({\r\n          id: `${event.event_type}-${event.ts}`,\r\n          name: sleepEventsType[event.event_type],\r\n          startTime: new Date(event.ts),\r\n          endTime: new Date(event.ts),\r\n          color: sleepEventsColor[sleepEventsType[event.event_type]],\r\n        })),\r\n      ].filter((event) => event.name),\r\n    [statisticalData, alarmEvents, sleepEventsType, sleepEventsColor]\r\n  );\r\n\r\n  const uniqueEventNames = useMemo(\r\n    () => [...new Set(events.map((event) => event.name))].filter(Boolean),\r\n    [events]\r\n  );\r\n\r\n  const [visibleEvents, setVisibleEvents] = useState(() => {\r\n    return uniqueEventNames.reduce((acc, eventName) => {\r\n      acc[eventName] = true;\r\n      return acc;\r\n    }, {});\r\n  });\r\n\r\n  useEffect(() => {\r\n    const newEvents = uniqueEventNames.filter(\r\n      (name) => !(name in visibleEvents)\r\n    );\r\n    if (newEvents.length > 0) {\r\n      setVisibleEvents((prev) => ({\r\n        ...prev,\r\n        ...newEvents.reduce((acc, name) => ({ ...acc, [name]: true }), {}),\r\n      }));\r\n    }\r\n  }, [uniqueEventNames, visibleEvents]);\r\n\r\n  const toggleEventVisibility = (eventName) => {\r\n    setVisibleEvents((prev) => ({\r\n      ...prev,\r\n      [eventName]: !prev[eventName],\r\n    }));\r\n  };\r\n\r\n  const filteredEvents = useMemo(\r\n    () => events.filter((event) => visibleEvents[event.name]),\r\n    [events, visibleEvents]\r\n  );\r\n\r\n  const minTime = Math.min(...events.map((event) => event.startTime.getTime()));\r\n  const maxTime = Math.max(...events.map((event) => event.endTime.getTime()));\r\n\r\n  const seriesData = useMemo(\r\n    () =>\r\n      filteredEvents.map((event, index) => {\r\n        const isSingleEvent =\r\n          event.startTime.getTime() === event.endTime.getTime();\r\n        return {\r\n          id: index,\r\n          name: event.name,\r\n          value: [\r\n            event.startTime.getTime(),\r\n            event.endTime.getTime(),\r\n            isSingleEvent ? 15 : 10,\r\n          ],\r\n          itemStyle: {\r\n            color: event.color,\r\n          },\r\n        };\r\n      }),\r\n    [filteredEvents]\r\n  );\r\n\r\n  if (statisticalData?.length === 0) {\r\n    return <Empty description={noDataText} />;\r\n  }\r\n\r\n  const options = {\r\n    tooltip: {\r\n      trigger: \"item\",\r\n      formatter: (params) => {\r\n        const event = filteredEvents[params.data.id];\r\n        const isSingleEvent =\r\n          event.startTime.getTime() === event.endTime.getTime();\r\n        const startTimeLocal = new Date(event.startTime).toLocaleString();\r\n\r\n        if (isSingleEvent) {\r\n          return `${event.name}<br/>Date & Time: ${startTimeLocal}`;\r\n        } else {\r\n          const endTimeLocal = new Date(event.endTime).toLocaleString();\r\n          const durationMs = event.endTime - event.startTime;\r\n          const durationMinutes = Math.floor(durationMs / (1000 * 60));\r\n          const hours = Math.floor(durationMinutes / 60);\r\n          const minutes = durationMinutes % 60;\r\n          const durationStr =\r\n            hours > 0\r\n              ? `${hours} hour(s) ${minutes} minute(s)`\r\n              : `${minutes} minute(s)`;\r\n          return `<b>${event.name}</b> <br/>Start: ${startTimeLocal}<br/>End: ${endTimeLocal}<br/>Duration: ${durationStr}`;\r\n        }\r\n      },\r\n    },\r\n    grid: {\r\n      left: \"5%\",\r\n      right: \"5%\",\r\n      bottom: \"15%\",\r\n      containLabel: false,\r\n    },\r\n    xAxis: {\r\n      type: \"time\",\r\n      boundaryGap: true,\r\n      min: minTime,\r\n      max: maxTime,\r\n      splitNumber: 5,\r\n      axisLabel: {\r\n        formatter: (value) => {\r\n          const date = new Date(value);\r\n          return date.toLocaleTimeString([], {\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n          });\r\n        },\r\n        interval: 0,\r\n        margin: 5,\r\n      },\r\n      axisTick: {\r\n        show: true,\r\n        alignWithLabel: true,\r\n      },\r\n    },\r\n    yAxis: {\r\n      show: false,\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Events\",\r\n        type: \"custom\",\r\n        renderItem: (params, api) => {\r\n          const start = api.coord([api.value(0), 0]);\r\n          const end = api.coord([api.value(1), 0]);\r\n          const barHeight = api.size([0, api.value(2)])[1];\r\n\r\n          // Ensure minimum width for visibility\r\n          const width = Math.max(end[0] - start[0], 5);\r\n\r\n          // Apply consistent offsets for overlapping events\r\n          const offset = params.dataIndex % 10; // Adjust the divisor for fine-tuning\r\n          const yOffset = offset * 3; // Adjust as needed\r\n\r\n          // Calculate the y position to avoid bars \"going up\"\r\n          const yPosition = params.coordSys.height - barHeight + 60 - yOffset;\r\n\r\n          // Ensure yPosition stays within bounds of the chart area\r\n          const safeYPosition = params.coordSys.height - barHeight + 60;\r\n\r\n          return {\r\n            type: \"rect\",\r\n            shape: {\r\n              x: start[0],\r\n              y: safeYPosition,\r\n              width: width,\r\n              height: barHeight,\r\n            },\r\n            style: {\r\n              fill: api.style().fill,\r\n              stroke: \"#fff\",\r\n              lineWidth: 1,\r\n            },\r\n          };\r\n        },\r\n\r\n        encode: {\r\n          x: [0, 1],\r\n        },\r\n        data: seriesData,\r\n      },\r\n    ],\r\n    graphic:\r\n      enterBedTime && getupAfterTime\r\n        ? [\r\n            {\r\n              type: \"text\",\r\n              left: \"5%\",\r\n              bottom: \"1%\",\r\n              style: {\r\n                text: `Enter Bed ${enterBedTime}`,\r\n                fontSize: 12,\r\n              },\r\n            },\r\n            {\r\n              type: \"text\",\r\n              right: \"5%\",\r\n              bottom: \"1%\",\r\n              style: {\r\n                text: `Getup ${getupAfterTime}`,\r\n                fontSize: 12,\r\n              },\r\n            },\r\n          ]\r\n        : [],\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center gap-4 w-full\">\r\n      <div id=\"customLegend\" className=\"w-full\">\r\n        <div className=\"flex flex-wrap gap-4 items-center justify-center\">\r\n          {uniqueEventNames.map((eventName) => (\r\n            <div\r\n              key={eventName}\r\n              className=\"flex items-center gap-2 cursor-pointer\"\r\n              onClick={() => toggleEventVisibility(eventName)}\r\n            >\r\n              <div\r\n                id=\"legendColorShape\"\r\n                className=\"size-3 rounded-[4px] border-2\"\r\n                style={{\r\n                  backgroundColor: visibleEvents[eventName]\r\n                    ? sleepEventsColor[eventName]\r\n                    : \"grey\",\r\n                  borderColor: visibleEvents[eventName]\r\n                    ? \"transparent\"\r\n                    : \"#ccc\",\r\n                  color: visibleEvents[eventName] ? \"grey\" : \"inherit\",\r\n                }}\r\n              ></div>\r\n              <div>{eventName}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <ReactEcharts option={options} style={{ height: 200, width: \"100%\" }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimelineChart;\r\n"],"names":["TimelineChart","statisticalData","alarmEvents","enterBedTime","getupAfterTime","noDataText","sleepEventsType","sleepEventsColor","useContext","SidebarContext","events","useMemo","data","event","uniqueEventNames","visibleEvents","setVisibleEvents","useState","acc","eventName","useEffect","newEvents","name","prev","toggleEventVisibility","filteredEvents","minTime","maxTime","seriesData","index","isSingleEvent","jsx","Empty","options","params","startTimeLocal","endTimeLocal","durationMs","durationMinutes","hours","minutes","durationStr","value","api","start","end","barHeight","width","yOffset","safeYPosition","jsxs","ReactEcharts"],"mappings":"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"}