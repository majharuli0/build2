{"version":3,"file":"SleepingTimeline-8Qwk3_Bc.js","sources":["../../src/Pages/Elderlies/Components/TabContents/Sleep/Components/SleepingTimeline.jsx"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport TimelineGraph from \"@/Components/GraphAndChart/TimelineGraph\";\r\nimport { Button } from \"antd\";\r\nimport { FileOutlined } from \"@ant-design/icons\";\r\nimport SummaryModal from \"@/Components/SummaryModal/SummaryModal\";\r\nimport { FaTimeline } from \"react-icons/fa6\";\r\nimport { getSleepSummary } from \"@/api/deviceReports\";\r\nimport { CustomContext } from \"@/Context/UseCustomContext\";\r\nimport Template from \"@/Components/GraphAndChartTemp/Template\";\r\nimport { transformTime } from \"@/utils/helper\";\r\nimport { SidebarContext } from \"@/Context/CustomContext\";\r\nimport SkeletonSleepingTimeline from \"@/components/Skeleton/SkeletonSleepingTimeline\";\r\nimport { formatTimeWithSuffix } from \"@/utils/helper\";\r\n\r\nconst TimelineItem = ({ time, ItemName, color }) => {\r\n  return (\r\n    <div\r\n      className={`flex p-[4px] pr-4 items-center gap-2 rounded-xl`}\r\n      style={{ backgroundColor: color || \"#FF725E\" }}\r\n    >\r\n      <span className=\"text-[17px] p-2 py-1 font-bold bg-white rounded-[9px] text-primary\">\r\n        {time}\r\n      </span>\r\n      <span className=\"text-[15px] font-medium text-white leading-[1.2]\">\r\n        {ItemName}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function SleepingTimeline() {\r\n  const { sleepData, elderlyDetails, sleepDataLoading } =\r\n    useContext(CustomContext);\r\n  const { sleepEventsType, sleepEventsColor } = useContext(SidebarContext);\r\n  const [events, setEvents] = useState([]);\r\n\r\n  const summaryProps = {\r\n    title: \"Sleep Timeline Summary\",\r\n    pickerTypes: [\"day\", \"range\"],\r\n    chartType: \"multibar\",\r\n    dataType: \"duration\",\r\n    color: \"#FF725E\",\r\n    icon: <FaTimeline />,\r\n    apisProps: {\r\n      endpoint: getSleepSummary,\r\n      query: {\r\n        uids: elderlyDetails?.deviceId,\r\n      },\r\n    },\r\n  };\r\n  function minutesToHoursAndMinutes(minutes) {\r\n    if (minutes == 0) return \"0m\";\r\n    if (minutes < 60) return `${minutes}m`;\r\n    const hours = Math.floor(minutes / 60);\r\n    const mins = minutes % 60;\r\n    return `${hours}hr ${mins}m`;\r\n  }\r\n  // useEffect(() => {\r\n  //   if (!sleepData) return;\r\n  //   const aggregatedEvents = sleepData?.statistical_data?.reduce(\r\n  //     (acc, data) => {\r\n  //       if (data.status === \"3\") return acc;\r\n  //       const startTime = new Date(data.start_time);\r\n  //       const endTime = new Date(data.end_time);\r\n  //       const durationInMinutes = (endTime - startTime) / (1000 * 60);\r\n  //       const statusName = sleepEventsType[data.status];\r\n  //       if (!acc[statusName]) {\r\n  //         acc[statusName] = {\r\n  //           duration: 0,\r\n  //           color: sleepEventsColor[statusName],\r\n  //         };\r\n  //       }\r\n  //       acc[statusName].duration += durationInMinutes;\r\n  //       return acc;\r\n  //     },\r\n  //     {}\r\n  //   );\r\n\r\n  //   const events = Object.entries(aggregatedEvents || {}).map(\r\n  //     ([name, { duration, color }]) => {\r\n  //       const hours = Math.floor(duration / 60);\r\n  //       const minutes = Math.floor(duration % 60);\r\n  //       return {\r\n  //         name,\r\n  //         duration: `${hours}hr ${minutes}m`,\r\n  //         color,\r\n  //       };\r\n  //     }\r\n  //   );\r\n\r\n  //   setEvents([...events]);\r\n  // }, [sleepData, sleepEventsType, sleepEventsColor]);\r\n  function transformSleepData(originalData, sleepEventsType, sleepEventsColor) {\r\n    const transformedData = {};\r\n\r\n    originalData.forEach((item) => {\r\n      const status = item.status;\r\n      const typeName = sleepEventsType[status];\r\n\r\n      transformedData[status] = {\r\n        name: typeName,\r\n        value: Number(item.value) || 0,\r\n        color: sleepEventsColor[typeName] || \"#CCCCCC\",\r\n      };\r\n    });\r\n\r\n    return transformedData;\r\n  }\r\n  useEffect(() => {\r\n    if (sleepData?.sleep_index_common_list) {\r\n      const transformedData = transformSleepData(\r\n        sleepData.sleep_index_common_list,\r\n        sleepEventsType,\r\n        sleepEventsColor\r\n      );\r\n      setEvents(transformedData);\r\n    }\r\n  }, [sleepData, sleepEventsType, sleepEventsColor]);\r\n  return (\r\n    <Template\r\n      title=\"Sleep Timeline\"\r\n      color=\"#FF725E\"\r\n      icon={<FaTimeline />}\r\n      isDataAnalysis={false}\r\n      headerClassName=\"!text-2xl\"\r\n      summaryProps={summaryProps}\r\n    >\r\n      {sleepDataLoading ? (\r\n        <SkeletonSleepingTimeline />\r\n      ) : (\r\n        <>\r\n          <TimelineGraph\r\n            statisticalData={sleepData?.statistical_data}\r\n            enterBedTime={formatTimeWithSuffix(sleepData?.get_bed_idx)}\r\n            getupAfterTime={formatTimeWithSuffix(sleepData?.leave_bed_idx)}\r\n            noDataText=\"No Data Detected for Today\"\r\n          />\r\n          <div className=\"flex flex-wrap gap-4 items-center justify-center\">\r\n            {sleepData && sleepData?.leave_bed_idx && (\r\n              <TimelineItem\r\n                time={formatTimeWithSuffix(sleepData?.sleep_st_idx)}\r\n                ItemName={\"Fell Asleep\"}\r\n                color={\"#AAA492\"}\r\n              />\r\n            )}\r\n\r\n            {/* {events.map((item, i) => (\r\n              <TimelineItem\r\n                key={i}\r\n                time={item.duration}\r\n                ItemName={item.name}\r\n                color={item.color}\r\n              />\r\n            ))} */}\r\n\r\n            {events && events[1] && (\r\n              <TimelineItem\r\n                time={minutesToHoursAndMinutes(events[1]?.value)}\r\n                ItemName={\"Light Sleep\"}\r\n                color={events[1]?.color}\r\n              />\r\n            )}\r\n            {events && events[0] && (\r\n              <TimelineItem\r\n                time={minutesToHoursAndMinutes(events[0]?.value)}\r\n                ItemName={\"Deep Sleep\"}\r\n                color={events[0]?.color}\r\n              />\r\n            )}\r\n            {events && events[7] && (\r\n              <TimelineItem\r\n                time={minutesToHoursAndMinutes(events[7]?.value)}\r\n                ItemName={\"REM\"}\r\n                color={events[7]?.color}\r\n              />\r\n            )}\r\n            {events && events[2] && (\r\n              <TimelineItem\r\n                time={minutesToHoursAndMinutes(events[2]?.value)}\r\n                ItemName={\"Awake After Sleep\"}\r\n                color={events[2]?.color}\r\n              />\r\n            )}\r\n\r\n            {sleepData && (\r\n              <TimelineItem\r\n                time={sleepData?.leave_bed_count + \"x\"}\r\n                ItemName={\"Bed Exit After Sleep\"}\r\n                color={\"#FF725E\"}\r\n              />\r\n            )}\r\n            {sleepData && sleepData?.sleep_ed_idx && (\r\n              <TimelineItem\r\n                time={formatTimeWithSuffix(sleepData?.sleep_ed_idx)}\r\n                ItemName={\"Wake Up\"}\r\n                color={\"#AAA492\"}\r\n              />\r\n            )}\r\n            {/* {sleepData && sleepData?.leave_bed_count && (\r\n              <TimelineItem\r\n                time={sleepData?.leave_bed_count + \"x\"}\r\n                ItemName={\"Leave bed after sleep\"}\r\n                color={\"#FF725E\"}\r\n              />\r\n            )} */}\r\n          </div>\r\n        </>\r\n      )}\r\n    </Template>\r\n  );\r\n}\r\n"],"names":["TimelineItem","time","ItemName","color","jsxs","jsx","SleepingTimeline","sleepData","elderlyDetails","sleepDataLoading","useContext","CustomContext","sleepEventsType","sleepEventsColor","SidebarContext","events","setEvents","useState","summaryProps","FaTimeline","getSleepSummary","minutesToHoursAndMinutes","minutes","hours","mins","transformSleepData","originalData","transformedData","item","status","typeName","useEffect","Template","SkeletonSleepingTimeline","Fragment","TimelineGraph","formatTimeWithSuffix","_a","_b","_c","_d","_e","_f","_g","_h"],"mappings":"0lBAcA,MAAMA,EAAe,CAAC,CAAE,KAAAC,EAAM,SAAAC,EAAU,MAAAC,KAEpCC,EAAA,KAAC,MAAA,CACC,UAAW,kDACX,MAAO,CAAE,gBAAiBD,GAAS,SAAU,EAE7C,SAAA,CAACE,EAAA,IAAA,OAAA,CAAK,UAAU,qEACb,SACHJ,EAAA,EACCI,EAAA,IAAA,OAAA,CAAK,UAAU,mDACb,SACHH,EAAA,CAAA,CAAA,CAAA,EAKN,SAAwBI,GAAmB,qBACzC,KAAM,CAAE,UAAAC,EAAW,eAAAC,EAAgB,iBAAAC,CAAiB,EAClDC,EAAAA,WAAWC,CAAa,EACpB,CAAE,gBAAAC,EAAiB,iBAAAC,CAAiB,EAAIH,aAAWI,CAAc,EACjE,CAACC,EAAQC,CAAS,EAAIC,EAAA,SAAS,CAAE,CAAA,EAEjCC,EAAe,CACnB,MAAO,yBACP,YAAa,CAAC,MAAO,OAAO,EAC5B,UAAW,WACX,SAAU,WACV,MAAO,UACP,WAAOC,EAAW,EAAA,EAClB,UAAW,CACT,SAAUC,EACV,MAAO,CACL,KAAMZ,GAAA,YAAAA,EAAgB,QACxB,CACF,CAAA,EAEF,SAASa,EAAyBC,EAAS,CACrC,GAAAA,GAAW,EAAU,MAAA,KACzB,GAAIA,EAAU,GAAW,MAAA,GAAGA,CAAO,IACnC,MAAMC,EAAQ,KAAK,MAAMD,EAAU,EAAE,EAC/BE,EAAOF,EAAU,GAChB,MAAA,GAAGC,CAAK,MAAMC,CAAI,GAC3B,CAoCS,SAAAC,EAAmBC,EAAcd,EAAiBC,EAAkB,CAC3E,MAAMc,EAAkB,CAAA,EAEX,OAAAD,EAAA,QAASE,GAAS,CAC7B,MAAMC,EAASD,EAAK,OACdE,EAAWlB,EAAgBiB,CAAM,EAEvCF,EAAgBE,CAAM,EAAI,CACxB,KAAMC,EACN,MAAO,OAAOF,EAAK,KAAK,GAAK,EAC7B,MAAOf,EAAiBiB,CAAQ,GAAK,SAAA,CACvC,CACD,EAEMH,CACT,CACAI,OAAAA,EAAAA,UAAU,IAAM,CACd,GAAIxB,GAAA,MAAAA,EAAW,wBAAyB,CACtC,MAAMoB,EAAkBF,EACtBlB,EAAU,wBACVK,EACAC,CAAA,EAEFG,EAAUW,CAAe,CAC3B,CACC,EAAA,CAACpB,EAAWK,EAAiBC,CAAgB,CAAC,EAE/CR,EAAA,IAAC2B,EAAA,CACC,MAAM,iBACN,MAAM,UACN,WAAOb,EAAW,EAAA,EAClB,eAAgB,GAChB,gBAAgB,YAChB,aAAAD,EAEC,SACCT,EAAAJ,EAAAA,IAAC4B,EAAyB,CAAA,CAAA,EAGxB7B,EAAA,KAAA8B,WAAA,CAAA,SAAA,CAAA7B,EAAA,IAAC8B,EAAA,CACC,gBAAiB5B,GAAA,YAAAA,EAAW,iBAC5B,aAAc6B,EAAqB7B,GAAA,YAAAA,EAAW,WAAW,EACzD,eAAgB6B,EAAqB7B,GAAA,YAAAA,EAAW,aAAa,EAC7D,WAAW,4BAAA,CACb,EACAH,EAAAA,KAAC,MAAI,CAAA,UAAU,mDACZ,SAAA,CAAAG,IAAaA,GAAA,YAAAA,EAAW,gBACvBF,EAAA,IAACL,EAAA,CACC,KAAMoC,EAAqB7B,GAAA,YAAAA,EAAW,YAAY,EAClD,SAAU,cACV,MAAO,SAAA,CACT,EAYDQ,GAAUA,EAAO,CAAC,GACjBV,EAAA,IAACL,EAAA,CACC,KAAMqB,GAAyBgB,EAAAtB,EAAO,CAAC,IAAR,YAAAsB,EAAW,KAAK,EAC/C,SAAU,cACV,OAAOC,EAAAvB,EAAO,CAAC,IAAR,YAAAuB,EAAW,KAAA,CACpB,EAEDvB,GAAUA,EAAO,CAAC,GACjBV,EAAA,IAACL,EAAA,CACC,KAAMqB,GAAyBkB,EAAAxB,EAAO,CAAC,IAAR,YAAAwB,EAAW,KAAK,EAC/C,SAAU,aACV,OAAOC,EAAAzB,EAAO,CAAC,IAAR,YAAAyB,EAAW,KAAA,CACpB,EAEDzB,GAAUA,EAAO,CAAC,GACjBV,EAAA,IAACL,EAAA,CACC,KAAMqB,GAAyBoB,EAAA1B,EAAO,CAAC,IAAR,YAAA0B,EAAW,KAAK,EAC/C,SAAU,MACV,OAAOC,EAAA3B,EAAO,CAAC,IAAR,YAAA2B,EAAW,KAAA,CACpB,EAED3B,GAAUA,EAAO,CAAC,GACjBV,EAAA,IAACL,EAAA,CACC,KAAMqB,GAAyBsB,EAAA5B,EAAO,CAAC,IAAR,YAAA4B,EAAW,KAAK,EAC/C,SAAU,oBACV,OAAOC,EAAA7B,EAAO,CAAC,IAAR,YAAA6B,EAAW,KAAA,CACpB,EAGDrC,GACCF,EAAA,IAACL,EAAA,CACC,MAAMO,GAAA,YAAAA,EAAW,iBAAkB,IACnC,SAAU,uBACV,MAAO,SAAA,CACT,EAEDA,IAAaA,GAAA,YAAAA,EAAW,eACvBF,EAAA,IAACL,EAAA,CACC,KAAMoC,EAAqB7B,GAAA,YAAAA,EAAW,YAAY,EAClD,SAAU,UACV,MAAO,SAAA,CACT,CAAA,EASJ,CAAA,EACF,CAAA,CAAA,CAIR"}