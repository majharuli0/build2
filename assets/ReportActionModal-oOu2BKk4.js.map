{"version":3,"file":"ReportActionModal-oOu2BKk4.js","sources":["../../src/Components/ReportActionModal/ReportActionModal.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport { MdReport } from \"react-icons/md\";\r\nimport CustomModal from \"@/Shared/modal/CustomModal\";\r\nimport { TbMessageReportFilled } from \"react-icons/tb\";\r\nimport { updateInstallationReport } from \"@/api/ordersManage\";\r\nimport ls from \"store2\";\r\nexport default function ReportActionModal({ report }) {\r\n  const [open, setOpen] = useState(false);\r\n  const mainRole = ls.get(\"mainRole\");\r\n  const [messages, setMessages] = useState(report?.messages || []);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const chatViewRef = useRef(null);\r\n  const handleSendMessage = async () => {\r\n    const newMessageObj = {\r\n      text: newMessage,\r\n      isInstaller: mainRole === \"installer\",\r\n      time: new Date().toISOString(),\r\n    };\r\n    if (newMessage.trim()) {\r\n      const res = await updateInstallationReport(report?._id, {\r\n        text: newMessage,\r\n        isInstaller: mainRole === \"installer\",\r\n        time: new Date().toISOString(),\r\n      });\r\n      if (res) {\r\n        setMessages([...messages, newMessageObj]);\r\n        setNewMessage(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    if (chatViewRef.current) {\r\n      chatViewRef.current.scrollTop = chatViewRef.current.scrollHeight;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n  return (\r\n    <>\r\n      <TbMessageReportFilled\r\n        size={26}\r\n        onClick={() => setOpen(true)}\r\n        className=\"text-text-secondary cursor-pointer\"\r\n      />\r\n      <CustomModal\r\n        modalOPen={open}\r\n        setModalOpen={setOpen}\r\n        onCancel={() => setOpen(false)}\r\n        title=\"Installation Reports\"\r\n        isBottomButtomShow={false}\r\n      >\r\n        <div\r\n          id=\"ReportChatContainer\"\r\n          className=\"flex flex-col h-[500px] font-baloo\"\r\n        >\r\n          <div\r\n            id=\"chatViewArea\"\r\n            className=\"flex-1 overflow-y-auto p-4 space-y-4\"\r\n            ref={chatViewRef}\r\n          >\r\n            {messages.map((message, index) => (\r\n              <div\r\n                key={index}\r\n                className={`max-w-[70%] p-3 rounded-lg ${\r\n                  message.isInstaller\r\n                    ? \"ml-auto bg-[#6dc29a] text-white\"\r\n                    : \"mr-auto bg-[#80CAA7]/10 text-text-primary\"\r\n                }`}\r\n              >\r\n                <p className=\"text-xs font-bold mb-1\">\r\n                  {mainRole == \"installer\"\r\n                    ? message.isInstaller\r\n                      ? \"You\"\r\n                      : \"Manager\"\r\n                    : message.isInstaller\r\n                    ? \"Installer\"\r\n                    : \"You\"}\r\n                </p>\r\n                <p className=\"text-base mb-2\">{message.text}</p>\r\n                <p\r\n                  className={`text-sm  text-right ${\r\n                    message.isInstaller ? \"text-white\" : \"text-primary\"\r\n                  }`}\r\n                >\r\n                  {new Date(message.time).toDateString() ===\r\n                  new Date().toDateString()\r\n                    ? new Date(message.time).toLocaleTimeString([], {\r\n                        hour: \"2-digit\",\r\n                        minute: \"2-digit\",\r\n                      })\r\n                    : new Date(message.time).toLocaleString([], {\r\n                        hour: \"2-digit\",\r\n                        minute: \"2-digit\",\r\n                        year: \"numeric\",\r\n                        month: \"numeric\",\r\n                        day: \"numeric\",\r\n                      })}\r\n                </p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div id=\"chatInputArea\" className=\"flex p-4 pb-0 border-t\">\r\n            <input\r\n              type=\"text\"\r\n              value={newMessage}\r\n              onChange={(e) => setNewMessage(e.target.value)}\r\n              placeholder=\"Type your message...\"\r\n              className=\"py-[18px] px-4 text-text-primary placeholder:text-[#A3AED0] h-[50px]  rounded-[16px] w-full text-base outline-none   border-[1px] focus:border-primary rounded-r-none border-r-0\"\r\n              onKeyPress={(e) => e.key === \"Enter\" && handleSendMessage()}\r\n            />\r\n            <button\r\n              onClick={handleSendMessage}\r\n              className=\"bg-primary text-white px-8 py-2 rounded-r-[16px] hover:bg-primary focus:outline-none focus:ring-2 \"\r\n            >\r\n              Send\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </CustomModal>\r\n    </>\r\n  );\r\n}\r\n"],"names":["ReportActionModal","report","open","setOpen","useState","mainRole","ls","messages","setMessages","newMessage","setNewMessage","chatViewRef","useRef","handleSendMessage","newMessageObj","updateInstallationReport","scrollToBottom","useEffect","jsxs","Fragment","jsx","TbMessageReportFilled","CustomModal","message","index"],"mappings":"uZAOwB,SAAAA,EAAkB,CAAE,OAAAC,GAAU,CACpD,KAAM,CAACC,EAAMC,CAAO,EAAIC,WAAS,EAAK,EAChCC,EAAWC,EAAG,IAAI,UAAU,EAC5B,CAACC,EAAUC,CAAW,EAAIJ,YAASH,GAAA,YAAAA,EAAQ,WAAY,CAAA,CAAE,EACzD,CAACQ,EAAYC,CAAa,EAAIN,WAAS,EAAE,EACzCO,EAAcC,SAAO,IAAI,EACzBC,EAAoB,SAAY,CACpC,MAAMC,EAAgB,CACpB,KAAML,EACN,YAAaJ,IAAa,YAC1B,KAAM,IAAI,KAAK,EAAE,YAAY,CAAA,EAE3BI,EAAW,QACD,MAAMM,EAAyBd,GAAA,YAAAA,EAAQ,IAAK,CACtD,KAAMQ,EACN,YAAaJ,IAAa,YAC1B,KAAM,IAAI,KAAK,EAAE,YAAY,CAAA,CAC9B,IAECG,EAAY,CAAC,GAAGD,EAAUO,CAAa,CAAC,EACxCJ,EAAc,EAAE,EAEpB,EAGIM,EAAiB,IAAM,CACvBL,EAAY,UACFA,EAAA,QAAQ,UAAYA,EAAY,QAAQ,aACtD,EAGFM,OAAAA,EAAAA,UAAU,IAAM,CACCD,GAAA,EACd,CAACT,CAAQ,CAAC,EAGTW,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAC,EAAA,IAACC,EAAA,CACC,KAAM,GACN,QAAS,IAAMlB,EAAQ,EAAI,EAC3B,UAAU,oCAAA,CACZ,EACAiB,EAAA,IAACE,EAAA,CACC,UAAWpB,EACX,aAAcC,EACd,SAAU,IAAMA,EAAQ,EAAK,EAC7B,MAAM,uBACN,mBAAoB,GAEpB,SAAAe,EAAA,KAAC,MAAA,CACC,GAAG,sBACH,UAAU,qCAEV,SAAA,CAAAE,EAAA,IAAC,MAAA,CACC,GAAG,eACH,UAAU,uCACV,IAAKT,EAEJ,SAASJ,EAAA,IAAI,CAACgB,EAASC,IACtBN,EAAA,KAAC,MAAA,CAEC,UAAW,8BACTK,EAAQ,YACJ,kCACA,2CACN,GAEA,SAAA,CAAAH,EAAA,IAAC,IAAE,CAAA,UAAU,yBACV,SAAAf,GAAY,YACTkB,EAAQ,YACN,MACA,UACFA,EAAQ,YACR,YACA,MACN,EACCH,EAAA,IAAA,IAAA,CAAE,UAAU,iBAAkB,WAAQ,KAAK,EAC5CA,EAAA,IAAC,IAAA,CACC,UAAW,uBACTG,EAAQ,YAAc,aAAe,cACvC,GAEC,aAAI,KAAKA,EAAQ,IAAI,EAAE,iBACpB,IAAA,OAAO,aAAa,EACpB,IAAI,KAAKA,EAAQ,IAAI,EAAE,mBAAmB,GAAI,CAC5C,KAAM,UACN,OAAQ,SAAA,CACT,EACD,IAAI,KAAKA,EAAQ,IAAI,EAAE,eAAe,GAAI,CACxC,KAAM,UACN,OAAQ,UACR,KAAM,UACN,MAAO,UACP,IAAK,SAAA,CACN,CAAA,CACP,CAAA,CAAA,EAnCKC,CAAA,CAqCR,CAAA,CACH,EACCN,EAAA,KAAA,MAAA,CAAI,GAAG,gBAAgB,UAAU,yBAChC,SAAA,CAAAE,EAAA,IAAC,QAAA,CACC,KAAK,OACL,MAAOX,EACP,SAAW,GAAMC,EAAc,EAAE,OAAO,KAAK,EAC7C,YAAY,uBACZ,UAAU,mLACV,WAAa,GAAM,EAAE,MAAQ,SAAWG,EAAkB,CAAA,CAC5D,EACAO,EAAA,IAAC,SAAA,CACC,QAASP,EACT,UAAU,qGACX,SAAA,MAAA,CAED,CAAA,EACF,CAAA,CAAA,CACF,CAAA,CACF,CACF,CAAA,CAAA,CAEJ"}