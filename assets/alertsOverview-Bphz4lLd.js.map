{"version":3,"file":"alertsOverview-Bphz4lLd.js","sources":["../../src/Components/ActiveAlerts/ActiveAlertsCards.jsx","../../src/Pages/Supportnursing/Dashboards/Components/RoomvView/roomAndDetails.jsx","../../src/Pages/Supportnursing/Dashboards/Components/RoomvView/index.jsx","../../src/Pages/Supportnursing/Dashboards/Components/3xLineChart/MultiLineChart.jsx","../../src/Components/WeeklyPicker/WeeklyPicker.jsx","../../src/Pages/Supportnursing/Dashboards/mock.js","../../src/Pages/Supportnursing/Dashboards/Components/AlertsOverview/alertsOverview.jsx"],"sourcesContent":["import React, {\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n  useContext,\r\n} from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport AlertCloseModal from \"@/Components/ActiveAlerts/AlertCloseModal\";\r\nimport AlertBG from \"@/assets/AlertBGABS.svg\";\r\nimport { getAlertList } from \"@/api/elderlySupport\";\r\nimport dayjs from \"dayjs\";\r\nimport {\r\n  getAlertType,\r\n  transformDateAndTime,\r\n  transformDateAndTimeToDuration,\r\n  getAlertInfoViaEvent,\r\n  getAlertsGroup,\r\n} from \"@/utils/helper\";\r\nimport AutoUpdatingDuration from \"@/Components/AutoUpdatingDuration/AutoUpdatingDuration\";\r\nimport { FaUserCircle } from \"react-icons/fa\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { SidebarContext } from \"@/Context/CustomContext\";\r\nimport { useNotification } from \"@/Context/useNotification\";\r\n\r\nexport default function ActiveAlertsCards({\r\n  refreshAlertList,\r\n  isElderlyVisible = false,\r\n  isAlarmViewBtn = false,\r\n}) {\r\n  const { setModalDataList, modalDataList } = useContext(SidebarContext);\r\n  const [openAlertCloseModal, setOpenAlertCloseModal] = useState(false);\r\n  const [selectedAlert, setSelectedAlert] = useState(null);\r\n  const [alertList, setAlertList] = useState([]);\r\n  const PRIORITY_GROUPS = [\"Critical\"];\r\n  const navigate = useNavigate();\r\n  const { notificationEvent } = useNotification();\r\n\r\n  const prevAlertListLength = useRef(0);\r\n  const getAlertListData = useCallback(async () => {\r\n    let allAlerts = [];\r\n    let remainingCount = 30;\r\n\r\n    for (const group of PRIORITY_GROUPS) {\r\n      if (remainingCount <= 0) break;\r\n\r\n      const groupParams = getAlertsGroup(group);\r\n      if (!groupParams) continue;\r\n\r\n      try {\r\n        const response = await getAlertList({\r\n          to_date: \"2024-11-30\",\r\n          from_date: dayjs().format(\"YYYY-MM-DD\"),\r\n          is_resolved: false,\r\n          limit: remainingCount,\r\n          ...groupParams,\r\n        });\r\n\r\n        const fetchedAlerts = response.data || [];\r\n        allAlerts = [...allAlerts, ...fetchedAlerts];\r\n        remainingCount -= fetchedAlerts.length;\r\n\r\n        if (remainingCount <= 0) break;\r\n      } catch (err) {\r\n        console.error(`Error fetching ${group} alerts:`, err);\r\n      }\r\n    }\r\n    // Check if the new alert list length is greater than the previous one\r\n    if (allAlerts.length > prevAlertListLength.current) {\r\n      refreshAlertList();\r\n    }\r\n\r\n    // Update the previous length\r\n    prevAlertListLength.current = allAlerts.length;\r\n    setAlertList(allAlerts);\r\n    // setAlertList([\r\n    //   {\r\n    //     event: 2,\r\n    //   },\r\n    // ]);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAlertListData();\r\n  }, [getAlertListData]);\r\n\r\n  const settings = {\r\n    dots: alertList.length >= 2,\r\n    infinite: alertList.length > 2,\r\n    speed: 500,\r\n    slidesToShow: alertList.length === 1 ? 1 : 2,\r\n    slidesToScroll: 1,\r\n    draggable: true,\r\n    arrows: false,\r\n    appendDots: (dots) => (\r\n      <div\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          borderRadius: \"10px\",\r\n          padding: \"2px\",\r\n        }}\r\n      >\r\n        <ul id=\"dots\" style={{ margin: \"0px\" }}>\r\n          {dots}\r\n        </ul>\r\n      </div>\r\n    ),\r\n    responsive: [\r\n      {\r\n        breakpoint: 1200,\r\n        settings: {\r\n          slidesToShow: alertList.length === 1 ? 1 : 1,\r\n          slidesToScroll: 1,\r\n        },\r\n      },\r\n      {\r\n        breakpoint: 800,\r\n        settings: { slidesToShow: 1, slidesToScroll: 1 },\r\n      },\r\n    ],\r\n  };\r\n\r\n  const handleViewClick = (row) => {\r\n    window.scrollTo(0, 0);\r\n    navigate(\r\n      `/supporter/elderlies/elderly-profile/${row.elderly_id}?tab=overview`\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    if (notificationEvent) {\r\n      getAlertListData();\r\n    }\r\n  }, [notificationEvent]);\r\n  return (\r\n    <>\r\n      {alertList.length > 0 && (\r\n        <div\r\n          id=\"ActiveAlertsCards\"\r\n          className=\"w-full mb-2 transition-all duration-300\"\r\n        >\r\n          <Slider {...settings} className=\"w-full transition-all duration-300\">\r\n            {alertList.map((item, index) => (\r\n              <div\r\n                key={index}\r\n                className=\"px-2 overflow-hidden transition-all duration-300 relative w-full\"\r\n              >\r\n                <div\r\n                  id=\"alertItem\"\r\n                  className={`rounded-2xl overflow-hidden w-full ${\r\n                    getAlertInfoViaEvent(item)?.label === \"Critical\"\r\n                      ? \"bg-red-500\"\r\n                      : getAlertInfoViaEvent(item)?.label === \"Warning\"\r\n                      ? \"bg-yellow-500\"\r\n                      : \"bg-blue-500\"\r\n                  } p-4 w-full flex justify-between items-center`}\r\n                >\r\n                  <div id=\"leftSide\" className=\"z-50\">\r\n                    <div id=\"alertItemHeader\">\r\n                      <div\r\n                        id=\"alertItemTitleAndDescription\"\r\n                        className=\"flex flex-col gap-6\"\r\n                      >\r\n                        <div id=\"time\" className=\"flex gap-2\">\r\n                          {isElderlyVisible && (\r\n                            <span\r\n                              onClick={() => handleViewClick(item)}\r\n                              className=\"bg-white font-semibold p-1 px-2 pl-1 rounded-full text-text-primary flex items-center gap-2 cursor-pointer hover:opacity-90\"\r\n                            >\r\n                              <FaUserCircle\r\n                                size={22}\r\n                                style={{ opacity: \"0.8\" }}\r\n                              />\r\n                              {item?.elderly_name}\r\n                            </span>\r\n                          )}\r\n                          <span className=\"bg-white font-semibold p-1 px-2 rounded-full text-text-primary flex items-center gap-2\">\r\n                            <div\r\n                              id=\"dot\"\r\n                              className={`w-2 h-2 ${\r\n                                getAlertInfoViaEvent(item)?.label === \"Critical\"\r\n                                  ? \"bg-red-500\"\r\n                                  : getAlertInfoViaEvent(item)?.label ===\r\n                                    \"Warning\"\r\n                                  ? \"bg-yellow-500\"\r\n                                  : \"bg-blue-500\"\r\n                              } rounded-full animate-ping`}\r\n                            ></div>\r\n                            {transformDateAndTime(item.created_at)}\r\n                          </span>\r\n                          <span className=\"bg-white font-semibold p-1 px-2 rounded-full text-text-primary\">\r\n                            <AutoUpdatingDuration date={item.created_at} />\r\n                          </span>\r\n                        </div>\r\n                        <div id=\"alertItemTitleAndDescription\">\r\n                          <h1 className=\"text-xl font-bold text-white m-0\">\r\n                            {getAlertInfoViaEvent(item)?.title}\r\n                          </h1>\r\n                          <p className=\"text-white text-base m-0 leading-none\">\r\n                            {getAlertInfoViaEvent(item)?.message}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {isAlarmViewBtn ? (\r\n                    <div id=\"btn\" className=\"z-50 w-fit\">\r\n                      <span\r\n                        onClick={() => {\r\n                          setSelectedAlert(item);\r\n                          navigate(\"/support-nurnt/dashboard/alarm-detail\", {\r\n                            state: { alertData: item, id: item?.elderly_id },\r\n                          });\r\n                        }}\r\n                        className=\"text-sm p-2 px-3 bg-white rounded-xl text-text-primary cursor-pointer hover:bg-white/90 transition-all duration-300 text-nowrap\"\r\n                      >\r\n                        View Alert\r\n                      </span>\r\n                    </div>\r\n                  ) : (\r\n                    <div id=\"rightSide\" className=\"z-50 w-fit\">\r\n                      <span\r\n                        onClick={() => {\r\n                          setSelectedAlert(item);\r\n                          setOpenAlertCloseModal(true);\r\n                        }}\r\n                        className=\"text-sm p-2 px-3 bg-white rounded-xl text-text-primary cursor-pointer hover:bg-white/90 transition-all duration-300 text-nowrap\"\r\n                      >\r\n                        Mark as Complete\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n\r\n                  <img\r\n                    src={AlertBG}\r\n                    alt=\"\"\r\n                    className=\"absolute top-0 right-0\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </Slider>\r\n        </div>\r\n      )}\r\n      <AlertCloseModal\r\n        openAlertCloseModal={openAlertCloseModal}\r\n        setOpenAlertCloseModal={setOpenAlertCloseModal}\r\n        selectedAlert={selectedAlert}\r\n        getAlertListDatas={() => {\r\n          getAlertListData();\r\n          refreshAlertList();\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useCallback, useState, useRef } from \"react\";\r\nimport \"./style.css\";\r\nimport Room1 from \"@/Components/RoomMap/RoomMap3\";\r\nimport Room2 from \"@/Components/RoomMap/RoomMap4\";\r\n\r\nimport {\r\n  transformDateAndTime,\r\n  transformDateAndTimeToDuration,\r\n  getAlertInfoViaEvent,\r\n  decodePosition,\r\n} from \"@/utils/helper\";\r\nimport AutoUpdatingDuration from \"@/Components/AutoUpdatingDuration/AutoUpdatingDuration\";\r\nimport { WebSocketProvider } from \"@/Context/WebSoketHook\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { subscribeToMqtt, unsubscribeFromMqtt } from \"@/api/deviceReports\";\r\nimport useWebSocket from \"@/hook/useWebSoket\";\r\nexport default function RoomAndDetails({ data: roomData = {} }) {\r\n  const navigate = useNavigate();\r\n  const [position, setPosition] = useState(null);\r\n  const previousDeviceRef = useRef(null);\r\n  const heartBreathRateRef = useRef(false);\r\n  const [heartBreathRateActive, setHeartBreathRateActive] = useState(false);\r\n  const timeoutRef = useRef;\r\n  const getBackgroundColor = (type) => {\r\n    switch (type) {\r\n      case \"Info\":\r\n        return \"bg-blue-500\";\r\n      case \"Critical\":\r\n        return \"bg-red-500\";\r\n      case \"Warning\":\r\n        return \"bg-yellow-500\";\r\n      default:\r\n        return \"bg-blue-500\";\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const deviceCode = roomData?.rooms?.device_no;\r\n  //   if (deviceCode) {\r\n  //     if (\r\n  //       previousDeviceRef.current &&\r\n  //       previousDeviceRef.current !== deviceCode\r\n  //     ) {\r\n  //       unsubscribeFromMqtt({\r\n  //         uid: previousDeviceRef.current,\r\n  //         messageType: [\"1\", \"2\", \"3\", \"4\"],\r\n  //       })\r\n  //         .then(() => {})\r\n  //         .catch((err) => console.error(`Error unsubscribing: ${err}`));\r\n  //     }\r\n\r\n  //     // Subscribe to the new device\r\n  //     subscribeToMqtt({\r\n  //       uid: deviceCode,\r\n  //       messageType: [\"1\", \"2\", \"3\", \"4\"],\r\n  //       topics: {\r\n  //         pub: [deviceCode],\r\n  //       },\r\n  //     })\r\n  //       .then(() => {})\r\n  //       .catch((err) => console.error(`Error subscribing: ${err}`));\r\n\r\n  //     // Update the reference to the current device\r\n  //     previousDeviceRef.current = deviceCode;\r\n  //   }\r\n\r\n  //   // Cleanup function for unmount or page exit\r\n  //   return () => {\r\n  //     if (previousDeviceRef.current) {\r\n  //       unsubscribeFromMqtt({\r\n  //         uid: previousDeviceRef.current,\r\n  //         messageType: [\"1\", \"2\", \"3\", \"4\"],\r\n  //       })\r\n  //         .then(() => {})\r\n  //         .catch((err) =>\r\n  //           console.error(`Error during cleanup unsubscribe: ${err}`)\r\n  //         );\r\n  //     }\r\n  //   };\r\n  // }, [roomData]);\r\n\r\n  // function handleDecode(code) {\r\n  //   const data = decodePosition(code);\r\n  //   const modifiedPeopleData = [...data];\r\n\r\n  //   if (\r\n  //     modifiedPeopleData[0]?.postureIndex === 4 &&\r\n  //     heartBreathRateRef.current\r\n  //   ) {\r\n  //     // Modify the first person (index 0) posture\r\n  //     modifiedPeopleData[0].postureIndex = 6;\r\n  //     modifiedPeopleData[0].posture = \"Resident on Bed\";\r\n  //     modifiedPeopleData[0].color = \"#252F67\";\r\n  //   }\r\n\r\n  //   setPosition(modifiedPeopleData);\r\n  // }\r\n  // function handleHeartBreathUpdate() {\r\n  //   setHeartBreathRateActive(true);\r\n  //   heartBreathRateRef.current = true;\r\n\r\n  //   clearTimeout(timeoutRef.current); // Clear any existing timeout\r\n  //   timeoutRef.current = setTimeout(() => {\r\n  //     setHeartBreathRateActive(false);\r\n  //     heartBreathRateRef.current = false;\r\n  //   }, 5000);\r\n  // }\r\n  // useWebSocket({\r\n  //   onMessage: (data) => {\r\n  //     const payload = JSON.parse(data?.message)?.payload;\r\n  //     if (\r\n  //       payload?.deviceCode === roomData?.rooms?.device_no &&\r\n  //       (payload?.position || payload?.heartbreath)\r\n  //     ) {\r\n  //       if (payload?.position) {\r\n  //         handleDecode(payload.position);\r\n  //       }\r\n  //       if (payload?.heartbreath) {\r\n  //         handleHeartBreathUpdate();\r\n  //       }\r\n  //     }\r\n  //   },\r\n  //   dependencies: [roomData],\r\n  // });\r\n  return (\r\n    <div className=\"w-full flex flex-col gap-4 p-4 pr-0 h-full pt-0\">\r\n      <div\r\n        id=\"roomAlertHeader\"\r\n        className={`alert-header !h-[75px] flex justify-between items-center relative px-4 overflow-hidden rounded-lg ${getBackgroundColor(\r\n          getAlertInfoViaEvent(roomData)?.label\r\n        )}`}\r\n      >\r\n        <div className=\"loader\"></div>\r\n        <div className=\"text-container flex flex-col gap-0 h-full justify-center text-white\">\r\n          <p className=\"text-sm text-gray-100 m-0 font-medium\">\r\n            {roomData.room_name}\r\n          </p>\r\n          <h2 className=\"text-lg font-bold m-0 leading-none \">\r\n            {getAlertInfoViaEvent(roomData)?.title}\r\n          </h2>\r\n        </div>\r\n        <span\r\n          onClick={() => {\r\n            navigate(\r\n              `/supporter/elderlies/elderly-profile/${roomData?.elderly_id}`\r\n            );\r\n          }}\r\n          className=\"text-sm text-gray-100 cursor-pointer p-3 py-2 bg-white/0 rounded-lg hover:bg-white/10 transition-all duration-300\"\r\n        >\r\n          View Elderly\r\n        </span>\r\n      </div>\r\n      <div>\r\n        <div className=\"flex flex-col gap-0 border-b border-gray-200 pb-2 \">\r\n          <h2 className=\"text-lg font-bold m-0 leading-none\">\r\n            {roomData.elderly_name}\r\n          </h2>\r\n          <p className=\"text-sm text-gray-500 m-0\">{roomData.address}</p>\r\n        </div>\r\n        <div></div>\r\n      </div>\r\n\r\n      <div id=\"roomMapAndDetails\" className=\"flex gap-4 h-full overflow-hidden\">\r\n        <WebSocketProvider deviceId={roomData?.rooms?.device_no}>\r\n          <div className=\"map-container w-2/3 border overflow-hidden h-full\">\r\n            {roomData?.rooms?.mount_type === 1 &&\r\n              roomData?.rooms?.is_device_bind && (\r\n                <Room1 roomInfo={roomData?.rooms} />\r\n              )}\r\n            {roomData?.rooms?.mount_type === 2 &&\r\n              roomData?.rooms?.is_device_bind && (\r\n                <Room2 roomInfo={roomData?.rooms} />\r\n              )}\r\n            {!roomData?.rooms?.is_device_bind && (\r\n              <span className=\"w-full h-full flex items-center justify-center\">\r\n                <p> No Device Data Available</p>\r\n              </span>\r\n            )}\r\n          </div>\r\n        </WebSocketProvider>\r\n        <div className=\"details-container w-1/3 \">\r\n          <div className=\"flex flex-col gap-0 p-3\">\r\n            <h2 className=\"text-xl font-bold m-0 leading-none\">\r\n              {transformDateAndTime(roomData.created_at)}\r\n            </h2>\r\n            <p className=\"text-sm text-gray-500 m-0 font-medium\">\r\n              Time of Incident\r\n            </p>\r\n          </div>\r\n          <div className=\"flex flex-col gap-0 p-3\">\r\n            <h2 className=\"text-xl font-bold m-0 leading-none\">\r\n              <AutoUpdatingDuration date={roomData.created_at} />\r\n            </h2>\r\n            <p className=\"text-sm text-gray-500 m-0 font-medium\">Alert Life</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useCallback,\r\n  useMemo,\r\n  useContext,\r\n} from \"react\";\r\nimport { Segmented, Badge, Space, Spin, Empty, Collapse } from \"antd\";\r\nimport RoomAndDetails from \"./roomAndDetails\";\r\nimport { getAlertList } from \"@/api/elderlySupport\";\r\nimport { getAlertInfoViaEvent, getAlertsGroup } from \"@/utils/helper\";\r\nimport dayjs from \"dayjs\";\r\nimport debounce from \"lodash/debounce\";\r\nimport { SidebarContext } from \"@/Context/CustomContext\";\r\nimport { useNotification } from \"@/Context/useNotification\";\r\n\r\nconst { Panel } = Collapse;\r\n\r\nexport default function RoomView() {\r\n  const { setModalDataList, modalDataList } = useContext(SidebarContext);\r\n  const { notificationEvent } = useNotification();\r\n\r\n  const [alertType, setAlertType] = useState(\"All\");\r\n  const [alertList, setAlertList] = useState([]);\r\n  const [activeItem, setActiveItem] = useState(null);\r\n  const [selectedAlert, setSelectedAlert] = useState(null);\r\n  const [alertTypeQuery, setAlertTypeQuery] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const listRef = useRef(null);\r\n\r\n  // Fetch alerts from the API\r\n  const getAlertListData = useCallback(() => {\r\n    if (!hasMore || loading) return;\r\n    setLoading(true);\r\n    getAlertList({\r\n      to_date: \"2024-11-30\",\r\n      from_date: dayjs().format(\"YYYY-MM-DD\"),\r\n      is_resolved: false,\r\n      limit: 20,\r\n      show_device_area: 1,\r\n      show_device_boundaries: 1,\r\n      page,\r\n      ...alertTypeQuery,\r\n    })\r\n      .then((res) => {\r\n        setAlertList((prev) => [...prev, ...res.data]);\r\n        if (page >= res.totalPages) {\r\n          setHasMore(false);\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setLoading(false);\r\n      });\r\n  }, [alertTypeQuery, page, hasMore, loading]);\r\n\r\n  useEffect(() => {\r\n    getAlertListData();\r\n  }, [page, alertTypeQuery]);\r\n\r\n  // Set the first alert as selected by default\r\n  useEffect(() => {\r\n    if (alertList.length > 0 && !activeItem) {\r\n      const firstAlert = alertList[0];\r\n      setActiveItem(firstAlert._id);\r\n      setSelectedAlert(firstAlert);\r\n    }\r\n  }, [alertList, activeItem]);\r\n\r\n  // Handle alert selection\r\n  const onChange = (key) => {\r\n    setActiveItem(key);\r\n    const selected = alertList.find((alert) => alert._id === key);\r\n    setSelectedAlert(selected);\r\n  };\r\n\r\n  // Handle scroll for pagination\r\n  const handleScroll = useCallback(\r\n    debounce(() => {\r\n      if (!listRef.current || loading || !hasMore) return;\r\n\r\n      const { scrollTop, scrollHeight, clientHeight } = listRef.current;\r\n      if (scrollTop + clientHeight >= scrollHeight - 50) {\r\n        setPage((prevPage) => prevPage + 1);\r\n      }\r\n    }, 200),\r\n    [loading, hasMore]\r\n  );\r\n\r\n  // Handle segment filter change\r\n  const onSegmentChange = (value) => {\r\n    setAlertTypeQuery(getAlertsGroup(value));\r\n    setPage(1);\r\n    setAlertList([]);\r\n    setHasMore(true);\r\n  };\r\n  useEffect(() => {\r\n    if (notificationEvent) {\r\n      getAlertListData();\r\n    }\r\n  }, [notificationEvent]);\r\n  useEffect(() => {\r\n    const listElement = listRef.current;\r\n    if (listElement) {\r\n      listElement.addEventListener(\"scroll\", handleScroll);\r\n    }\r\n    return () => {\r\n      if (listElement) {\r\n        listElement.removeEventListener(\"scroll\", handleScroll);\r\n      }\r\n    };\r\n  }, [handleScroll]);\r\n\r\n  // Group alerts by room_name using useMemo for performance\r\n  const groupedAlerts = useMemo(() => {\r\n    return alertList.reduce((acc, alert) => {\r\n      const roomName = alert.room_name;\r\n      if (!acc[roomName]) {\r\n        acc[roomName] = [];\r\n      }\r\n      acc[roomName].push(alert);\r\n      return acc;\r\n    }, {});\r\n  }, [alertList]);\r\n\r\n  // Function to map alert type labels to colors\r\n  const getColorForLabel = (label) => {\r\n    switch (label) {\r\n      case \"Critical\":\r\n        return \"red\";\r\n      case \"Warning\":\r\n        return \"orange\";\r\n      case \"Info\":\r\n        return \"blue\";\r\n      default:\r\n        return \"gray\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full flex justify-center items-center h-[495px] overflow-hidden\">\r\n      <div className=\"w-[30%] flex flex-col gap-4 h-full\">\r\n        <Segmented\r\n          style={{ width: \"100%\" }}\r\n          block\r\n          options={segmentsForAlertView}\r\n          onChange={(value) => onSegmentChange(value)}\r\n        />\r\n        <div\r\n          ref={listRef}\r\n          className=\"w-full overflow-auto\"\r\n          style={{ height: \"440px\" }}\r\n        >\r\n          {alertList.length === 0 && !loading && (\r\n            <Empty description=\"No active alerts available\" />\r\n          )}\r\n          {alertList.length > 0 && (\r\n            <Collapse>\r\n              {Object.entries(groupedAlerts).map(([roomName, alerts]) => {\r\n                // Get unique alert types for this room\r\n                const uniqueTypes = [\r\n                  ...new Set(\r\n                    alerts.map((alert) => getAlertInfoViaEvent(alert)?.label)\r\n                  ),\r\n                ];\r\n                return (\r\n                  <Panel\r\n                    key={roomName}\r\n                    header={\r\n                      <div className=\"flex justify-between items-center\">\r\n                        <span className=\"text-black font-semibold\">\r\n                          {roomName}\r\n                        </span>\r\n                        {/* <Space>\r\n                          {uniqueTypes.map((type) => (\r\n                            <Badge key={type} color={getColorForLabel(type)} />\r\n                          ))}\r\n                        </Space> */}\r\n                      </div>\r\n                    }\r\n                  >\r\n                    {alerts &&\r\n                      alerts.map((alert) => (\r\n                        <div\r\n                          key={alert._id}\r\n                          onClick={() => onChange(alert._id)}\r\n                          className={`flex justify-between items-center p-2 cursor-pointer rounded-md px-4 ${\r\n                            activeItem === alert._id ? \"bg-gray-100\" : \"\"\r\n                          }`}\r\n                        >\r\n                          <span className=\"text-[14px] font-semibold\">\r\n                            {dayjs(alert.created_at).format(\"hh:mm:ss a\")}\r\n                          </span>\r\n                          <Badge\r\n                            color={getColorForLabel(\r\n                              getAlertInfoViaEvent(alert)?.label\r\n                            )}\r\n                            size=\"large\"\r\n                          />\r\n                        </div>\r\n                      ))}\r\n                  </Panel>\r\n                );\r\n              })}\r\n            </Collapse>\r\n          )}\r\n          {loading && (\r\n            <div className=\"w-full flex justify-center py-4\">\r\n              <Spin />\r\n            </div>\r\n          )}\r\n          {!hasMore && alertList.length > 0 && (\r\n            <div className=\"w-full text-center py-4 text-gray-500\">\r\n              No more alerts to load\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"w-[70%] h-full\">\r\n        {selectedAlert ? (\r\n          <RoomAndDetails data={selectedAlert} />\r\n        ) : (\r\n          <Empty description=\"Select an alert to view details\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const segmentsForAlertView = [\r\n  { label: \"All\", value: \"All\" },\r\n  { label: \"Critical\", value: \"Critical\" },\r\n  { label: \"Warning\", value: \"Warning\" },\r\n  { label: \"Info\", value: \"Info\" },\r\n];\r\n","import React from \"react\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\nimport \"echarts/lib/chart/line\";\r\nimport { Empty } from \"antd\";\r\nimport dayjs from \"dayjs\";\r\n\r\nexport default function MultiLineChart({ data = [], fromDate, toDate }) {\r\n  // Function to generate week days between fromDate and toDate\r\n  const generateWeekDays = (fromDate, toDate) => {\r\n    const days = [];\r\n    let current = dayjs(fromDate);\r\n    while (current.isBefore(toDate) || current.isSame(toDate, \"day\")) {\r\n      days.push(current.format(\"YYYY-MM-DD\"));\r\n      current = current.add(1, \"day\");\r\n    }\r\n    return days;\r\n  };\r\n\r\n  // Map data into a structured format for the chart\r\n  const weekDays = generateWeekDays(fromDate, toDate);\r\n\r\n  const structuredData = weekDays.map((day) => {\r\n    const critical = data\r\n      .filter((item) => item.date === day && item.alarm_group === \"Critical\")\r\n      .reduce((sum, item) => sum + item.count, 0);\r\n\r\n    const warning = data\r\n      .filter((item) => item.date === day && item.alarm_group === \"Warning\")\r\n      .reduce((sum, item) => sum + item.count, 0);\r\n\r\n    const problem = data\r\n      .filter((item) => item.date === day && item.alarm_group === \"Info\")\r\n      .reduce((sum, item) => sum + item.count, 0);\r\n\r\n    return { day: dayjs(day).format(\"ddd\"), critical, warning, problem };\r\n  });\r\n\r\n  const option = {\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n    },\r\n    grid: {\r\n      left: \"0%\",\r\n      right: \"0%\",\r\n      bottom: \"20%\",\r\n      top: \"10%\",\r\n      containLabel: true,\r\n    },\r\n    legend: {\r\n      show: true,\r\n      orient: \"horizontal\", // Align horizontally\r\n      bottom: \"10%\", // Position at the bottom\r\n    },\r\n    xAxis: {\r\n      type: \"category\",\r\n      data: structuredData.map((item) => item.day),\r\n    },\r\n    yAxis: {\r\n      type: \"value\",\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Critical\",\r\n        type: \"line\",\r\n        data: structuredData.map((item) => item.critical),\r\n        itemStyle: { color: \"#FF0000\" },\r\n        smooth: true,\r\n      },\r\n      {\r\n        name: \"Warning\",\r\n        type: \"line\",\r\n        data: structuredData.map((item) => item.warning),\r\n        itemStyle: { color: \"#FFA500\" },\r\n        smooth: true,\r\n      },\r\n      {\r\n        name: \"Problem\",\r\n        type: \"line\",\r\n        data: structuredData.map((item) => item.problem),\r\n        itemStyle: { color: \"#800080\" },\r\n        smooth: true,\r\n      },\r\n    ],\r\n  };\r\n\r\n  if (!data.length) {\r\n    return (\r\n      <div className=\"h-full flex items-center w-full justify-center\">\r\n        <Empty description=\"No data available to show\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ReactEcharts\r\n      option={option}\r\n      style={{ width: \"100% !important\", height: \"100%\" }}\r\n    />\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { DatePicker, Space } from \"antd\";\r\nimport dayjs from \"dayjs\";\r\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\r\nimport weekOfYear from \"dayjs/plugin/weekOfYear\";\r\n\r\ndayjs.extend(customParseFormat);\r\ndayjs.extend(weekOfYear); // Extend dayjs to use week of year\r\n\r\nconst WeeklyMonthlyPicker = ({ placeholder, style, handleChange, value }) => {\r\n  const [placeholderText, setPlaceholderText] = useState(\"This Week\");\r\n  // Function to format the selected week\r\n  const formatWeek = (value) => {\r\n    const start = dayjs(value).startOf(\"week\").format(\"YYYY-MM-DD\"); // Get start date of week\r\n    const end = dayjs(value).endOf(\"week\").format(\"YYYY-MM-DD\"); // Get end date of week\r\n    return {\r\n      week: dayjs(value).week(),\r\n      start,\r\n      end,\r\n    }; // e.g., { week: 42, start: \"2024-10-15\", end: \"2024-10-21\" }\r\n  };\r\n\r\n  // Function to display the formatted string in the DatePicker\r\n  const displayFormat = (value) => {\r\n    return `Week ${formatWeek(value).week}`; // Return week number for display\r\n  };\r\n  useEffect(() => {\r\n    if (value) {\r\n      const currentWeek = dayjs().week();\r\n      const selectedWeek = dayjs(value.start).week();\r\n\r\n      if (selectedWeek === currentWeek - 1) {\r\n        setPlaceholderText(\"Last Week\");\r\n      } else {\r\n        setPlaceholderText(`Week ${selectedWeek}`);\r\n      }\r\n    } else {\r\n      setPlaceholderText(\"This Week\");\r\n    }\r\n  }, [value]);\r\n  return (\r\n    <DatePicker\r\n      style={style}\r\n      placeholder={placeholderText}\r\n      size=\"large\"\r\n      format={displayFormat} // Use the display format function\r\n      picker={\"week\"}\r\n      onChange={(selectedDate) => {\r\n        if (selectedDate) {\r\n          const formatted = formatWeek(selectedDate);\r\n          handleChange(formatted);\r\n        } else {\r\n          handleChange(\"\");\r\n          setPlaceholderText(\"This Week\");\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default WeeklyMonthlyPicker;\r\n","export const generateRandomAlerts = (count) => {\r\n  const alertTypes = [\"Critical\", \"Info\", \"Warning\"];\r\n  const rooms = [\"Living Room\", \"Kitchen\", \"Bedroom\", \"Bathroom\"];\r\n  const names = [\r\n    \"John Doe\",\r\n    \"Jane Doe\",\r\n    \"Alice Smith\",\r\n    \"Bob Johnson\",\r\n    \"Emma Brown\",\r\n    \"Michael Wilson\",\r\n    \"Sarah Davis\",\r\n    \"David Miller\",\r\n    \"Lisa Garcia\",\r\n    \"James Rodriguez\",\r\n  ];\r\n  const alertNames = [\r\n    \"Fall Detected\",\r\n    \"Fire Detected\",\r\n    \"Inactivity Alert\",\r\n    \"Medication Reminder\",\r\n    \"Unusual Behavior\",\r\n    \"High Temperature\",\r\n    \"Low Temperature\",\r\n    \"Water Leak\",\r\n    \"Door Left Open\",\r\n    \"Window Broken\",\r\n  ];\r\n  const eventNames = [\r\n    \"Medication Taken\",\r\n    \"Medication Not Taken\",\r\n    \"Medication Reminder\",\r\n  ];\r\n  const disabilityTypes = [\"Wheelchair\", \"Crutches\", \"Cane\", \"None\"];\r\n  const allergies = [\"Yes\", \"No\"];\r\n  const diseases = [\"Yes\", \"No\"];\r\n  const medications = [\"Yes\", \"No\"];\r\n  const activeAlert = [\"1\", \"4\", \"2\", \"No\"];\r\n  const isAlert = [\"True\", \"False\"];\r\n  return Array.from({ length: count }, (_, index) => ({\r\n    _id: index + 1,\r\n    alertType: alertTypes[Math.floor(Math.random() * alertTypes.length)],\r\n    elderlyName: names[Math.floor(Math.random() * names.length)],\r\n    alertName: alertNames[Math.floor(Math.random() * alertNames.length)],\r\n    roomId: String(index + 1),\r\n    roomName: rooms[Math.floor(Math.random() * rooms.length)],\r\n    alertLifetime: `${Math.floor(Math.random() * 10)}m ${Math.floor(\r\n      Math.random() * 60\r\n    )}s`,\r\n    time: new Date().toLocaleString(),\r\n    alertDescription: `${\r\n      alertNames[Math.floor(Math.random() * alertNames.length)]\r\n    } in the ${rooms[Math.floor(Math.random() * rooms.length)]}`,\r\n    status: \"Active\",\r\n    isAlert: isAlert[Math.floor(Math.random() * isAlert.length)],\r\n    address: \"123 Main St, Anytown, USA\",\r\n    coordinates: {\r\n      latitude: 37.7749 + (Math.random() - 0.5) * 0.01,\r\n      longitude: -122.4194 + (Math.random() - 0.5) * 0.01,\r\n    },\r\n    //for close alert\r\n    closedAt: new Date().toLocaleString(),\r\n    closedBy: names[Math.floor(Math.random() * names.length)],\r\n    //for event\r\n    eventName: eventNames[Math.floor(Math.random() * eventNames.length)],\r\n    disabilityType:\r\n      disabilityTypes[Math.floor(Math.random() * disabilityTypes.length)],\r\n    additionalInfo: \"This is additional info for event\",\r\n    hospital: {\r\n      name: \"Hospital For Special Surgery\",\r\n      phone: \"1234567890\",\r\n      latitude: -33.8743612,\r\n      longitude: 151.2261153,\r\n    },\r\n    allergies: allergies[Math.floor(Math.random() * allergies.length)],\r\n    diseases: diseases[Math.floor(Math.random() * diseases.length)],\r\n    medications: medications[Math.floor(Math.random() * medications.length)],\r\n    activeAlert: activeAlert[Math.floor(Math.random() * activeAlert.length)],\r\n    alertComments: \"This is alert comments\",\r\n    alertLifespan: [\r\n      {\r\n        dateTime: \"24-01-2024 10:00 AM\",\r\n        description: \"At 10:00 AM, the alert was created\",\r\n      },\r\n      {\r\n        dateTime: \"24-01-2024 10:30 AM\",\r\n        description:\r\n          \"Agent (petar) clicked on the incident in 10:30 (30mins later)\",\r\n      },\r\n      {\r\n        dateTime: \"24-01-2024 10:32 AM\",\r\n        description:\r\n          \"Agent (petar) clicked on “Call Elderly” in 10:32 (2mins later)\",\r\n      },\r\n      {\r\n        dateTime: \"24-01-2024 10:34 AM\",\r\n        description:\r\n          \"Agent (petar) clicked on “Call 911” in 10:34 (2mins later)\",\r\n      },\r\n      {\r\n        dateTime: \"24-01-2024 10:36 AM\",\r\n        description:\r\n          \"Agent (petar) clicked on “Close Alert” in 10:36 (2mins later)\",\r\n      },\r\n    ],\r\n  }));\r\n};\r\nexport const alerts = generateRandomAlerts(14);\r\nexport const activeAlertsTableData = generateRandomAlerts(20);\r\nexport const recentlyClosedAlertsTableData = generateRandomAlerts(20);\r\nexport const eventsTableData = generateRandomAlerts(20);\r\nexport const elderlyListTableData = generateRandomAlerts(20);\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { ConfigProvider } from \"antd\";\r\nimport WeeklyPicker from \"@/Components/WeeklyPicker/WeeklyPicker\";\r\nimport MultiLineChart from \"../../Components/3xLineChart/MultiLineChart\";\r\nimport { getAlertsOverviewGraph } from \"@/api/elderlySupport\";\r\nimport dayjs from \"dayjs\";\r\n\r\nexport default function AlertsOverview() {\r\n  const [fromDate, setFromDate] = useState(\r\n    dayjs().subtract(6, \"days\").format(\"YYYY-MM-DD\")\r\n  );\r\n  const [toDate, setToDate] = useState(dayjs().format(\"YYYY-MM-DD\"));\r\n  const [overviewData, setoverviewData] = useState([]);\r\n  const getAlersOverview = useCallback(() => {\r\n    getAlertsOverviewGraph({\r\n      from_date: toDate,\r\n      to_date: fromDate,\r\n    })\r\n      .then((res) => {\r\n        setoverviewData(res?.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [toDate]);\r\n  useEffect(() => {\r\n    getAlersOverview();\r\n  }, [getAlersOverview]);\r\n\r\n  function handleWeeklyMonthly(e) {\r\n    if (e) {\r\n      setFromDate(e.start);\r\n      setToDate(e.end);\r\n    } else {\r\n      setFromDate(dayjs().subtract(6, \"days\").format(\"YYYY-MM-DD\"));\r\n      setToDate(dayjs().format(\"YYYY-MM-DD\"));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full h-full\">\r\n      <div id=\"ChartHeader\" className=\"w-full flex justify-between\">\r\n        <h1 className=\"text-[24px] font-bold\">Overview</h1>\r\n        <div id=\"chartController\" className=\"flex gap-4\">\r\n          <ConfigProvider\r\n            theme={{\r\n              token: {\r\n                fontFamily: \"Baloo2\",\r\n                colorPrimary: \"#8086AC\",\r\n                colorLinkActive: \"#8086AC\",\r\n                colorLinkHover: \"#8086AC\",\r\n                colorLink: \"#8086AC\",\r\n              },\r\n            }}\r\n          >\r\n            <WeeklyPicker\r\n              style={{ height: \"fit-content\" }}\r\n              handleChange={(e) => handleWeeklyMonthly(e)}\r\n            />\r\n          </ConfigProvider>\r\n        </div>\r\n      </div>\r\n      <div className=\"w-full h-full\">\r\n        <MultiLineChart\r\n          data={overviewData}\r\n          fromDate={fromDate}\r\n          toDate={toDate}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ActiveAlertsCards","refreshAlertList","isElderlyVisible","isAlarmViewBtn","setModalDataList","modalDataList","useContext","SidebarContext","openAlertCloseModal","setOpenAlertCloseModal","useState","selectedAlert","setSelectedAlert","alertList","setAlertList","PRIORITY_GROUPS","navigate","useNavigate","notificationEvent","useNotification","prevAlertListLength","useRef","getAlertListData","useCallback","allAlerts","remainingCount","group","groupParams","getAlertsGroup","fetchedAlerts","getAlertList","dayjs","err","useEffect","settings","dots","jsx","handleViewClick","row","jsxs","Fragment","Slider","item","index","_a","getAlertInfoViaEvent","_b","FaUserCircle","_c","_d","transformDateAndTime","AutoUpdatingDuration","_e","_f","AlertBG","AlertCloseModal","RoomAndDetails","roomData","position","setPosition","heartBreathRateActive","setHeartBreathRateActive","getBackgroundColor","type","WebSocketProvider","Room1","_g","Room2","_h","Panel","Collapse","RoomView","alertType","setAlertType","activeItem","setActiveItem","alertTypeQuery","setAlertTypeQuery","loading","setLoading","page","setPage","hasMore","setHasMore","listRef","res","prev","firstAlert","onChange","key","selected","alert","handleScroll","debounce","scrollTop","scrollHeight","clientHeight","prevPage","onSegmentChange","value","listElement","groupedAlerts","useMemo","acc","roomName","getColorForLabel","label","Segmented","segmentsForAlertView","Empty","alerts","Badge","Spin","MultiLineChart","data","fromDate","toDate","structuredData","days","current","day","critical","sum","warning","problem","option","ReactEcharts","customParseFormat","weekOfYear","WeeklyMonthlyPicker","placeholder","style","handleChange","placeholderText","setPlaceholderText","formatWeek","start","end","displayFormat","currentWeek","selectedWeek","DatePicker","selectedDate","formatted","generateRandomAlerts","count","alertTypes","rooms","names","alertNames","eventNames","disabilityTypes","allergies","diseases","medications","activeAlert","isAlert","_","AlertsOverview","setFromDate","setToDate","overviewData","setoverviewData","getAlersOverview","getAlertsOverviewGraph","handleWeeklyMonthly","e","ConfigProvider","WeeklyPicker"],"mappings":"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"}