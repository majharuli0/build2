{"version":3,"file":"index-Dgxp5ZV7.js","sources":["../../node_modules/antd/es/upload/index.js","../../src/Components/PubTable/CreatEendUser.jsx","../../src/Components/PubTable/SalesAgentAction.jsx","../../src/Pages/Supportnuser/utiles.jsx","../../src/Pages/Supportnuser/index.jsx"],"sourcesContent":["\"use client\";\n\nimport Dragger from './Dragger';\nimport InternalUpload, { LIST_IGNORE } from './Upload';\nconst Upload = InternalUpload;\nUpload.Dragger = Dragger;\nUpload.LIST_IGNORE = LIST_IGNORE;\nexport default Upload;","import React, { useEffect, useState, useRef } from 'react'\r\nimport CustomModal from '@/Shared/modal/CustomModal'\r\nimport { useForm, useFieldArray, Controller } from 'react-hook-form';\r\nimport toast from 'react-hot-toast';\r\nimport CustomToast from '@/Shared/Tosat/CustomToast';\r\nimport CustomInput from '@/Shared/input/CustomInput';\r\nimport Select from '@/Shared/Select/index';\r\nimport { addUsers, updateenldUser, getUserPage } from '@/api/AdminUser'\r\nimport { isEmptyObject } from '@/utils/comFunction'\r\nimport { Upload } from 'antd'\r\nimport { deletUser } from '@/api/AdminUser'\r\nimport DeleteModal from '@/Shared/delete/DeleteModal'\r\nimport XLSX from 'xlsx'\r\n\r\n\r\n\r\nconst CreateAdminSupportAgent = ({ modalOPen, setModalOpen, role = \"\", getlist, item = {}, distributorId = \"\", changeParams = {} }) => {\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n        reset,\r\n        setValue,\r\n        getValues,\r\n        watch,\r\n        control\r\n    } = useForm(\r\n        {\r\n            // 初始化表单的默认值\r\n            defaultValues: {\r\n                testArray: []\r\n            }\r\n        }\r\n\r\n    );\r\n    const { fields, append, remove } = useFieldArray({\r\n        control,\r\n        name: \"testArray\", // 指定数组字段的名称\r\n    });\r\n    const watchedValue = watch(\"Nursing Home\");\r\n    const [title, setTitle] = useState(\"Create Elderly\")\r\n    const [okbtn, setOkbtn] = useState(\"Create Elderly\")\r\n    const [cstatus, setCstatus] = useState(\"create\")\r\n    const [NursingList, setNursingList] = useState([])\r\n    const [AgentIdUserList, setAgentIdUserList] = useState([])\r\n    const [deleteModal, setDeleteModal] = useState(false)\r\n    const [delRole, setDelRole] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n\r\n        if (modalOPen) {\r\n          \r\n            //\r\n           \r\n            if (!isEmptyObject(item)) {\r\n                reset({testArray: []})\r\n            \r\n                setDelRole(item.role)\r\n                setTitle('Edit Elderly')\r\n                setOkbtn('Save')\r\n                const {roomNumber,firstName,lastName}=item\r\n                console.log(\"oitem\",item.roomNumber,item.firstName,item.lastName)\r\n                setTimeout(() => {\r\n                    append({\r\n                        roomNumber, firstName, lastName\r\n                    })\r\n                  }, 500);\r\n            } else {\r\n                reset({testArray: []})\r\n                setTitle('Create Elderly')\r\n                setOkbtn('Create Elderly')\r\n               setTimeout(() => {\r\n                 append({\r\n                    roomNumber: undefined, firstName: undefined, lastName: undefined\r\n                })\r\n               }, 100);\r\n               \r\n            }\r\n        }\r\n\r\n    }, [modalOPen])\r\n\r\n    // // 使用 useEffect 监听特定值的变化\r\n    // useEffect(() => {\r\n    //     // 在这里执行你想要进行的操作，比如打印值\r\n    //     const specificValue = getValues('Nursing Home');\r\n    //     if (specificValue) {\r\n    //         let row1 = NursingList.find(e => e.label == specificValue)\r\n    //         getsupportAgentIdUser(row1?.key)\r\n    //     }\r\n    // }, [watchedValue]); // 传递 getValues 作为 useEffect 的依赖项\r\n\r\n\r\n\r\n\r\n    const onSubmit = (data1) => {\r\n   \r\n\r\n        if (!isEmptyObject(item)) { \r\n            let guests=  data1.guests[0]\r\n            updateenldUser({ ...guests,id:item.id  })\r\n                .then(data => {\r\n                    \r\n                    if (data?.code == \"00000\") {\r\n                        toast.custom((t) => (\r\n                            <CustomToast t={t} text=\"Modified successfully\" />\r\n                        ));\r\n                        setModalOpen(false)\r\n                        getlist()\r\n                        reset()\r\n                    }\r\n                })\r\n        } else {\r\n            addUsers([...data1.guests])\r\n                .then(data => {\r\n           \r\n                    if (data?.code == \"00000\") {\r\n                        toast.custom((t) => (\r\n                            <CustomToast t={t} text={`${item.role} has been created Successfully!`} />\r\n                        ));\r\n                        setModalOpen(false)\r\n                        getlist()\r\n                        reset()\r\n                    }\r\n                })\r\n        }\r\n\r\n\r\n    };\r\n\r\n    const handalDelete1 = () => {\r\n\r\n        setDeleteModal(true)\r\n    }\r\n    const handleAddChange = () => {\r\n        append({ roomNumber: \"\", firstName: \"\", lastName: \"\" });\r\n    }\r\n    const handleExecl = () => {\r\n   \r\n    }\r\n    function transformData(inputData) {\r\n        const columnMapping = {\r\n            A: 'roomNumber', //活泼名称\r\n            B: 'firstName', //货号\r\n            C: 'lastName', //入库数量\r\n\r\n            // 添加其他字母标识的映射\r\n        };\r\n        return Object.keys(inputData).reduce((result, key) => {\r\n\r\n            const column = key.charAt(0);\r\n            const row = key.slice(1);\r\n            const columnName = columnMapping[column] || column;\r\n\r\n            result[`row${row}`] = result[`row${row}`] || {};\r\n            result[`row${row}`][columnName] = inputData[key]?.v;\r\n            return result;\r\n        }, {});\r\n    }\r\n    const successUpload = (datas) => {\r\n        let data = datas.file\r\n\r\n        let bo = true\r\n        let file = datas.file\r\n\r\n        if (file.status !== \"error\") {\r\n            return\r\n        }\r\n\r\n        const fileReader = new FileReader()\r\n        // 读取操作完成时\r\n        fileReader.readAsBinaryString(file.originFileObj)\r\n        fileReader.onload = function (ev) {\r\n         \r\n            try {\r\n\r\n                // 二进制数据\r\n\r\n                bo = false\r\n                const workdatas = ev.target.result\r\n                const workbook = XLSX.read(workdatas, { type: 'binary' })\r\n                let Sheets = workbook.Sheets.Sheet1\r\n                delete Sheets[\"!margins\"]\r\n                delete Sheets[\"!ref\"]\r\n             \r\n\r\n                let myArray = Object.values(transformData(Sheets));\r\n                myArray.shift()\r\n                \r\n                myArray.forEach((item, index) => {\r\n                    append(item)\r\n                })\r\n\r\n                return\r\n\r\n\r\n\r\n            } catch (e) {\r\n           \r\n                return\r\n            }\r\n        }\r\n        // 读取指定文件内容\r\n\r\n\r\n    }\r\n    const props = {\r\n\r\n\r\n        showUploadList: false,\r\n        beforeUpload: false,\r\n        onChange: successUpload,\r\n        // beforeUpload: () => {\r\n        //     return false\r\n        // }\r\n    };\r\n    const Foot = () => {\r\n\r\n        if (isEmptyObject(item)) {\r\n            return (\r\n                <Upload className='w-full' {...props}>\r\n                    <button\r\n                        type=\"button\"\r\n                        style={{ width: \"518px\" }}\r\n                        className=\"mt-[10px] font-[500] text-[14px] h-[40px] w-full hover:border-primary hover:text-primary duration-300 px-5 rounded-[10px] bg-transparent text-[#666D90] border border-gray-300\"\r\n                    >\r\n                        Import from File\r\n                    </button>\r\n                </Upload>\r\n            )\r\n        } else {\r\n            return (\r\n                <div onClick={() => handalDelete1()} className='hover:brightness-110 duration-300  cursor-pointer mt-[7px] w-full text-center pt-[12px] pb-[12px]  pt-[7px] text-onBackWarring rounded-[10px] border border-onBackWarring pt-[7px] '>Delete Distributor</div>\r\n            )\r\n        }\r\n    }\r\n    const handalDelete = async () => {\r\n        setDeleteModal(false)\r\n        // setModalOpen(false)\r\n        deletUser({ id: item.id })\r\n        await getlist()\r\n        setTimeout(() => {\r\n            setModalOpen(false)\r\n            toast.custom((t) => <CustomToast t={t} text={`${item.role} has been successfully deleted`} />);\r\n        }, 900)\r\n    }\r\n\r\n\r\n    return (\r\n        <CustomModal\r\n            modalOPen={modalOPen}\r\n            setModalOpen={setModalOpen}\r\n            handleSubmit={handleSubmit(onSubmit)}\r\n            handalDelete={handalDelete1}\r\n            width={590}\r\n            title={title}\r\n            cstatus={cstatus}\r\n            id={item?.id}\r\n            Foot={<Foot />}\r\n            buttonText={okbtn}\r\n        >\r\n\r\n            {fields.map((field, index) => (\r\n                <div key={index} className='flex items-center gap-4'>\r\n                    <Controller\r\n                        name={`guests[${index}].roomNumber`}\r\n                        control={control}\r\n                        defaultValue={field.roomNumber} // 初始化字段值\r\n                        render={({ field }) => {\r\n                            return (\r\n                                <CustomInput\r\n                                    label={\"Room Number\"}\r\n                                    type={\"text\"}\r\n                                    register={\r\n                                        register(`guests[${index}].roomNumber`, {\r\n                                            required: {\r\n                                                value: true,\r\n                                                message: \"Please enter Room Number\",\r\n                                            },\r\n                                        })\r\n                                    }\r\n                                    error={errors.roomNumber}\r\n                                    placeholder={\"Enter Room Number\"}\r\n\r\n                                />\r\n                            )\r\n                        }}\r\n                    // <input {...field} placeholder=\"Room Number\" />\r\n                    />\r\n                    <Controller\r\n                        name={`guests[${index}].firstName`}\r\n                        control={control}\r\n                        defaultValue={field.firstName} // 初始化字段值\r\n                        render={({ field }) => {\r\n                            return (\r\n                                <CustomInput\r\n                                    label={\"firstName\"}\r\n                                    type={\"text\"}\r\n                                    register={\r\n                                        register(`guests[${index}].firstName`, {\r\n                                            required: {\r\n                                                value: true,\r\n                                                message: \"Please enter first name\",\r\n                                            },\r\n                                        })\r\n                                    }\r\n                                    error={errors.firstName}\r\n                                    placeholder={\"Enter firstName\"}\r\n\r\n                                />\r\n                            )\r\n                        }}\r\n\r\n                    />\r\n                    <Controller\r\n                        name={`guests[${index}].lastName`}\r\n                        control={control}\r\n                        defaultValue={field.lastName} // 初始化字段值\r\n                        render={({ field }) => {\r\n                            return (\r\n                                <CustomInput\r\n                                    label={\"lastName\"}\r\n                                    type={\"text\"}\r\n                                    register={\r\n                                        register(`guests[${index}].lastName`, {\r\n                                            required: {\r\n                                                value: true,\r\n                                                message: \"Please enter lastName\",\r\n                                            },\r\n                                        })\r\n                                    }\r\n                                    error={errors.lastName}\r\n                                    placeholder={\"Enter lastName\"}\r\n\r\n                                />\r\n                            )\r\n                        }}\r\n\r\n                    />\r\n\r\n\r\n                    {/* <CustomInput\r\n                        label={\"firstName\"}\r\n                        type={\"text\"}\r\n                        register={\r\n                            register(\"firstName\", {\r\n                                required: {\r\n                                    value: true,\r\n                                    message: \"Please enter firstName\",\r\n                                },\r\n                            })\r\n                        }\r\n                        error={errors.firstName}\r\n                        placeholder={\"Enter firstName\"}\r\n\r\n                    />\r\n                    <CustomInput\r\n                        label={\"lastName\"}\r\n                        type={\"text\"}\r\n                        register={\r\n                            register(\"lastName\", {\r\n                                required: {\r\n                                    value: true,\r\n                                    message: \"Please enter lastName\",\r\n                                },\r\n                            })\r\n                        }\r\n                        error={errors.lastName}\r\n                        placeholder={\"Enter lastName\"}\r\n\r\n                    /> */}\r\n                </div>\r\n            ))}\r\n            <DeleteModal onDelete={() => handalDelete()} modalOPen={deleteModal} setModalOpen={setDeleteModal}\r\n                title={`Are you sure to delete this ${delRole} account? This`} title2={\" process CAN’T be undo.\"} />\r\n        </CustomModal>\r\n    )\r\n}\r\n\r\nexport default CreateAdminSupportAgent","import { Popover } from \"antd\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport SupportAgentsEdit from \"./SupportAgentsEdit\";\r\nimport SupportAgentsResetPasswordModal from \"./SupportAgentsResetPasswordModal\";\r\nimport DeleteModal from \"@/Shared/delete/DeleteModal\";\r\nimport toast from \"react-hot-toast\";\r\nimport CustomToast from \"@/Shared/Tosat/CustomToast\";\r\nimport CreateAndEditUsers from \"./CreateAndEditUsers\";\r\nimport ManageChildUser from \"../ManageChildUser/ManageChildUser\";\r\nimport { SidebarContext } from \"@/Context/CustomUsertable\";\r\nimport { deletUser, deletElderly } from \"@/api/AdminUser\";\r\nimport { deleteUser, makeDefaultSalesAgent } from \"@/api/Users\";\r\nimport ls from \"store2\";\r\nimport { SidebarContext as SidebarContex2 } from \"@/Context/CustomContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport SuccessModal from \"@/Shared/Success/SuccessModal\";\r\nconst SalesAgentAction = (props) => {\r\n  const { data, handleEmitEvet } = props;\r\n  const [defaultModal, setdDfaultModal] = useState(false);\r\n  const [popupShow, setPopupShow] = useState(false);\r\n  const sharedMethod = useContext(SidebarContext);\r\n  const { rolesFormatter } = useContext(SidebarContex2);\r\n  const [role, setRole] = useState(data?.role);\r\n  const [mainUser, setMainUser] = useState(ls.get(\"user\"));\r\n\r\n  const navigate = useNavigate();\r\n  const handleOpenChange = (newOpen) => {\r\n    setPopupShow(newOpen);\r\n  };\r\n  const handleSetDefault = () => {\r\n    setRole(data.role);\r\n    setdDfaultModal(true);\r\n    setPopupShow(false);\r\n  };\r\n\r\n  // =====Action button Edit Reset Delete=====\r\n  const content = (\r\n    <div className=\"w-fit p-2\">\r\n      <button\r\n        onClick={() => {\r\n          handleSetDefault();\r\n        }}\r\n        disabled={data?.is_default}\r\n        className=\"text-sm w-full flex disabled:opacity-50 disabled:cursor-not-allowed  items-start rounded-[10px] font-medium text-light-black hover:bg-black/10 hover:text-primary py-3 px-5\"\r\n      >\r\n        Set as Default Agent\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n  const handleDefualt = async () => {\r\n    makeDefaultSalesAgent({\r\n      sales_agent_id: data?._id,\r\n      office_id: mainUser?._id,\r\n    })\r\n      .then((res) => {\r\n        toast.custom((t) => <CustomToast t={t} text={res.message} />);\r\n        sharedMethod?.getlist();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div>\r\n          <Popover\r\n            open={popupShow}\r\n            onOpenChange={handleOpenChange}\r\n            content={content}\r\n            placement=\"leftTop\"\r\n            trigger=\"click\"\r\n          >\r\n            <button className=\" hover:bg-primary/10 rounded-full w-[40px] h-[40px] flex items-center justify-center\">\r\n              {/* <Icon icon=\"basil:other-2-outline\" className=\" text-[35px]\"/> */}\r\n              <span\r\n                dangerouslySetInnerHTML={{\r\n                  __html: `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\">\r\n<path d=\"M11 4.875C11.3452 4.875 11.625 5.15482 11.625 5.5C11.625 5.84518 11.3452 6.125 11 6.125C10.6548 6.125 10.375 5.84518 10.375 5.5C10.375 5.15482 10.6548 4.875 11 4.875ZM11 10.375C11.3452 10.375 11.625 10.6548 11.625 11C11.625 11.3452 11.3452 11.625 11 11.625C10.6548 11.625 10.375 11.3452 10.375 11C10.375 10.6548 10.6548 10.375 11 10.375ZM11 15.875C11.3452 15.875 11.625 16.1548 11.625 16.5C11.625 16.8452 11.3452 17.125 11 17.125C10.6548 17.125 10.375 16.8452 10.375 16.5C10.375 16.1548 10.6548 15.875 11 15.875Z\" fill=\"#666D90\" stroke=\"#666D90\" stroke-width=\"1.5\"/>\r\n</svg>`,\r\n                }}\r\n              ></span>\r\n            </button>\r\n          </Popover>\r\n        </div>\r\n      </div>\r\n\r\n      {/* ============= admin delete Modal============ */}\r\n      <SuccessModal\r\n        role={role}\r\n        onOk={() => handleDefualt(data)}\r\n        modalOPen={defaultModal}\r\n        setModalOpen={setdDfaultModal}\r\n        title={`Are you sure to set this ${\r\n          rolesFormatter?.[data?.role]\r\n        } as default agent? This`}\r\n        title2={\"can be changed latter.\"}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SalesAgentAction;\r\n","import React, { useEffect, useRef, useState, useContext } from \"react\";\r\nimport AdminSupportAgentTableAction from \"@/Components/PubTable/AdminSupportAgentTableAction\";\r\nimport AdminFiled from \"@/Shared/AdminFiled/AdminFiled\";\r\nimport { Select, Space, Table, Tag, Switch, Modal, ConfigProvider } from \"antd\";\r\nimport ls from \"store2\";\r\nimport { useCountStore } from \"@/store/index\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { updateUserDetails } from \"@/api/Users\";\r\nimport { MdSignalWifiStatusbarConnectedNoInternet2 } from \"react-icons/md\";\r\nimport ReportActionModal from \"./components/ReportActionModal\";\r\nimport Elderly from \"@/Components/NameCol/Elderly\";\r\nimport { LuNavigation } from \"react-icons/lu\";\r\nimport NursingHomeTableAction from \"@/Components/PubTable/AdminSupportAgentTableAction\";\r\nimport SalesAgentAction from \"@/Components/PubTable/SalesAgentAction\";\r\nimport { formatCreatedAt } from \"../../utils/helper\";\r\n\r\nfunction StatusSwitch({ row }) {\r\n  const [status, setStatus] = useState(row?.status);\r\n  const [handleLoading, sethandleLoading] = useState(false);\r\n  // let status = row?.status\r\n  const handleChange = (value) => {\r\n    sethandleLoading(true);\r\n    updateUserDetails(row?._id, {\r\n      status: value,\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res) {\r\n          setStatus(res?.user?.status);\r\n        }\r\n      })\r\n      .finally(() => {\r\n        sethandleLoading(false);\r\n      });\r\n  };\r\n  // Update local state if row status changes\r\n  useEffect(() => {\r\n    setStatus(row?.status);\r\n  }, [row]);\r\n  return (\r\n    <ConfigProvider\r\n      theme={{\r\n        token: {\r\n          colorText: \"#707EAE\",\r\n          colorPrimary: \"#06A44F\",\r\n          colorLinkActive: \"#8086AC\",\r\n          colorLinkHover: \"#8086AC\",\r\n          colorLink: \"#8086AC\",\r\n        },\r\n      }}\r\n    >\r\n      <Switch\r\n        loading={handleLoading}\r\n        onChange={handleChange}\r\n        handleBg=\"#00000\"\r\n        className=\"bg-slate-200\"\r\n        value={status}\r\n        // defaultChecked\r\n      />\r\n    </ConfigProvider>\r\n  );\r\n}\r\n//Dropdown For Office Status Change\r\nfunction StatusDropdown({ row }) {\r\n  const [status, setStatus] = useState(row?.status);\r\n  const [handleLoading, sethandleLoading] = useState(false);\r\n\r\n  // let status = row?.status\r\n  const handleChange = (value) => {\r\n    sethandleLoading(true);\r\n    updateUserDetails(row?._id, {\r\n      status: value,\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res) {\r\n          setStatus(res?.user?.status);\r\n        }\r\n      })\r\n      .finally(() => {\r\n        sethandleLoading(false);\r\n      });\r\n  };\r\n  // Update local state if row status changes\r\n  useEffect(() => {\r\n    setStatus(row?.status);\r\n  }, [row]);\r\n  return (\r\n    <div className=\"flex items-center space-x-2 mr-0 \">\r\n      {/* Red or green circle based on status */}\r\n      <span\r\n        className={`w-3 h-3 rounded-full relative -right-2 ${\r\n          status == true ? \"bg-[#1EB564]\" : \"bg-red-500\"\r\n        }`}\r\n      ></span>\r\n      {/* Status select dropdown */}\r\n      <ConfigProvider\r\n        theme={{\r\n          token: {\r\n            colorText: \"#707EAE\",\r\n            colorPrimary: \"#8086AC\",\r\n            colorLinkActive: \"#8086AC\",\r\n            colorLinkHover: \"#8086AC\",\r\n            colorLink: \"#8086AC\",\r\n          },\r\n        }}\r\n      >\r\n        <Select\r\n          value={status}\r\n          variant=\"borderless\"\r\n          onChange={handleChange}\r\n          loading={handleLoading}\r\n          optionSelectedColor=\"#8086AC\"\r\n          className=\"w-fit !text-red-100\"\r\n          options={[\r\n            { value: false, label: <span>Disable</span> },\r\n            { value: true, label: <span>Active</span> },\r\n          ]}\r\n        />\r\n      </ConfigProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const useGetColumnsByRoleAndActiveTab = (activeTab) => {\r\n  const [mainRole, setMainRole] = useState(ls.get(\"mainRole\"));\r\n  const [result, setResult] = useState(undefined);\r\n  const { setUserDetil } = useCountStore();\r\n  const navigate = useNavigate();\r\n\r\n  const handelClick = (row, name) => {\r\n    ls.set(\"tableData\", row);\r\n    setUserDetil(row);\r\n    console.log(\"id\", row.id);\r\n    console.log(\"kio\");\r\n\r\n    navigate(`/support-agent/dashboard/suspended-user/${row.id}`);\r\n  };\r\n\r\n  const roleBasedColumns = {\r\n    distributor: {\r\n      office: [\r\n        \"name\",\r\n        \"address\",\r\n        \"contact_person\",\r\n        \"contact_number\",\r\n        \"seles_agent_count\",\r\n        \"end_user_count\",\r\n        \"nursing_home_count\",\r\n        \"monitoring_company_count\",\r\n        \"action\",\r\n      ],\r\n      sales_agent: [\r\n        \"name\",\r\n        // \"office_name\",\r\n        \"address\",\r\n        \"contact_number\",\r\n        \"agent_id\",\r\n        \"nursing_home_count\",\r\n        \"monitoring_company_count\",\r\n        \"end_user_count\",\r\n        \"device_count\",\r\n        \"action\",\r\n      ],\r\n    },\r\n    sales_agent: {\r\n      nursing_home: [\r\n        \"name\",\r\n        \"address\",\r\n        \"contact_person\",\r\n        \"contact_number\",\r\n        \"assigned_nurse_count\",\r\n        \"action\",\r\n      ],\r\n      end_user: [\r\n        \"name\",\r\n        \"address\",\r\n        // \"date\",\r\n        \"contact_number\",\r\n        // \"external_id\",\r\n        // \"products\",\r\n        // \"products_price\",\r\n        // \"addons\",\r\n        // \"addons_price\",\r\n        // \"total_price\",\r\n      ],\r\n      monitoring_station: [\r\n        \"name\",\r\n        \"address\",\r\n        \"contact_person\",\r\n        \"contact_number\",\r\n        \"action\",\r\n      ],\r\n      installer: [\"name\", \"address\", \"contact_number\", \"action\"],\r\n      support_agent: [\"name\", \"address\", \"contact_number\", \"action\"],\r\n    },\r\n    nursing_home: {\r\n      nurse: [\"name\", \"contact_number\", \"action\"],\r\n      elderly: [\r\n        \"elderlyName\",\r\n        \"activeAlert\",\r\n        \"allergies\",\r\n        \"diseases\",\r\n        \"medications\",\r\n        \"viewOnMap\",\r\n      ],\r\n      end_user: [\r\n        \"name\",\r\n        \"address\",\r\n        \"created_date\",\r\n        \"contact_number\",\r\n        \"devices\",\r\n        \"expiry\",\r\n        \"nursing_home_action\",\r\n      ],\r\n    },\r\n    monitoring_station: {\r\n      support_agent: [\"name\", \"address\", \"contact_number\", \"action\"],\r\n      installer: [\"name\", \"address\", \"contact_number\", \"action\"],\r\n      elderly: [\r\n        \"elderlyName\",\r\n        \"activeAlert\",\r\n        \"allergies\",\r\n        \"diseases\",\r\n        \"medications\",\r\n        \"viewOnMap\",\r\n      ],\r\n    },\r\n    nurse: {\r\n      elderly: [\"name\", \"age\", \"alert_count\", \"device_count\"],\r\n    },\r\n    installer: {\r\n      end_user: [\"name\", \"address\", \"contact_number\", \"action\"],\r\n    },\r\n    office: {\r\n      sales_agent: [\r\n        \"name\",\r\n        // \"office_name\",\r\n        \"address\",\r\n        \"contact_number\",\r\n        \"agent_id\",\r\n        \"is_default\",\r\n        \"nursing_home_count\",\r\n        \"monitoring_company_count\",\r\n        \"end_user_count\",\r\n        \"device_count\",\r\n        \"sales_agent_action\",\r\n      ],\r\n      installer: [\"name\", \"address\", \"contact_number\", \"action\"],\r\n    },\r\n  };\r\n\r\n  const allColumns = {\r\n    //common col ========================>\r\n    name: {\r\n      title: (role) => {\r\n        switch (role) {\r\n          case \"office\":\r\n            return \"Office\";\r\n          case \"nurse\":\r\n            return \"Nurse Name\";\r\n          case \"distributor\":\r\n            return \"Distributor Name\";\r\n          case \"sales_agent\":\r\n            return \"Sales Agent Name\";\r\n          case \"nursing_home\":\r\n            return \"Nursing Home\";\r\n          case \"end_user\":\r\n            return \"User Name\";\r\n          case \"monitoring_station\":\r\n            return \"Monitoring Station\";\r\n          case \"support_agent\":\r\n            return \"Support Agent\";\r\n          case \"installer\":\r\n            return \"Installer\";\r\n          default:\r\n            return \"Name\";\r\n        }\r\n      },\r\n      key: \"id\",\r\n      // onCell: (record, rowIndex) => {\r\n      //   return {\r\n      //     onClick: (event) => {\r\n      //       handelClick(record, \"distributorId\");\r\n      //     }, // click row\r\n      //   };\r\n      // },\r\n      render: (row) =>\r\n        row?.role == (\"monitoring_company\", \"elderly\") ? (\r\n          <button>\r\n            <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n              {row.name}\r\n            </span>\r\n          </button>\r\n        ) : (\r\n          <button>\r\n            <AdminFiled data={row} />\r\n          </button>\r\n        ),\r\n    },\r\n    elderlyName: {\r\n      title: \"Elderly Name\",\r\n      render: (row) => <Elderly data={row} />,\r\n    },\r\n    address: {\r\n      title: (role) => {\r\n        switch (role) {\r\n          case \"sales_agent\":\r\n            return \"Address\";\r\n          default:\r\n            return \"Address\";\r\n        }\r\n      },\r\n      render: (row) => (\r\n        <button style={{ width: \"200px\", textAlign: \"left\" }}>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.address}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    installation_address: {\r\n      title: \"Installation Address\",\r\n      render: (row) => (\r\n        <button style={{ width: \"200px\", textAlign: \"left\" }}>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.installation_address}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    activeAlert: {\r\n      title: \"Active Alert\",\r\n      dataIndex: \"unresolved_alarm_count\",\r\n      render: (text) => <span>{text}</span>,\r\n    },\r\n    allergies: {\r\n      title: \"Allergies\",\r\n      render: (row) => (\r\n        <span>\r\n          {row.comments\r\n            ?.filter((comment) => comment.category === \"Allergy\")\r\n            .map((comment) => comment.comment)\r\n            .join(\", \")}\r\n        </span>\r\n      ),\r\n    },\r\n    diseases: {\r\n      title: \"Diseases\",\r\n      render: (row) => <span>{row.diseases?.map((d) => d).join(\", \")}</span>,\r\n    },\r\n    medications: {\r\n      title: \"Medications\",\r\n      render: (row) => (\r\n        <span>{row.medications?.map((d) => d.name).join(\", \")}</span>\r\n      ),\r\n    },\r\n    viewOnMap: {\r\n      title: \"View On Map\",\r\n      render: (row) => (\r\n        <span className=\"flex items-center transition-all duration-300 justify-start gap-2 text-sm font-medium text-text-primary hover:text-primary cursor-pointer p-2 rounded-md w-fit text-center hover:bg-slate-100\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <a\r\n              href={`https://www.google.com/maps?q=${row.latitude},${row.longitude}`}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              className=\"text-base font-medium !text-blue-500\"\r\n            >\r\n              View on Map\r\n            </a>\r\n            <LuNavigation size={18} className=\"text-blue-500\" />\r\n          </div>\r\n        </span>\r\n      ),\r\n    },\r\n    email: {\r\n      title: \"Email Address\",\r\n      render: (row) => (\r\n        <button style={{ width: \"150px\", textAlign: \"left\" }}>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.email}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    expiry: {\r\n      title: \"Is Expire\",\r\n      render: (row) => (\r\n        <button style={{ width: \"150px\", textAlign: \"left\" }}>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.expired}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    devices: {\r\n      title: \"Total Devices\",\r\n      render: (row) => (\r\n        <button style={{ width: \"150px\", textAlign: \"left\" }}>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.devices || 0}x\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    contact_number: {\r\n      title: \"Contact Number\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.contact_number}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    contact_person: {\r\n      title: \"Contact Person\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.contact_person}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    date: {\r\n      title: \"Date of Sales\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.date}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    created_date: {\r\n      title: \"User Since\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {formatCreatedAt(row.created_at)}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    age: {\r\n      title: \"Age\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.age}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    external_id: {\r\n      title: \"External ID\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.date}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    products: {\r\n      title: \"Products\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.products}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    products_price: {\r\n      title: \"Products Price\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.products_price}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    addons: {\r\n      title: \"Addons\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.addons}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    addons_price: {\r\n      title: \"Addons Price\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.addon_price}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    total_price: {\r\n      title: \"Total Price\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.total}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    //count related col ===========================>\r\n    alert_count: {\r\n      title: \"Alert Count\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.alert_count}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    device_count: {\r\n      title: \"Device Count\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.device_count}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    sales_agent_count: {\r\n      title: \"Sales Agents\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.sales_agent}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    end_user_count: {\r\n      title: \"End Users\",\r\n\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.end_user}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    nursing_home_count: {\r\n      title: \"Nursing Homes\",\r\n\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.nursing_home}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    monitoring_company_count: {\r\n      title: \"Monitoring Station\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.monitoring_station}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    assigned_nurse_count: {\r\n      title: \"Assigned Nurse\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.nurse}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    //All Type Of Naming Col ==========================>\r\n    office_name: {\r\n      title: \"Office\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.office_name}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    is_default: {\r\n      title: \"Default Agent\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.is_default ? <Tag color=\"purple\">Default Agent</Tag> : \"\"}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    installer: {\r\n      title: \"Installer Name\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.installer_name}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    //Others ==============================================>\r\n    agent_id: {\r\n      title: \"Agent ID\",\r\n      render: (row) => (\r\n        <button>\r\n          <span className=\" text-[14px] xl:text-base  font-normal text-text-secondary\">\r\n            {row.agent_id}\r\n          </span>\r\n        </button>\r\n      ),\r\n    },\r\n    //action col =====================================>\r\n    status: {\r\n      title: \"Status\",\r\n      render: (row) =>\r\n        row?.role == \"sales_agent\" ? (\r\n          <StatusSwitch row={row} />\r\n        ) : (\r\n          <StatusDropdown row={row} />\r\n        ),\r\n    },\r\n    report: {\r\n      title: \"Report\",\r\n      render: (row) => (\r\n        <div className=\"flex justify-center\">\r\n          <ReportActionModal report={row} />\r\n        </div>\r\n      ),\r\n    },\r\n    status2: {\r\n      title: \"Installation Status\",\r\n      render: (row) => {\r\n        let bgColor;\r\n        switch (row.status) {\r\n          case \"not started\":\r\n            bgColor = \"bg-gray-500\";\r\n            break;\r\n          case \"problem\":\r\n            bgColor = \"bg-red-500\";\r\n            break;\r\n          case \"pending\":\r\n            bgColor = \"bg-yellow-500\";\r\n            break;\r\n          case \"complete\":\r\n            bgColor = \"bg-[#1EB564]\";\r\n            break;\r\n        }\r\n        return (\r\n          <button>\r\n            <span\r\n              className={`text-[14px] xl:text-base capitalize font-semibold font-normal text-white p-2 px-3 ${bgColor} rounded-lg`}\r\n            >\r\n              {row.status}\r\n            </span>\r\n          </button>\r\n        );\r\n      },\r\n    },\r\n    action: {\r\n      title: \"\",\r\n      key: \"id\",\r\n      width: 100,\r\n      render: (row) => <AdminSupportAgentTableAction data={row} />,\r\n    },\r\n    nursing_home_action: {\r\n      title: \"\",\r\n      key: \"id\",\r\n      width: 100,\r\n      render: (row) => <NursingHomeTableAction data={row} />,\r\n    },\r\n    sales_agent_action: {\r\n      title: \"\",\r\n      key: \"id\",\r\n      width: 100,\r\n      render: (row) => <SalesAgentAction data={row} />,\r\n    },\r\n  };\r\n  useEffect(() => {\r\n    // Check role and set the columns accordingly\r\n    if (activeTab == \"Offices\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"office\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"office\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Support Agents\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"support_agent\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"support_agent\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Nursing Homes\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"nursing_home\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"nursing_home\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Sales Agents\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"sales_agent\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"sales_agent\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"End Users\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"end_user\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"end_user\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Installers\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"installer\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"installer\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Monitoring Stations\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow =\r\n        roleBasedColumns[mainRole]?.[\"monitoring_station\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"monitoring_station\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Nurse\") {\r\n      console.log(activeTab);\r\n\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"nurse\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"nurse\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n\r\n      setResult(tableColumns);\r\n    } else if (activeTab == \"Elderly\") {\r\n      // Get the columns to show based on loginRole and userRole\r\n      const columnsToShow = roleBasedColumns[mainRole]?.[\"elderly\"] || [];\r\n      // Map the column keys to actual Ant Design column objects\r\n      const tableColumns = columnsToShow.map((colKey) => {\r\n        const columnConfig = allColumns[colKey];\r\n        return {\r\n          ...columnConfig,\r\n          title:\r\n            columnConfig &&\r\n            (typeof columnConfig.title || columnConfig.address) === \"function\"\r\n              ? columnConfig.title(\"elderly\")\r\n              : columnConfig?.title,\r\n        };\r\n      });\r\n\r\n      setResult(tableColumns);\r\n    }\r\n  }, [activeTab]); // Run this effect whenever `role` changes\r\n\r\n  return result;\r\n};\r\n","import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n  useContext,\r\n} from \"react\";\r\nimport TabMenus from \"@/Components/TabMenus\";\r\nimport ls from \"store2\";\r\nimport AddIcon from \"@/Components/AddIcon\";\r\nimport Sort from \"../../Shared/sort/Sort\";\r\nimport { SidebarContext } from \"@/Context/CustomContext\";\r\nimport CustomButton from \"../../Shared/button/CustomButton\";\r\nimport SearchInput from \"../../Shared/Search/SearchInput\";\r\nimport AdminSupportAgentTable from \"@/Components/PubTable/AdminSupportAgentTable\";\r\n\r\n// import PaymentMethod from \"./components/PaymentMethod\";\r\nimport { getUser } from \"@/api/Users\";\r\nimport { getEndUsers } from \"@/api/ordersManage\";\r\nimport CreatEendUser from \"@/Components/PubTable/CreatEendUser\";\r\nimport CreateAdminSupportAgent from \"@/Components/PubTable/CreateAndEditUsers\";\r\nimport * as SidebarContext1 from \"@/Context/CustomUsertable\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useCountStore } from \"@/store/index\";\r\nimport { useGetColumnsByRoleAndActiveTab } from \"./utiles\";\r\nimport { getElderlies } from \"@/api/elderly\";\r\nimport debounce from \"lodash/debounce\";\r\n\r\nlet roleConfig = {\r\n  NursingHomes: {\r\n    placeholder: \"Search Nursing Home\",\r\n    btnName: \"Add New Nursing Home\",\r\n    menuName: \"Nursing Homes\",\r\n    role: \"nursing_home\",\r\n  },\r\n  SalesAgents: {\r\n    placeholder: \"Search Sales Agents\",\r\n    btnName: \"Add New Sales Agent\",\r\n    menuName: \"Sales Agents\",\r\n    role: \"sales_agent\",\r\n  },\r\n  Offices: {\r\n    placeholder: \"Search Office\",\r\n    btnName: \"Add New Office\",\r\n    menuName: \"Offices\",\r\n    role: \"office\",\r\n  },\r\n  SupportAgents: {\r\n    placeholder: \"Search Support Agents\",\r\n    btnName: \"Add New Support Agents\",\r\n    menuName: \"Support Agents\",\r\n    role: \"supports_agent\",\r\n  },\r\n  EndUsers: {\r\n    placeholder: \"Search End User\",\r\n    btnName: \"Add New End User\",\r\n    menuName: \"End Users\",\r\n    role: \"end_user\",\r\n  },\r\n  MonitoringStations: {\r\n    placeholder: \"Search Monitoring Station\",\r\n    btnName: \"Add New Monitoring Company\",\r\n    menuName: \"Monitoring Stations\",\r\n    role: \"monitoring_station\",\r\n  },\r\n  Installers: {\r\n    placeholder: \"Search Installers\",\r\n    btnName: \"Add New Installer\",\r\n    menuName: \"Installers\",\r\n    role: \"installer\",\r\n  },\r\n  Nurse: {\r\n    placeholder: \"Search Nurse\",\r\n    btnName: \"Add New Nurse\",\r\n    menuName: \"Nurse\",\r\n    role: \"nurse\",\r\n  },\r\n  Elderly: {\r\n    placeholder: \"Search Elderly\",\r\n    btnName: \"\",\r\n    menuName: \"Elderlies\",\r\n    role: \"elderly\",\r\n  },\r\n};\r\n\r\nexport default function AdminDashboard() {\r\n  const { setUserDetil } = useCountStore();\r\n  const navigate = useNavigate();\r\n  const childRef = useRef(false);\r\n  const [page, setPage] = useState({});\r\n  const [title, setTitle] = useState(\"Dashboard\");\r\n  const { role } = useContext(SidebarContext);\r\n  const [mainRole, setMainRole] = useState(ls.get(\"mainRole\"));\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [activeTab, setActiveTab] = useState(\"\");\r\n  const [menuName, setMenuName] = useState(\"\");\r\n  const [btnName, setBtnName] = useState(\"Add New Support Agent\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [selected, setSelected] = useState(\"Time\");\r\n  const [modalOPen, setModalOpen] = useState(false);\r\n  const [modalOPen1, setModalOpen1] = useState(false);\r\n  const [menus, setMenus] = useState([]);\r\n  const [changeParams, setChangeParams] = useState({});\r\n  const [columns, setColumns] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [placeholder, setPlaceholder] = useState(\"Search Nursing Home\");\r\n  const data = [\"Time\", \"Name\"];\r\n  const [loading, setLoading] = useState(false);\r\n  const [query, setQuery] = useState({});\r\n  const [list, setList] = useState([]);\r\n  const handelOpenModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const getCulumns = useGetColumnsByRoleAndActiveTab(activeTab);\r\n  useEffect(() => {\r\n    if (getCulumns) {\r\n      setColumns(getCulumns);\r\n    }\r\n  }, [getCulumns, activeTab]);\r\n\r\n  const [user, SetUser] = useState(ls.get(\"user\"));\r\n\r\n  // Memoized initialization function\r\n  const init = useCallback(() => {\r\n    setTitle(\"Users\");\r\n    setColumns(getCulumns);\r\n\r\n    let role1 = mainRole || user.role;\r\n\r\n    const roleMenus = {\r\n      nursing_home: {\r\n        menus: [{ text: \"Nurse\" }, { text: \"Elderly\" }, { text: \"End Users\" }],\r\n        activeTab: \"Nurse\",\r\n      },\r\n      distributor: {\r\n        menus: [{ text: \"Offices\" }, { text: \"Sales Agents\" }],\r\n        activeTab: \"Offices\",\r\n      },\r\n      office: {\r\n        menus: [{ text: \"Sales Agents\" }, { text: \"Installers\" }],\r\n        activeTab: \"Sales Agents\",\r\n      },\r\n      sales_agent: {\r\n        menus: [\r\n          { text: \"End Users\" },\r\n          { text: \"Nursing Homes\" },\r\n          { text: \"Monitoring Stations\" },\r\n          { text: \"Installers\" },\r\n          { text: \"Support Agents\" },\r\n        ],\r\n        activeTab: \"End Users\",\r\n      },\r\n      monitoring_station: {\r\n        menus: [\r\n          { text: \"Elderly\" },\r\n          { text: \"Installers\" },\r\n          { text: \"Support Agents\" },\r\n        ],\r\n        activeTab: \"Elderly\",\r\n      },\r\n      nurse: { menus: [{ text: \"Elderly\" }], activeTab: \"Elderly\" },\r\n      installer: { menus: [{ text: \"End Users\" }], activeTab: \"End Users\" },\r\n    };\r\n\r\n    if (roleMenus[role1]) {\r\n      const { menus, activeTab } = roleMenus[role1];\r\n      setMenus(menus);\r\n      setActiveTab(activeTab);\r\n    }\r\n  }, [mainRole]);\r\n\r\n  const getList = useCallback(() => {\r\n    if (!query || !query.role || activeTab == \"\") return; // Only call if query is defined\r\n    setLoading(true);\r\n\r\n    if (\r\n      [\"monitoring_station\", \"installer\"].includes(mainRole) &&\r\n      activeTab === \"End Users\"\r\n    ) {\r\n      delete query.role;\r\n      getEndUsers(query)\r\n        .then((data) => {\r\n          setList(data.data);\r\n          setTotal(data.total);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching users:\", error);\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    } else if (\r\n      [\"nursing_home\", \"monitoring_station\"].includes(mainRole) &&\r\n      activeTab === \"Elderly\"\r\n    ) {\r\n      delete query.role;\r\n      getElderlies(query)\r\n        .then((res) => {\r\n          setList(res.data);\r\n          setTotal(res.total);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      getUser(query)\r\n        .then((data) => {\r\n          setList(data.data);\r\n          setTotal(data.total);\r\n        })\r\n        .catch((error) => {\r\n          if (error.code === \"ECONNABORTED\") {\r\n            console.error(\"Request timed out\");\r\n          } else {\r\n            console.error(\"Error fetching users:\", error);\r\n          }\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }, [query, page]);\r\n\r\n  // Setup role based on activeTab\r\n  const setUpRole = useCallback(() => {\r\n    const role = activeTab.replace(/\\s/g, \"\"); // remove spaces\r\n    // Check if roleConfig[role] is defined\r\n    const roleConfigItem = roleConfig[role];\r\n    if (roleConfigItem) {\r\n      const {\r\n        placeholder,\r\n        btnName,\r\n        menuName,\r\n        role: roleFromConfig,\r\n      } = roleConfigItem; // Now it's safe to destructure\r\n\r\n      setPlaceholder(placeholder);\r\n      setBtnName(btnName);\r\n      setMenuName(menuName);\r\n      setQuery({ ...query, role: roleFromConfig });\r\n      setPage({ ...page, page: 1 });\r\n      setChangeParams({ nursingHomeId: user.id });\r\n    } else {\r\n      console.warn(`Role \"${role}\" not found in roleConfig.`); // Optional: log a warning for debugging\r\n    }\r\n  }, [activeTab]);\r\n\r\n  // useEffect to initialize the component\r\n  useEffect(() => {\r\n    init();\r\n  }, [init]);\r\n\r\n  // useEffect to handle activeTab\r\n  useEffect(() => {\r\n    setUpRole();\r\n  }, [setUpRole]);\r\n\r\n  // useEffect to handle list fetching with query and page changes\r\n  useEffect(() => {\r\n    getList();\r\n  }, [getList]);\r\n\r\n  // Handle selected option changes\r\n  useEffect(() => {\r\n    if (selected && query.orderType !== selected) {\r\n      delete query.sort_by_created_at;\r\n      delete query.sort_by_name;\r\n      setQuery({\r\n        ...query,\r\n        ...(selected === \"Name\"\r\n          ? { sort_by_name: -1 }\r\n          : { sort_by_created_at: -1 }),\r\n      });\r\n      setPage({ ...page, page: 1 });\r\n    }\r\n  }, [selected]);\r\n\r\n  // Handle search input blur\r\n  const handleSearchChange = useCallback(\r\n    debounce((value) => {\r\n      setQuery((prev) => ({ ...prev, search: value.trim() }));\r\n      setPage((prev) => ({ ...prev, page: 1 }));\r\n    }, 800), // 500ms delay\r\n    []\r\n  );\r\n  useEffect(() => {\r\n    return () => {\r\n      handleSearchChange.cancel();\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"py-[20px] flex\">\r\n        <TabMenus\r\n          menus={menus}\r\n          activeTab={activeTab}\r\n          setActiveTab={setActiveTab}\r\n        />\r\n      </div>\r\n      <div className=\"\">\r\n        {[\r\n          \"Support Agents\",\r\n          \"Nursing Homes\",\r\n          \"Sales Agents\",\r\n          \"Offices\",\r\n          \"End Users\",\r\n          \"Monitoring Stations\",\r\n          \"Installers\",\r\n          \"Nurse\",\r\n          \"Elderly\",\r\n        ].includes(activeTab) && (\r\n          <div>\r\n            <div className=\" bg-white rounded-2xl overflow-hidden\">\r\n              <div className=\" px-[22px] py-6 flex items-start flex-col lg:flex-row justify-between gap-2\">\r\n                <div className=\" flex items-center justify-between w-full\">\r\n                  <h2 className=\" text-2xl font-bold text-text-primary\">\r\n                    {menuName}\r\n                  </h2>\r\n                </div>\r\n                <div className=\" flex items-center justify-end gap-5 w-full\">\r\n                  {/* =====Search sort and add admin button===== */}\r\n                  <SearchInput\r\n                    search={search}\r\n                    setSearch={(value) => {\r\n                      setSearch(value);\r\n                      handleSearchChange(value);\r\n                    }}\r\n                    placeholder={placeholder}\r\n                  />\r\n\r\n                  <Sort\r\n                    query={query}\r\n                    setQuery={setQuery}\r\n                    selected={selected}\r\n                    setSelected={setSelected}\r\n                    data={data}\r\n                  />\r\n\r\n                  {[\"Elderly\", \"Sales Agents\", \"End Users\"].includes(\r\n                    activeTab\r\n                  ) &&\r\n                  [\r\n                    \"installer\",\r\n                    \"monitoring_station\",\r\n                    \"office\",\r\n                    \"sales_agent\",\r\n                    \"nursing_home\",\r\n                  ].includes(mainRole) ? null : (\r\n                    <CustomButton\r\n                      onClick={() => handelOpenModal()}\r\n                      className={\" hidden lg:flex min-w-[80px]\"}\r\n                    >\r\n                      <AddIcon /> {btnName}\r\n                    </CustomButton>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\" grid grid-cols-1\">\r\n                <SidebarContext1.SidebarContext.Provider\r\n                  value={{\r\n                    role: query.role,\r\n                    getlist: getList,\r\n                    query,\r\n                    total,\r\n                    page,\r\n                    setPage,\r\n                  }}\r\n                >\r\n                  <AdminSupportAgentTable\r\n                    loading={loading}\r\n                    tableData={list}\r\n                    columns={columns}\r\n                    getlist={getList}\r\n                  />\r\n                </SidebarContext1.SidebarContext.Provider>\r\n              </div>\r\n            </div>\r\n            <CreateAdminSupportAgent\r\n              item={{}}\r\n              changeParams={changeParams}\r\n              getlist={getList}\r\n              role={query.role}\r\n              modalOPen={modalOPen}\r\n              setModalOpen={setModalOpen}\r\n              parentID={user._id}\r\n            />\r\n          </div>\r\n        )}\r\n        {/* {activeTab == \"Elderlies\" && (\r\n          <PaymentMethod\r\n            changeParams={changeParams}\r\n            getlist={getList}\r\n            query={query}\r\n            role={role}\r\n            activeTab={activeTab}\r\n          />\r\n        )} */}\r\n      </div>\r\n      <CreatEendUser modalOPen={modalOPen1} setModalOpen={setModalOpen1} />\r\n    </div>\r\n  );\r\n}\r\n\r\n// export default AdminDashboard;\r\n"],"names":["Upload","InternalUpload","Dragger","LIST_IGNORE","CreateAdminSupportAgent","modalOPen","setModalOpen","role","getlist","item","distributorId","changeParams","register","handleSubmit","errors","reset","setValue","getValues","watch","control","useForm","fields","append","useFieldArray","title","setTitle","useState","okbtn","setOkbtn","cstatus","setCstatus","NursingList","setNursingList","AgentIdUserList","setAgentIdUserList","deleteModal","setDeleteModal","delRole","setDelRole","useEffect","isEmptyObject","roomNumber","firstName","lastName","onSubmit","data1","addUsers","data","toast","t","jsx","CustomToast","guests","updateenldUser","handalDelete1","transformData","inputData","columnMapping","result","key","column","row","columnName","_a","props","datas","bo","file","fileReader","ev","workdatas","Sheets","XLSX","myArray","index","Foot","handalDelete","deletUser","jsxs","CustomModal","field","Controller","CustomInput","DeleteModal","SalesAgentAction","handleEmitEvet","defaultModal","setdDfaultModal","popupShow","setPopupShow","sharedMethod","useContext","SidebarContext","rolesFormatter","SidebarContex2","setRole","mainUser","setMainUser","ls","useNavigate","handleOpenChange","newOpen","handleSetDefault","content","handleDefualt","makeDefaultSalesAgent","res","err","Fragment","Popover","SuccessModal","StatusSwitch","status","setStatus","handleLoading","sethandleLoading","handleChange","value","updateUserDetails","ConfigProvider","Switch","StatusDropdown","Select","useGetColumnsByRoleAndActiveTab","activeTab","mainRole","setMainRole","setResult","setUserDetil","useCountStore","roleBasedColumns","allColumns","AdminFiled","Elderly","text","comment","d","LuNavigation","formatCreatedAt","Tag","ReportActionModal","bgColor","AdminSupportAgentTableAction","NursingHomeTableAction","tableColumns","colKey","columnConfig","_b","_c","_d","_e","_f","_g","_h","_i","roleConfig","AdminDashboard","useRef","page","setPage","isModalOpen","setIsModalOpen","setActiveTab","menuName","setMenuName","btnName","setBtnName","search","setSearch","selected","setSelected","modalOPen1","setModalOpen1","menus","setMenus","setChangeParams","columns","setColumns","total","setTotal","placeholder","setPlaceholder","loading","setLoading","query","setQuery","list","setList","handelOpenModal","getCulumns","user","SetUser","init","useCallback","role1","roleMenus","getList","getEndUsers","error","getElderlies","getUser","setUpRole","roleConfigItem","roleFromConfig","handleSearchChange","debounce","prev","TabMenus","SearchInput","Sort","CustomButton","AddIcon","SidebarContext1.SidebarContext","AdminSupportAgentTable","CreatEendUser"],"mappings":"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","x_google_ignoreList":[0]}